<?xml version="1.0" encoding="utf-8"?>
<plib><namespace name="" path="."><module><name>plibcli.php</name><path>plibcli.php</path><namespace/><classpath>plibcli</classpath><docblock><description><![CDATA[<p>PHP Command Line Interface helper functions</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.2]]></version><since><![CDATA[PLib 0.1.8]]></since><package><![CDATA[PLib]]></package><subpackage><![CDATA[CLI]]></subpackage></docblock><class><name>Getoptlong</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Getoptlong</string><implements/><docblock><description><![CDATA[<p>A simple command line options parser</p>

<div class='code'><code><span style='color: #0099CC;'>#----------------------------------------------------------</span><br/><span style='color: #0099CC;'>#&#160;Say&#160;this&#160;has&#160;been&#160;invoked&#160;on&#160;the&#160;command&#160;line...</span><br/><span style='color: #0099CC;'>#----------------------------------------------------------</span><br/><span style='color: #0099CC;'>#</span><br/><span style='color: #0099CC;'>#&#160;user@machine:~/bin/mycli&#160;-f&#160;xml&#160;--charset=iso-8859-1&#160;-cq</span><br/><span style='color: #0099CC;'>#</span><br/><span style='color: #0099CC;'>#----------------------------------------------------------</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;mycli</span><br/>&#160;<br/><span style='color: #990000;'><b>$opts</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Getoptlong<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;f|--format&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;c|--charset&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;h|--help&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;c&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;q&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;h&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;help<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;and&#160;exit<span style='color: #0000FF;'>(</span><span style='color: purple;'>0</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$format</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;f&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>false</b></span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;help<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;and&#160;exit<span style='color: #0000FF;'>(</span><span style='color: purple;'>0</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #990000;'><b>$charset</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #008800;'>&#39;utf-8&#39;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;c&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #990000;'><b>$charset</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;c&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;Alternative&#160;ways&#160;of&#160;usage</span><br/>&#160;<br/><span style='color: #000099;'><b>foreach</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Options<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>as</b></span>&#160;<span style='color: #990000;'><b>$key</b></span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #990000;'><b>$val</b></span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>switch</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$key</b></span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #008800;'>&#39;h&#39;</span><span style='color: #0000FF;'>:</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;usage<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;exit<span style='color: #0000FF;'>(</span><span style='color: purple;'>0</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #008800;'>&#39;q&#39;</span><span style='color: #0000FF;'>:</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><br/>&#160;&#160;<span style='color: #0000FF;'>}</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;-------</span><br/>&#160;<br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>false</b></span>&#160;<span style='color: #0000FF;'>!</span><span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>=</span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$opt</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$opts</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Next<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>switch</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$opt</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;key&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #008800;'>&#39;h&#39;</span><span style='color: #0000FF;'>:</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><br/>&#160;&#160;<span style='color: #0000FF;'>}</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[PLib]]></package><subpackage><![CDATA[CLI]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Getoptlong</declaring-class><inherited/><string>public __construct($args)</string><docblock><description><![CDATA[<p>Any number of arguments can be passed to the constructor. If both short
and long options can be used for an option separate them with a pipe:</p>

<p><code>$opts = new Getoptlong('v|--verbose', 'h|--help');</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Getoptlong</declaring-class><inherited/><string>public Get($index)</string><docblock><description><![CDATA[<p>Get the index $index from the options array. Returns FALSE if the index
doesn't exist</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Options</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Getoptlong</declaring-class><inherited/><string>public Options()</string><docblock><description><![CDATA[<p>Returns the options array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Getoptlong</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Return the current key and value pair from an array and advance the array
cursor in the options array</p>]]></description><see><types><type><![CDATA[<a href='http://php.net/each'>each()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reset</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Getoptlong</declaring-class><inherited/><string>public Reset()</string><docblock><description><![CDATA[<p>Reset the options array if <a href='?__plibclass=Getoptlong#method-Next'>Getoptlong::Next()</a> has been used</p>]]></description></docblock><params/></method></methods><properties><property><name>options</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $options</string><docblock><description><![CDATA[<p>Where we keep the result after parsing the options</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>Stdin</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Stdin</string><implements/><docblock><description><![CDATA[<p>Reads from stdin, i.e. the keyboard in most cases.</p>

<div class='code'><code><span style='color: #990000;'><b>$stdin</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Stdin<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$continue</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;null<span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Do&#160;you&#160;want&#160;to&#160;continue?&#160;[Y/n]:&#160;&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$line</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$stdin</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Read<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #ff0000;'>preg_match</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/y(es)?/i&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$line</b></span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>|</span><span style='color: #0000FF;'>|</span>&#160;<span style='color: #000099;'><b>empty</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$line</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$continue</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>true</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>else</b></span><br/>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$continue</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>false</b></span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><since><![CDATA[plibcli 0.2]]></since><package><![CDATA[PLib]]></package><subpackage><![CDATA[CLI]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Stdin</declaring-class><inherited/><string>public __construct()</string><docblock><description><![CDATA[<p>Creates a new instance of Stdin</p>]]></description></docblock><params/></method><method><name>Read</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Stdin</declaring-class><inherited/><string>public Read([$trim=1])</string><docblock><description><![CDATA[<p>Read from stdin.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$trim]]></variable><description><![CDATA[<p>Trims the string by default</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>trim</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$trim=1</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Stdin</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor. Closes the file handler resource</p>]]></description></docblock><params/></method></methods><properties><property><name>fh</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fh</string><docblock><description><![CDATA[<p>The file handler resource</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><function><name>cwrite</name><internal/><reference/><string>cwrite([$args])</string><docblock><description><![CDATA[<p>Searches the output for colorizing instructions and colorize the output
to the cli if pattern matching occurs.</p>

<p>Example: <code>This is a RED:red word</code><br/>
Result: This is a <span style='color:red'>red word</span></p>

<p>If bold text is desired prefix the COLOR with a B.</p>

<p>Example: <code>This is a BRED:bold red wordNONE: I promise</code><br/>
Result: This is a <span style='color:red'><b>bold red word</b></span>
I promise</p>

<p>To stop colorized output just write NONE: (see the example above).</p>

<p><strong>AVAILABLE COLORS:</strong></p>

<ul>
<li><code>RED    | BRED</code></li>
<li><code>GRAY   | BGRAY</code></li>
<li><code>BLUE   | BBLUE</code></li>
<li><code>PURPLE | BPURPLE</code></li>
<li><code>GREEN  | BGREEN</code></li>
<li><code>BLACK  | BBLACK</code></li>
</ul>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Works like {@link sprintf()}</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></function><function><name>cprint</name><internal/><reference/><string>cprint([$args])</string><docblock><description><![CDATA[<p>Exactly like {@see cwrite()} except <code>cprint</code> doesn't print a newline.</p>]]></description><since><![CDATA[plibcli 0.2]]></since><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>See {@link sprintf()}</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></function><function><name>_cli_colorize</name><internal/><reference/><string>_cli_colorize($m)</string><docblock><description><![CDATA[<p>Callback for the colorizing pattern matching</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$m]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>m</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$m</string></param></params></function></module><module><name>PLib.php</name><path>PLib.php</path><namespace/><classpath>PLib</classpath><docblock><description><![CDATA[<p>PLib (Poppa PHP Library) is a set of PHP classes to make everyday PHP
programming a little bit easier.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.2]]></version><package><![CDATA[PLib]]></package><example><![CDATA[PLib.xmpl]]></example></docblock><class><name>PLib</name><type>class</type><abstract/><final/><instantiable/><extends/><string>[class PLib]</string><implements/><docblock><description><![CDATA[<p>PLib is the core class and is a hidden class, i.e. it can't be instantiated,
and only contain static methods. This class pretty much only handle loading
of requested PLib modules, creation of the documentation site and other
meta like functionality.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[PLib]]></package><example><![CDATA[PLib.xmpl]]></example></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>PLib</declaring-class><inherited/><string>private __construct()</string><docblock><description><![CDATA[<p>Contructor</p>

<p>This ctor is hidden so we can't create an instance of this class</p>]]></description></docblock><params/></method><method><name>Import</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static Import($which)</string><docblock><description><![CDATA[<p>Import PLib classes</p>

<div class='code'><code><span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>?</span><span style='color: #000099;'><b>php</b></span><br/><span style='color: #000099;'><b>require_once</b></span>&#160;<span style='color: #008800;'>&#39;PLib.php&#39;</span><span style='color: #0000FF;'>;</span><br/>PLib<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Import<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Protocols.HTTPClient&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$cli</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;HTTPRequest<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$res</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$cli</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;http://google.com/search&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;q&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;php&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>?</span><span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>You can use an asterisk (*) to load all files from the root or any
 subdirectory.</p>

<ul>
<li>So to load all Protocol classes this would be valid:
<code>PLib::Import('Protocols.*');</code></li>
<li>Or to load only the HTML parser:
<code>PLib::Import('Parser.HTMLParser');</code></li>
<li>Or to load every class file in PLib:
<code>PLib::Import('*');</code></li>
</ul>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetInternalPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static GetInternalPath($path)</string><docblock><description><![CDATA[<p>Returns the relative path to the PLib install dir</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>PathToNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static PathToNamespace($path)</string><docblock><description><![CDATA[<p>Converts a file path to a PLib namespace (Dir.Subdir.File)</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>wdebug</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public static wdebug([$args])</string><docblock><description><![CDATA[<p>Write out debugging messages. If used in CLI <a href='?__plibfunction=cwrite#function-cwrite'>cwrite()</a> will be
called.</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Load</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>protected final static Load($dir)</string><docblock><description><![CDATA[<p>Used to recursivley load classes in our path
Don't call this method directly. Use <a href='?__plibclass=PLib#method-Import'>PLib::Import()</a> instead.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dir</string></param></params></method><method><name>GetDB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public static GetDB()</string><docblock><description><![CDATA[<p>Returns the default SQLite database that's being used for various stuff
like <a href='?__plibclass=Cache#class-Cache'>Cache</a>, <a href='?__plibclass=GTextDB#class-GTextDB'>GTextDB</a>, etc</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Sqlite#class-Sqlite'>Sqlite</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Linkify</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static Linkify($str)</string><docblock><description><![CDATA[<p>Makes links clickable</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>Debug</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static Debug([$bool])</string><docblock><description><![CDATA[<p>Setter and getter for debug mode</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$bool]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bool</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bool</string></param></params></method><method><name>PrintException</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static PrintException(Exception $e [, $return])</string><docblock><description><![CDATA[<p>Print an Exception object in a nice manner.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>If true the result will be returned instead of printed.</p>]]></description></param></params></docblock><params><param><name>e</name><value/><reference/><optional/><class>Exception</class><array/><nullable/><string>Exception $e</string></param><param><name>return</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return</string></param></params></method><method><name>Info</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static Info([$class [, $return [, $desc=1]]])</string><docblock><description><![CDATA[<p>Get information about all PLib modules and classes or a specific
PLib class</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[object]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[<p>The item to get information about</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>Return or output the result</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$desc]]></variable><description><![CDATA[<p>Display the PLib description or not</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>class</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$class</string></param><param><name>return</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return</string></param><param><name>desc</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$desc=1</string></param></params></method><method><name>XSL_HighlightExampleFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static XSL_HighlightExampleFile($file)</string><docblock><description><![CDATA[<p>Highlight an example file called from a module info page.
NOTE! This method is called from within the PLib XSL template
(/modtree.xsl) and returns an <a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> object and
should not be called from anywhere but an XSL template.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The example file to highlight.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>XSL_HighlightSourceFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static XSL_HighlightSourceFile($file)</string><docblock><description><![CDATA[<p>Highlight a PLib source file from within an XMLTemplate. This will only
work when in debug mode.</p>

<p>See docblock for <a href='?__plibclass=PLib#method-XSL_HighlightExampleFile'>PLib::XSL_HighlightExampleFile()</a> for further
explaination.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>PLibDoc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static PLibDoc([$showSource [, $parsePrivate]])</string><docblock><description><![CDATA[<p>Generates the PLib documentation site</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$showSource]]></variable><description><![CDATA[<p>If true a link for viewing the source of each file will appear.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$parsePrivate]]></variable><description><![CDATA[<p>If true private methods and members will also be displayed</p>]]></description></param></params></docblock><params><param><name>showSource</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$showSource</string></param><param><name>parsePrivate</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$parsePrivate</string></param></params></method><method><name>PLibDocPart</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public static PLibDocPart($which [, $showSource [, $parsePrivate [, $alternativeDocFile]]])</string><docblock><description><![CDATA[<p>Returns the body or menu part of the documentation.</p>]]></description><since><![CDATA[0.1.20]]></since><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>The part to get: "menu" or "body"</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$showSource]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$parsePrivate]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$alternativeDocFile]]></variable><description><![CDATA[<p>Use this .xml file instead of plib.xml in the __plib dir.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>showSource</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$showSource</string></param><param><name>parsePrivate</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$parsePrivate</string></param><param><name>alternativeDocFile</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$alternativeDocFile</string></param></params></method><method><name>CheckVersion</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>public final static CheckVersion()</string><docblock><description><![CDATA[<p>Check for a new version of PLib</p>]]></description><since><![CDATA[0.1.14]]></since></docblock><params/></method><method><name>higlightFile</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited/><string>protected final static higlightFile($file)</string><docblock><description><![CDATA[<p>Syntax highlight a source file.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return><depends><depend><types><type><![CDATA[<a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLib</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>A PHP "magic" method.
Gives the opportunity to create an abritray string from the object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>BLOCK_FILES</name><value><![CDATA[^\.|^stx$|docs|PLib\.php|^__]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $BLOCK_FILES</string><docblock><description><![CDATA[<p>Files matching this regexp pattern will not be autoloaded</p>]]></description><staticvar><![CDATA[string]]></staticvar></docblock></property><property><name>VERBOSE</name><value><![CDATA[1]]></value><default>1</default><visibility>public</visibility><static>1</static><type>bool</type><string>public static bool $VERBOSE</string><docblock><description><![CDATA[<p>Useful in debugging methods to dtermine if output should be verbose
or not.</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property><property><name>SHOW_DOC_SOURCE</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>bool</type><string>public static $SHOW_DOC_SOURCE</string><docblock><description><![CDATA[<p>Whether or not to allow source view in the documentation site.</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property><property><name>ALTERNATIVE_HIGHLIGHT_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>null</type><string>public static $ALTERNATIVE_HIGHLIGHT_PATH</string><docblock><description><![CDATA[<p>If this is set the PLibDoc will look for highlighted example and source
file in this directory.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>debug</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $debug</string><docblock><description><![CDATA[<p>Debug mode flag</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property><property><name>xsltFuncs</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static>1</static><type>null</type><string>private static $xsltFuncs</string><docblock><description><![CDATA[<p>Methods callable from the XSL templates.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>db</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static>1</static><type>null</type><string>private static $db</string><docblock><description><![CDATA[<p>Default SQLite database object.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-GetDB'>PLib::GetDB()</a>]]></type></types><description><![CDATA[]]></description></see><var><![CDATA[SQlite]]></var></docblock></property></properties></class><class><name>PLibFakeClass</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLib</extends><string>class PLibFakeClass extends PLib</string><implements/><docblock><description><![CDATA[<p>Just creates an empty object</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[PLib]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibFakeClass</declaring-class><inherited/><string>public __construct()</string><docblock/><params/></method><method><name>Import</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static Import($which) inherited from PLib</string><docblock><description><![CDATA[<p>Import PLib classes</p>

<div class='code'><code><span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>?</span><span style='color: #000099;'><b>php</b></span><br/><span style='color: #000099;'><b>require_once</b></span>&#160;<span style='color: #008800;'>&#39;PLib.php&#39;</span><span style='color: #0000FF;'>;</span><br/>PLib<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Import<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Protocols.HTTPClient&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$cli</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;HTTPRequest<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$res</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$cli</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;http://google.com/search&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;q&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;php&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>?</span><span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>You can use an asterisk (*) to load all files from the root or any
 subdirectory.</p>

<ul>
<li>So to load all Protocol classes this would be valid:
<code>PLib::Import('Protocols.*');</code></li>
<li>Or to load only the HTML parser:
<code>PLib::Import('Parser.HTMLParser');</code></li>
<li>Or to load every class file in PLib:
<code>PLib::Import('*');</code></li>
</ul>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetInternalPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static GetInternalPath($path) inherited from PLib</string><docblock><description><![CDATA[<p>Returns the relative path to the PLib install dir</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>PathToNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static PathToNamespace($path) inherited from PLib</string><docblock><description><![CDATA[<p>Converts a file path to a PLib namespace (Dir.Subdir.File)</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>wdebug</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public static wdebug([$args]) inherited from PLib</string><docblock><description><![CDATA[<p>Write out debugging messages. If used in CLI {@link cwrite()} will be
called.</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Load</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>protected final static Load($dir) inherited from PLib</string><docblock><description><![CDATA[<p>Used to recursivley load classes in our path
Don't call this method directly. Use <a href='?__plibclass=PLib#method-Import'>PLib::Import()</a> instead.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dir</string></param></params></method><method><name>GetDB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public static GetDB() inherited from PLib</string><docblock><description><![CDATA[<p>Returns the default SQLite database that's being used for various stuff
like <a href='?__plibclass=Cache#class-Cache'>Cache</a>, <a href='?__plibclass=GTextDB#class-GTextDB'>GTextDB</a>, etc</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Sqlite#class-Sqlite'>Sqlite</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Linkify</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static Linkify($str) inherited from PLib</string><docblock><description><![CDATA[<p>Makes links clickable</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>Debug</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static Debug([$bool]) inherited from PLib</string><docblock><description><![CDATA[<p>Setter and getter for debug mode</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$bool]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bool</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bool</string></param></params></method><method><name>PrintException</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static PrintException(Exception $e [, $return]) inherited from PLib</string><docblock><description><![CDATA[<p>Print an Exception object in a nice manner.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>If true the result will be returned instead of printed.</p>]]></description></param></params></docblock><params><param><name>e</name><value/><reference/><optional/><class>Exception</class><array/><nullable/><string>Exception $e</string></param><param><name>return</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return</string></param></params></method><method><name>Info</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static Info([$class [, $return [, $desc=1]]]) inherited from PLib</string><docblock><description><![CDATA[<p>Get information about all PLib modules and classes or a specific
PLib class</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[object]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[<p>The item to get information about</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>Return or output the result</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$desc]]></variable><description><![CDATA[<p>Display the PLib description or not</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>class</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$class</string></param><param><name>return</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return</string></param><param><name>desc</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$desc=1</string></param></params></method><method><name>XSL_HighlightExampleFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static XSL_HighlightExampleFile($file) inherited from PLib</string><docblock><description><![CDATA[<p>Highlight an example file called from a module info page.
NOTE! This method is called from within the PLib XSL template
(/modtree.xsl) and returns an <a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> object and
should not be called from anywhere but an XSL template.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The example file to highlight.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>XSL_HighlightSourceFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static XSL_HighlightSourceFile($file) inherited from PLib</string><docblock><description><![CDATA[<p>Highlight a PLib source file from within an XMLTemplate. This will only
work when in debug mode.</p>

<p>See docblock for <a href='?__plibclass=PLib#method-XSL_HighlightExampleFile'>PLib::XSL_HighlightExampleFile()</a> for further
explaination.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>PLibDoc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static PLibDoc([$showSource [, $parsePrivate]]) inherited from PLib</string><docblock><description><![CDATA[<p>Generates the PLib documentation site</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$showSource]]></variable><description><![CDATA[<p>If true a link for viewing the source of each file will appear.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$parsePrivate]]></variable><description><![CDATA[<p>If true private methods and members will also be displayed</p>]]></description></param></params></docblock><params><param><name>showSource</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$showSource</string></param><param><name>parsePrivate</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$parsePrivate</string></param></params></method><method><name>PLibDocPart</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public static PLibDocPart($which [, $showSource [, $parsePrivate [, $alternativeDocFile]]]) inherited from PLib</string><docblock><description><![CDATA[<p>Returns the body or menu part of the documentation.</p>]]></description><since><![CDATA[0.1.20]]></since><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>The part to get: "menu" or "body"</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$showSource]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$parsePrivate]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$alternativeDocFile]]></variable><description><![CDATA[<p>Use this .xml file instead of plib.xml in the __plib dir.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>showSource</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$showSource</string></param><param><name>parsePrivate</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$parsePrivate</string></param><param><name>alternativeDocFile</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$alternativeDocFile</string></param></params></method><method><name>CheckVersion</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public final static CheckVersion() inherited from PLib</string><docblock><description><![CDATA[<p>Check for a new version of PLib</p>]]></description><since><![CDATA[0.1.14]]></since></docblock><params/></method><method><name>higlightFile</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static>1</static><declaring-class>PLib</declaring-class><inherited>1</inherited><string>protected final static higlightFile($file) inherited from PLib</string><docblock><description><![CDATA[<p>Syntax highlight a source file.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return><depends><depend><types><type><![CDATA[<a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLib</declaring-class><inherited>1</inherited><string>public __toString() inherited from PLib</string><docblock><description><![CDATA[<p>A PHP "magic" method.
Gives the opportunity to create an abritray string from the object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>BLOCK_FILES</name><value><![CDATA[^\.|^stx$|docs|PLib\.php|^__]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $BLOCK_FILES</string><docblock><description><![CDATA[<p>Files matching this regexp pattern will not be autoloaded</p>]]></description><staticvar><![CDATA[string]]></staticvar></docblock></property><property><name>VERBOSE</name><value><![CDATA[1]]></value><default>1</default><visibility>public</visibility><static>1</static><type>bool</type><string>public static bool $VERBOSE</string><docblock><description><![CDATA[<p>Useful in debugging methods to dtermine if output should be verbose
or not.</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property><property><name>SHOW_DOC_SOURCE</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>bool</type><string>public static $SHOW_DOC_SOURCE</string><docblock><description><![CDATA[<p>Whether or not to allow source view in the documentation site.</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property><property><name>ALTERNATIVE_HIGHLIGHT_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>null</type><string>public static $ALTERNATIVE_HIGHLIGHT_PATH</string><docblock><description><![CDATA[<p>If this is set the PLibDoc will look for highlighted example and source
file in this directory.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>debug</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $debug</string><docblock><description><![CDATA[<p>Debug mode flag</p>]]></description><staticvar><![CDATA[bool]]></staticvar></docblock></property></properties></class><class><name>PLibException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class PLibException extends Exception</string><implements/><docblock><description><![CDATA[<p>General PLib exception class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[PLib]]></package><subpackage><![CDATA[Exceptions]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>ExecutionTimer</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class ExecutionTimer</string><implements/><docblock><description><![CDATA[<p>Times execution of code.</p>

<div class='code'><code><span style='color: #990000;'><b>$timer</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;ExecutionTimer<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>//&#160;some&#160;code&#160;here</span><br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Execution&#160;time:&#160;$timer&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[PLib]]></package><subpackage><![CDATA[Tools]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ExecutionTimer</declaring-class><inherited/><string>public __construct([$round=-1])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description></docblock><params><param><name>round</name><value>-1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$round=-1</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ExecutionTimer</declaring-class><inherited/><string>public Get()</string><docblock><description><![CDATA[<p>Returns the execution timer</p>]]></description><see><types><type><![CDATA[<a href='http://php.net/microtime'>microtime</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[float]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ExecutionTimer</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Converts the execution time to a string.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>time</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $time</string><docblock><description><![CDATA[<p>Start time of execution. <a href='http://php.net/microtime'>microtime()</a>;</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>round</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $round</string><docblock><description><![CDATA[<p>Number of floating points to round to.
-1 means don't round</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><function><name>wbr</name><internal/><reference/><string>wbr([$args])</string><docblock><description><![CDATA[<p>Write arguments and append a <code>&lt;br/&gt;</code> at the end</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Works like <a href='http://php.net/sprintf'>sprintf()</a></p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></function><function><name>wnl</name><internal/><reference/><string>wnl([$args])</string><docblock><description><![CDATA[<p>Write arguments and append a \n at the end</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Works like {@link sprintf()}</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></function><function><name>rprint</name><internal/><reference/><string>rprint($what [, $ent=1])</string><docblock><description><![CDATA[<p>Like <a href='http://php.net/print_r'>print_r</a> but wraps the ouput in a <code>&lt;pre/&gt;</code> tag.</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$ent]]></variable><description><![CDATA[<p>Whether or not to turn the output into HTML entitites</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>ent</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$ent=1</string></param></params></function><function><name>issetor</name><internal/><reference/><string>issetor($what, $else)</string><docblock><description><![CDATA[<p>A shortcut for the following:</p>

<div class='code'><code><span style='color: #990000;'><b>$myvar</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>isset</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$_GET</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;var&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>?</span>&#160;<span style='color: #990000;'><b>$_GET</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;var&#39;</span><span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>:</span>&#160;<span style='color: #008800;'>&#39;default&#39;</span><span style='color: #0000FF;'>;</span><br/></code></div>

<p>With issetor we do like this:</p>

<div class='code'><code><span style='color: #990000;'><b>$myvar</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;issetor<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$_GET</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;var&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;default&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[&$what]]></variable><description><![CDATA[<p>Assoc array key</p>]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$else]]></variable><description><![CDATA[<p>Default value</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>else</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$else</string></param></params></function><function><name>isemptyor</name><internal/><reference/><string>isemptyor($what, $else)</string><docblock><description><![CDATA[<p>Returns <code>$else</code> if <code>$what</code> is empty</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$else]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>else</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$else</string></param></params></function><function><name>utf16_decode</name><internal/><reference/><string>utf16_decode($str)</string><docblock><description><![CDATA[<p>Decode UTF-16 encoded strings.</p>

<p>Can handle both BOM'ed data and un-BOM'ed data.
Assumes Big-Endian byte order if no BOM is available.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[<p>UTF-16 encoded data to decode.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>UTF-8 / ISO encoded data.</p>]]></description></return><version><![CDATA[0.1 / 2005-01-19]]></version><author><![CDATA[Rasmus Andersson]]></author><link><![CDATA[http://rasmusandersson.se]]></link><link><![CDATA[http://php.net/utf8-decode]]></link></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></function><function><name>is_utf16</name><internal/><reference/><string>is_utf16($str)</string><docblock><description><![CDATA[<p>Check if string <code>$str</code> is UTF-16 encoded or not.
This might not be bullet proof!</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></function><function><name>is_utf8</name><internal/><reference/><string>is_utf8($str)</string><docblock><description><![CDATA[<p>Checks if <code>$str</code> is UTF-8 encoded or not</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=String#class-String'>String</a>]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[<p>The  string to encode</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></function><function><name>check_bit_flag</name><internal/><reference/><string>check_bit_flag($total, $flag)</string><docblock><description><![CDATA[<p>Check if <code>$total</code> contains <code>$flag</code></p>

<div class='code'><code><span style='color: #ff0000;'>define</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;PLAIN&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: purple;'>1</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #ff0000;'>define</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;HTML&#39;</span><span style='color: #0000FF;'>,</span>&#160;&#160;<span style='color: purple;'>2</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>function</b></span>&#160;someFunc<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$bitparams</b></span><span style='color: #0000FF;'>)</span><br/><span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span>check_bit_flag<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$bitparams</b></span><span style='color: #0000FF;'>,</span>&#160;PLAIN<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Plain&#160;text&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span>check_bit_flag<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$bitparams</b></span><span style='color: #0000FF;'>,</span>&#160;HTML<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;HTML&#160;text&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/>someFunc<span style='color: #0000FF;'>(</span>PLAIN<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>someFunc<span style='color: #0000FF;'>(</span>PLAIN<span style='color: #0000FF;'>|</span>HTML<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><since><![CDATA[0.1.11]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$total]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$flag]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>total</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$total</string></param><param><name>flag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$flag</string></param></params></function><function><name>random_string</name><internal/><reference/><string>random_string([$chars=6])</string><docblock><description><![CDATA[<p>Get a random string.
This function is taken from CaptchaSecurityImages.php</p>]]></description><author><![CDATA[Simon Jarvis]]></author><copyright><![CDATA[2006 Simon Jarvis]]></copyright><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$chars]]></variable><description><![CDATA[<p>The length of the string</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chars</name><value>6</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$chars=6</string></param></params></function><function><name>redirect</name><internal/><reference/><string>redirect($where)</string><docblock><description><![CDATA[<p>Redirect the request to <code>$where</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$where]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>where</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$where</string></param></params></function><function><name>pager</name><internal/><reference/><string>pager($pagervar, $display, $total)</string><docblock><description><![CDATA[<p>Returns a pager object.
Say you have a list of news that you fetch from a database and you want
to display 10 items a time. You then need a "next" and "previous" link and
we have all programmed this logic a million times.</p>

<p>This function strives to make this logic a fair bit easier. Just pass in the
name of the "offset" get/post variable, the number of items you want to
display per page and the total number of items you have to display and you
will get the logic back in an object.</p>

<div class='code'><code><span style='color: #990000;'><b>$total</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Query<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;SELECT&#160;COUNT(id)&#160;FROM&#160;some_table&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$pager</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;pager<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;offset&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: purple;'>20</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$total</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #ff0000;'>printf</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;&#60;a&#160;href=&#39;./?offset=%s&#39;&#62;Prev&#60;/a&#62;&#160;|&#160;&#34;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$pager</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span><span style='color: #ff0000;'>prev</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>for</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$i</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: purple;'>0</span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #990000;'><b>$i</b></span>&#160;<span style='color: #0000FF;'>&#60;</span>&#160;<span style='color: #990000;'><b>$total</b></span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #990000;'><b>$i</b></span><span style='color: #0000FF;'>+</span><span style='color: #0000FF;'>+</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$i</b></span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$pager</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span><span style='color: #ff0000;'>current</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;<span style='color: #ff0000;'>printf</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;&#60;a&#160;href=&#39;./?offset=%d&#39;&#62;&#60;strong&#62;%d&#60;/strong&#62;&#60;/a&#62;&#160;|&#160;&#34;</span><span style='color: #0000FF;'>,</span>&#160;i<span style='color: #0000FF;'>,</span>&#160;<span style='color: #0000FF;'>(</span>i<span style='color: #0000FF;'>+</span><span style='color: purple;'>1</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>else</b></span><br/>&#160;&#160;&#160;<span style='color: #ff0000;'>printf</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;&#60;a&#160;href=&#39;./?offset=%d&#39;&#62;%d&#60;/a&#62;&#160;|&#160;&#34;</span><span style='color: #0000FF;'>,</span>&#160;i<span style='color: #0000FF;'>,</span>&#160;<span style='color: #0000FF;'>(</span>i<span style='color: #0000FF;'>+</span><span style='color: purple;'>1</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #ff0000;'>printf</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;&#60;a&#160;href=&#39;./?offset=%s&#39;&#62;Next&#60;/a&#62;&#34;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$pager</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span><span style='color: #ff0000;'>next</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$pagervar]]></variable><description><![CDATA[<p>The name of the get/post variable that acts as the offset</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$display]]></variable><description><![CDATA[<p>The number of items you want listed per page</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$total]]></variable><description><![CDATA[<p>The total number of items displayable.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><description><![CDATA[<ul>
<li>display - Number of items displayed</li>
<li>offset  - Steps from page 0</li>
<li>pages   - Total number of pages</li>
<li>current - Current page</li>
<li>next    - Next page</li>
<li>prev    - Previous page</li>
<li>from    - Index from which the current view starts (display*offset)</li>
<li>to      - Index at which the current view ends (from+offset)</li>
<li>total   - Total number of items.</li>
</ul>]]></description></return></docblock><params><param><name>pagervar</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pagervar</string></param><param><name>display</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$display</string></param><param><name>total</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$total</string></param></params></function><function><name>mb_unserialize</name><internal/><reference/><string>mb_unserialize($serial_str)</string><docblock><description><![CDATA[<p>Unserializes a multibyte string.
Taken from user comments at <a href='http://php.net/unserialize'>PHP.NET</a></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$serial_str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>serial_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$serial_str</string></param></params></function><function><name>html_attribute_quote</name><internal/><reference/><string>html_attribute_quote($in)</string><docblock><description><![CDATA[<p>Quotes HTML/XML attributes</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></function><function><name>debug</name><internal/><reference/><string>debug()</string><docblock><description><![CDATA[<p>Writes to PLib's debug log. Only writes to the file when PLib is in
debug mode.
Takes a variable length argument list. See <a href='http://php.net/sprintf'>sprintf()</a>.</p>]]></description></docblock><params/></function><function><name>trace</name><internal/><reference/><string>trace()</string><docblock><description><![CDATA[<p>Writes to PLib's debug log.
Takes a variable length argument list. See {@link sprintf sprintf()}.</p>]]></description></docblock><params/></function></module><namespace name="ADT" path="ADT"><module><name>ADT.php</name><path>ADT/ADT.php</path><namespace>ADT</namespace><classpath>ADT.ADT</classpath><docblock><description><![CDATA[<p>Helper methods for "Advanced Data Types"</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><license><![CDATA[GPL License 2]]></license><package><![CDATA[ADT]]></package></docblock><class><name>ADT</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class ADT</string><implements/><docblock><description><![CDATA[<p>ADT master class</p>]]></description><author><![CDATA[Pontus �stlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[ADT]]></package></docblock><methods><method><name>Mmap</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>ADT</declaring-class><inherited/><string>public static Mmap($cb, $array [, $type=1])</string><docblock><description><![CDATA[<p>Like <a href='http://php.net/array_map'>array_map()</a> but works on assoc and multidim arrays</p>

<div class='code'><code><span style='color: #990000;'><b>$array</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;KEY1&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;A&#160;value&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;KEY2&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;My&#160;name&#160;in&#160;Pontus&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$lcAll</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;ADT<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Mmap<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;strtolower&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$array</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>#&#160;$lcAll&#160;&#62;&#160;array(&#39;key1&#39;&#160;=&#62;&#160;&#39;a&#160;value&#39;,&#160;&#39;key2&#39;&#160;=&#62;&#160;&#39;my&#160;name&#160;is&#160;pontus&#39;);</span><br/>&#160;<br/><span style='color: #990000;'><b>$lcKeys</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;ADT<span style='color: #0000FF;'>:</span>Mmap<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;strtolower&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$array</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: purple;'>0</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>#&#160;$lcKeys&#160;&#62;&#160;array(&#39;key1&#39;&#160;=&#62;&#160;&#39;A&#160;value&#39;,&#160;&#39;key2&#39;&#160;=&#62;&#160;&#39;My&#160;name&#160;in&#160;Pontus&#39;);</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[<p>Callback function to pass the elements to</p>]]></description></param><param><types><type><![CDATA[array]]></type><type><![CDATA[object]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>Defines whether to only pass the keys, pass both keys and values or only
  values to the callback:</p>

<ul>
<li>0 = Only pass keys</li>
<li>1 = Pass both keys and values</li>
<li>2 = Only pass value</li>
</ul>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param><param><name>type</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type=1</string></param></params></method><method><name>Unique2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>ADT</declaring-class><inherited/><string>public static Unique2($array, $key)</string><docblock><description><![CDATA[<p>Uniqueifies an array with associative arrays by the key $key.
This method works destructivley on the array $array.</p>

<div class='code'><code>&#160;&#160;<span style='color: #990000;'><b>$a</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;type&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: purple;'>1</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;name&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;Test&#160;1&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;type&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: purple;'>2</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;name&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;Test&#160;2&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;type&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: purple;'>1</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;name&#39;</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: #008800;'>&#39;Test&#160;3&#39;</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;ADT<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Unique2<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$a</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;type&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #ff0000;'>print_r</span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$a</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;Array<br/>&#160;&#160;<span style='color: #0000FF;'>(</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span><span style='color: purple;'>0</span><span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;Array<br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>(</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span>type<span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: purple;'>1</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span>name<span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;Test&#160;<span style='color: purple;'>1</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>)</span><br/>&#160;<br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span><span style='color: purple;'>1</span><span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;Array<br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>(</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span>type<span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;<span style='color: purple;'>2</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>[</span>name<span style='color: #0000FF;'>]</span>&#160;<span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>&#62;</span>&#160;Test&#160;<span style='color: purple;'>2</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable/><string>$array</string></param><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>PopValue</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>ADT</declaring-class><inherited/><string>public static PopValue($array, $value)</string><docblock><description><![CDATA[<p>Pops the index with value $value from array $array and returns the value.</p>

<div class='code'><code><span style='color: #990000;'><b>$arr</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;One&#34;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#34;Two&#34;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#34;Three&#34;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#34;Four&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$two</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;ADT<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>PopValue<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$arr</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#34;Two&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #990000;'><b>$two</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>#&#160;$two&#160;&#62;&#160;&#34;Two&#34;</span><br/><span style='color: #ff0000;'>print_r</span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$arr</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>#&#160;$arr&#160;&#62;&#160;array(&#34;One&#34;,&#160;&#34;Three&#34;,&#160;&#34;Four&#34;)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable/><string>$array</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method></methods><properties/></class></module></namespace><namespace name="Cache" path="Cache"><module><name>Cache.php</name><path>Cache/Cache.php</path><namespace>Cache</namespace><classpath>Cache.Cache</classpath><docblock><description><![CDATA[<p>Simple cache</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Cache]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Cache</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Cache</string><implements/><docblock><description><![CDATA[<p>A class for handling simple cacheing.
This is a static class. It uses SQLite to store the cache or MySQL if set
expicitly.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Cache]]></package></docblock><methods><method><name>UseMySQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static UseMySQL(Mysql $db [, $init=1])</string><docblock><description><![CDATA[<p>Initialize a MySQL backend</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Mysql#class-Mysql'>Mysql</a>]]></type></types><variable><![CDATA[$db]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$init]]></variable><description><![CDATA[<p>If the DB user don't have CREATE priviliges the table must be created
 manually and if so is done we don't want to run <a href='?__plibclass=Cache#method-initDB'>Cache::initDB()</a>
 which will cause an exception.</p>]]></description></param></params></docblock><params><param><name>db</name><value/><reference/><optional/><class>Mysql</class><array/><nullable/><string>Mysql $db</string></param><param><name>init</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$init=1</string></param></params></method><method><name>initDB</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>protected static initDB()</string><docblock><description><![CDATA[<p>Initializes the db connection.</p>]]></description></docblock><params/></method><method><name>Add</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static Add($key, $value, $time [, $hash [, $rmCallback]])</string><docblock><description><![CDATA[<p>Add to the cache</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>The lookup key also used to fetch from the cache</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The actual value to cache</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$time]]></variable><description><![CDATA[<p>A unix timestamp defining for how long the cache should last</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hash]]></variable><description><![CDATA[<p>A user defined hash to validate against. This hash can then be sent
 to <a href='?__plibclass=Cache#method-Get'>Cache::Get()</a> which then also will check the hash and not just
 the timestamp do validate the cache</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$rmCallback]]></variable><description><![CDATA[<p>If set this function will be called prior to the deletion of the
 cache. The function will be called with the <code>cachekey</code> as first
 argument and the entire db result row as second argument. (This will be
 an instance of <a href='?__plibclass=Sqlite_DBResult#class-Sqlite_DBResult'>Sqlite_DBResult</a> or <a href='?__plibclass=Mysql_DBResult#class-Mysql_DBResult'>Mysql_DBResult</a> depending
 on what backend is being used.</p>

<p>If you wish to keep the cache, i.e. abort the deletion, return
 {@see Cache::KEEP_CACHE} from the callback function.</p>]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>time</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$time</string></param><param><name>hash</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$hash</string></param><param><name>rmCallback</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$rmCallback</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static Get($key [, $hash [, $returnObject]])</string><docblock><description><![CDATA[<p>Returns the cached item or false if the cache has expired or doesn't
exist.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>A key associated with this cache</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hash]]></variable><description><![CDATA[<p>See <a href='?__plibclass=Cache#method-Add'>Cache::Add()</a></p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$returnObject]]></variable><description><![CDATA[<p>If set to true the SQL result set will be returned rather than
 the actual cache data.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>hash</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$hash</string></param><param><name>returnObject</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$returnObject</string></param></params></method><method><name>Get2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static Get2($key [, $hash])</string><docblock><description><![CDATA[<p>Exactly like <a href='?__plibclass=Cache#method-Get'>Cache::Get()</a> except this method will return the
cache result even if it has expired. The index in the database will still
be removed though.</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>A key associated with this cache</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hash]]></variable><description><![CDATA[<p>See <a href='?__plibclass=Cache#method-Add'>Cache::Add()</a></p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$returnObject]]></variable><description><![CDATA[<p>If set to true the SQL result set will be returned rather than
 the actual cache data.</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Indices:
   expired: boolean
   data: string</p>]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>hash</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$hash</string></param></params></method><method><name>Remove</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static Remove($key [, $dbrow])</string><docblock><description><![CDATA[<p>Remove the item with key <code>$key</code> from the cache</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><variable><![CDATA[$dbrow]]></variable><description><![CDATA[<p>This param is only used internally</p>]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>dbrow</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$dbrow</string></param></params></method><method><name>Clear</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static Clear()</string><docblock><description><![CDATA[<p>Clears the entire cache table</p>]]></description></docblock><params/></method><method><name>GetAll</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Cache</declaring-class><inherited/><string>public static GetAll()</string><docblock><description><![CDATA[<p>Returns the entire cache</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>SQLITE_PATH</name><value><![CDATA[/home/pontus/Projects/php/plib-git/src/tmp]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $SQLITE_PATH</string><docblock><description><![CDATA[<p>The path where to save the SQLite file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>SQLITE_FILE</name><value><![CDATA[cache.db]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $SQLITE_FILE</string><docblock><description><![CDATA[<p>The name of the SQLite file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>backend</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $backend</string><docblock><description><![CDATA[<p>What backend to use. Valid values are sqlite or mysql</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>isInit</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $isInit</string><docblock><description><![CDATA[<p>Has the db connection been initialized or not</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>db</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $db</string><docblock><description><![CDATA[<p>The db connection object</p>]]></description><var><![CDATA[DB]]></var></docblock></property><property><name>table</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $table</string><docblock><description><![CDATA[<p>The name of the db table</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ctable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $ctable</string><docblock><description><![CDATA[<p>SQLite table layout</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>mtable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $mtable</string><docblock><description><![CDATA[<p>MySQL table layout</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class></module></namespace><namespace name="Calendar" path="Calendar"><module><name>Calendar.php</name><path>Calendar/Calendar.php</path><namespace>Calendar</namespace><classpath>Calendar.Calendar</classpath><docblock><description><![CDATA[<p>Calendar</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Calendar]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Calendar</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class Calendar extends PLibIterator</string><implements/><docblock><description><![CDATA[<p>A simple calendar</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Calendar]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public __construct(Date $from [, $firstdayofweek=1])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><variable><![CDATA[$from]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>from</name><value/><reference/><optional/><class>Date</class><array/><nullable/><string>Date $from</string></param><param><name>firstdayofweek</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$firstdayofweek=1</string></param></params></method><method><name>Format</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public Format($format)</string><docblock/><params><param><name>format</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$format</string></param></params></method><method><name>SetEvents</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public SetEvents($events)</string><docblock><description><![CDATA[<p>Set events</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$events]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>events</name><value/><reference/><optional/><class/><array/><nullable/><string>$events</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public HasNext()</string><docblock><description><![CDATA[<p>See <a href='?__plibclass=PLibIterator#method-HasNext'>PLibIterator::HasNext()</a></p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>See <a href='?__plibclass=PLibIterator#method-Next'>PLibIterator::Next()</a></p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=CalendarDate#class-CalendarDate'>CalendarDate</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public First()</string><docblock><description><![CDATA[<p>Are we about to hit the first iteration or just hit the first iteration</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public Last()</string><docblock><description><![CDATA[<p>Is it the last iteration</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>DBResult2Events</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Calendar</declaring-class><inherited/><string>public DBResult2Events(DBResult $obj)</string><docblock><description><![CDATA[<p>Converts an instance of <a href='?__plibclass=DBResult#class-DBResult'>DBResult</a> into the internal events array.
The db result set sould contain a field named "compare_date" which
should be the actual date to compare against.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><variable><![CDATA[$obj]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>obj</name><value/><reference/><optional/><class>DBResult</class><array/><nullable/><string>DBResult $obj</string></param></params></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>timezone</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $timezone</string><docblock><description><![CDATA[<p>Time zone</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>events</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $events</string><docblock><description><![CDATA[<p>Storage for events</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>today</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $today</string><docblock><description><![CDATA[<p>The current day</p>]]></description><var><![CDATA[Date]]></var></docblock></property><property><name>now</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $now</string><docblock><description><![CDATA[<p>The currently selected month</p>]]></description><var><![CDATA[Date]]></var></docblock></property><property><name>from</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $from</string><docblock><description><![CDATA[<p>The from date</p>]]></description><var><![CDATA[Date]]></var></docblock></property><property><name>to</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $to</string><docblock><description><![CDATA[<p>The to date</p>]]></description><var><![CDATA[Date]]></var></docblock></property><property><name>ts</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ts</string><docblock><description><![CDATA[<p>The current timestamp in the iterator</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>tsEnd</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tsEnd</string><docblock><description><![CDATA[<p>The last timestamp</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>dstCompensate</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dstCompensate</string><docblock><description><![CDATA[<p>Compensate daylight savings time</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>CalendarDate</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Date</extends><string>class CalendarDate extends Date</string><implements/><docblock><description><![CDATA[<p>Pretty much identical to <a href='?__plibclass=Date#class-Date'>Date</a> except that a few special members
is added.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Calendar]]></package><depends><depend><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>CalendarDate</declaring-class><inherited/><string>public __construct($date)</string><docblock/><params><param><name>date</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$date</string></param></params></method><method><name>AddYears</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddYears($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of years to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddMonths</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddMonths($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of months to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddDays</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddDays($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of days to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddHours</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddHours($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of hours to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddMinutes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddMinutes($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of minutes to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddSeconds</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public AddSeconds($num) inherited from Date</string><docblock><description><![CDATA[<p>Add n number of seconds to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>Format</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public Format($format) inherited from Date</string><docblock><description><![CDATA[<p>Format the date. Like <a href='http://php.net/strftime'>strftime()</a></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$format]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>format</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$format</string></param></params></method><method><name>UnixYear</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited>1</inherited><string>public static UnixYear() inherited from Date</string><docblock><description><![CDATA[<p>Returns approximatley one year from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UnixMonth</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited>1</inherited><string>public static UnixMonth() inherited from Date</string><docblock><description><![CDATA[<p>Returns approximatley one week from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UnixWeek</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited>1</inherited><string>public static UnixWeek() inherited from Date</string><docblock><description><![CDATA[<p>Returns one week from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public __get($index) inherited from Date</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited>1</inherited><string>public __toString() inherited from Date</string><docblock><description><![CDATA[<p>Magic PHP method (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>today</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $today</string><docblock/></property><property><name>hasEvent</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $hasEvent</string><docblock/></property><property><name>leaf</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $leaf</string><docblock/></property><property><name>DATE_TYPE</name><value><![CDATA[1]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $DATE_TYPE</string><docblock><description><![CDATA[<p>Meaning monday is the first day of the week</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>STRING_FORMAT</name><value><![CDATA[%H:%M, %a %d %B %Y]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $STRING_FORMAT</string><docblock><description><![CDATA[<p>Default string format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>STRING_ISO</name><value><![CDATA[%a %d %B %Y]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $STRING_ISO</string><docblock><description><![CDATA[<p>Default ISO string format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>unixtime</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $unixtime</string><docblock><description><![CDATA[<p>Date as a unix time stamp</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>year</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $year</string><docblock><description><![CDATA[<p>Year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>month</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $month</string><docblock><description><![CDATA[<p>Month</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>week</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $week</string><docblock><description><![CDATA[<p>Week</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>date</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $date</string><docblock><description><![CDATA[<p>Date</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>time</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $time</string><docblock><description><![CDATA[<p>Time</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>timezone</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $timezone</string><docblock><description><![CDATA[<p>Time zone</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ymd</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ymd</string><docblock><description><![CDATA[<p>ISO formatted date (YYYY-MM-DD HH:MM:SS)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ymdShort</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ymdShort</string><docblock><description><![CDATA[<p>Short ISO formatted date (YYYY-MM-DD)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>days</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $days</string><docblock><description><![CDATA[<p>Days in month</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>hour</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $hour</string><docblock><description><![CDATA[<p>Hour</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>minute</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $minute</string><docblock><description><![CDATA[<p>Minute</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>second</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $second</string><docblock><description><![CDATA[<p>Second</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>wday</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $wday</string><docblock><description><![CDATA[<p>Day of week</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>yday</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $yday</string><docblock><description><![CDATA[<p>Day of year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>dst</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dst</string><docblock><description><![CDATA[<p>Daylight savings</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>gettables</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $gettables</string><docblock><description><![CDATA[<p>Member descriptions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class></module><module><name>Date.php</name><path>Calendar/Date.php</path><namespace>Calendar</namespace><classpath>Calendar.Date</classpath><docblock><description><![CDATA[<p>A set of classes to work with date and time</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.2]]></version><package><![CDATA[Calendar]]></package></docblock><class><name>Date</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Date</string><implements/><docblock><description><![CDATA[<p>At the moment pretty much just a meta class...
More work will be done!</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Calendar]]></package><subpackage><![CDATA[DateTime]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public __construct([$date])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$date]]></variable><description><![CDATA[<p>Either a string date or a unix timestamp</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$dst]]></variable><description><![CDATA[<p>If set to false dayligt saving time will be discarted, i.e one hour
  will be cut off.</p>]]></description></param></params></docblock><params><param><name>date</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$date</string></param></params></method><method><name>AddYears</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddYears($num)</string><docblock><description><![CDATA[<p>Add n number of years to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddMonths</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddMonths($num)</string><docblock><description><![CDATA[<p>Add n number of months to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddDays</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddDays($num)</string><docblock><description><![CDATA[<p>Add n number of days to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddHours</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddHours($num)</string><docblock><description><![CDATA[<p>Add n number of hours to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddMinutes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddMinutes($num)</string><docblock><description><![CDATA[<p>Add n number of minutes to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>AddSeconds</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public AddSeconds($num)</string><docblock><description><![CDATA[<p>Add n number of seconds to the current date</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$num]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return><since><![CDATA[0.2]]></since></docblock><params><param><name>num</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$num</string></param></params></method><method><name>Format</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public Format($format)</string><docblock><description><![CDATA[<p>Format the date. Like {@see strftime()}</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$format]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>format</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$format</string></param></params></method><method><name>UnixYear</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited/><string>public static UnixYear()</string><docblock><description><![CDATA[<p>Returns approximatley one year from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UnixMonth</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited/><string>public static UnixMonth()</string><docblock><description><![CDATA[<p>Returns approximatley one week from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UnixWeek</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Date</declaring-class><inherited/><string>public static UnixWeek()</string><docblock><description><![CDATA[<p>Returns one week from now as a unix timestamp</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public __get($index)</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Date</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Magic PHP method (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>DATE_TYPE</name><value><![CDATA[1]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $DATE_TYPE</string><docblock><description><![CDATA[<p>Meaning monday is the first day of the week</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>STRING_FORMAT</name><value><![CDATA[%H:%M, %a %d %B %Y]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $STRING_FORMAT</string><docblock><description><![CDATA[<p>Default string format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>STRING_ISO</name><value><![CDATA[%a %d %B %Y]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $STRING_ISO</string><docblock><description><![CDATA[<p>Default ISO string format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>unixtime</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $unixtime</string><docblock><description><![CDATA[<p>Date as a unix time stamp</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>year</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $year</string><docblock><description><![CDATA[<p>Year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>month</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $month</string><docblock><description><![CDATA[<p>Month</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>week</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $week</string><docblock><description><![CDATA[<p>Week</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>date</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $date</string><docblock><description><![CDATA[<p>Date</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>time</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $time</string><docblock><description><![CDATA[<p>Time</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>timezone</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $timezone</string><docblock><description><![CDATA[<p>Time zone</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ymd</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ymd</string><docblock><description><![CDATA[<p>ISO formatted date (YYYY-MM-DD HH:MM:SS)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ymdShort</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ymdShort</string><docblock><description><![CDATA[<p>Short ISO formatted date (YYYY-MM-DD)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>days</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $days</string><docblock><description><![CDATA[<p>Days in month</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>hour</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $hour</string><docblock><description><![CDATA[<p>Hour</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>minute</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $minute</string><docblock><description><![CDATA[<p>Minute</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>second</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $second</string><docblock><description><![CDATA[<p>Second</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>wday</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $wday</string><docblock><description><![CDATA[<p>Day of week</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>yday</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $yday</string><docblock><description><![CDATA[<p>Day of year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>dst</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dst</string><docblock><description><![CDATA[<p>Daylight savings</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>gettables</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $gettables</string><docblock><description><![CDATA[<p>Member descriptions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class></module></namespace><namespace name="Core" path="Core"><module><name>IStream.php</name><path>Core/IStream.php</path><namespace>Core</namespace><classpath>Core.IStream</classpath><docblock><description><![CDATA[<p>Streaming interface</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Core]]></package></docblock><class><name>IStream</name><type>interface</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract interface IStream]</string><implements/><docblock><description><![CDATA[<p>Stream interface.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Core]]></package></docblock><methods><method><name>Read</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public Read([$byte=1])</string><docblock><description><![CDATA[<p>Read <code>$bytes</code> number of bytes. If no argument is given <code>1</code> byte at a time
will be read.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>byte</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$byte=1</string></param></params></method><method><name>Unread</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public Unread([$bytes=1])</string><docblock><description><![CDATA[<p>Rewinds the stream <code>$bytes</code> number of bytes</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bytes</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bytes=1</string></param></params></method><method><name>ReadBlock</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public ReadBlock($begin, $offset [, $whence])</string><docblock><description><![CDATA[<p>Reads <code>$offset</code> number of bytes starting at <code>$begin</code>.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$begin]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[<p><code>SEEK_SET</code>, <code>SEEK_CUR</code> or <code>SEEK_END</code>. See <a href='http://php.net/fseek'>fseek()</a>.</p>]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If <code>$begin</code> is less than <code>0</code></p>]]></description></throws><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>begin</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$begin</string></param><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>ReadLine</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public ReadLine()</string><docblock><description><![CDATA[<p>Reads one line at a time from the resource</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ReadToChar</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public ReadToChar($char)</string><docblock><description><![CDATA[<p>Reads upto the first occurance of <code>$char</code> or reads to the end if <code>$char</code>
is not found</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$char]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>char</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$char</string></param></params></method><method><name>ReadToChars</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public ReadToChars($chars)</string><docblock><description><![CDATA[<p>Reads upto the first occurance of any of the characters in <code>$chasr</code> or
reads to the end if no match is found</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$chars]]></variable><description><![CDATA[<p>Array of characters</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chars</name><value/><reference/><optional/><class/><array/><nullable/><string>$chars</string></param></params></method><method><name>BytesRead</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public BytesRead()</string><docblock><description><![CDATA[<p>Returns the interal pointer's current position, i.e byte offset from the
beginning of the stream</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Seek</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public Seek($offset [, $whence])</string><docblock><description><![CDATA[<p>Seek to offset</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[<p><code>SEEK_SET</code>, <code>SEEK_CUR</code> or <code>SEEK_END</code>. See {@link fseek fseek()}.</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[<p>(0 on success, -1 otherwise)</p>]]></description></return></docblock><params><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>Position</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IStream</declaring-class><inherited/><string>abstract public Position()</string><docblock><description><![CDATA[<p>Returns the current offset</p>]]></description><since><![CDATA[0.3]]></since><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties/></class></module><module><name>Version.php</name><path>Core/Version.php</path><namespace>Core</namespace><classpath>Core.Version</classpath><docblock><description><![CDATA[<p>Version class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Core]]></package><version><![CDATA[0.1]]></version></docblock><class><name>Version</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Version</string><implements/><docblock><description><![CDATA[<p>Class representing a version, like 1.2, 0.2.345 etc</p>

<div class='code'><code><span style='color: #990000;'><b>$v1</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Version<span style='color: #0000FF;'>(</span><span style='color: purple;'>2</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: purple;'>2</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: purple;'>135</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$v2</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Version<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;1.13&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Greater<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v2</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;is&#160;greater&#160;than&#160;v2&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>elseif</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Less<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v2</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;is&#160;less&#160;than&#160;v2&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>elseif</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Equals<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v2</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;equals&#160;v2&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>else</b></span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;How&#160;could&#160;this&#160;happen&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;Or</span><br/>&#160;<br/><span style='color: #990000;'><b>$comp</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Compare<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$v2</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>switch</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$comp</b></span><span style='color: #0000FF;'>)</span><br/><span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;&#160;<span style='color: purple;'>0</span><span style='color: #0000FF;'>:</span>&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;equals&#160;v2&#34;</span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;&#160;<span style='color: purple;'>1</span><span style='color: #0000FF;'>:</span>&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;is&#160;greater&#160;than&#160;v2&#34;</span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #0000FF;'>-</span><span style='color: purple;'>1</span><span style='color: #0000FF;'>:</span>&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;v1&#160;is&#160;less&#160;than&#160;v2&#34;</span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>string</b></span><span style='color: #0000FF;'>)</span><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #0099CC;'>//&#160;2.2.135</span><br/>&#160;<br/><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>minor&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: purple;'>3</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>string</b></span><span style='color: #0000FF;'>)</span><span style='color: #990000;'><b>$v1</b></span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #0099CC;'>//&#160;2.3.135</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Core]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public __construct($major [, $minor [, $build]])</string><docblock><description><![CDATA[<p>Creates a new instance</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$major]]></variable><description><![CDATA[<p>If a string the entire version as a string is expected. <code>$minor</code> and
 <code>$build</code> will have no effect if <code>$major</code> is a string</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$minor]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$build]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>major</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$major</string></param><param><name>minor</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$minor</string></param><param><name>build</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$build</string></param></params></method><method><name>parseString</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>protected parseString($s)</string><docblock><description><![CDATA[<p>Parse a version string (i.e. <code>1.2</code>, <code>1.4.45</code> etc)</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>Compare</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public Compare(Version $v)</string><docblock><description><![CDATA[<p>Compare this object to version <code>$v</code></p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$v]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[<p>If this version is greater than <code>$v</code> <code>1</code> will be returned
 If this version is less that <code>$v</code> <code>-1</code> will be returned
 If this version is equal to <code>$v</code> <code>0</code>  will be returned</p>]]></description></return></docblock><params><param><name>v</name><value/><reference/><optional/><class>Version</class><array/><nullable/><string>Version $v</string></param></params></method><method><name>Equals</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public Equals(Version $v)</string><docblock><description><![CDATA[<p>Checks if this version is equal to version <code>$v</code></p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$v]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>v</name><value/><reference/><optional/><class>Version</class><array/><nullable/><string>Version $v</string></param></params></method><method><name>Less</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public Less(Version $v)</string><docblock><description><![CDATA[<p>Checks if this version is less than version <code>$v</code></p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$v]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>v</name><value/><reference/><optional/><class>Version</class><array/><nullable/><string>Version $v</string></param></params></method><method><name>Greater</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public Greater(Version $v)</string><docblock><description><![CDATA[<p>Checks if this version is greater than version <code>$v</code></p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$v]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>v</name><value/><reference/><optional/><class>Version</class><array/><nullable/><string>Version $v</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Version</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Turns this object into a string (i.e. <code>2.3.42</code>)</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>major</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $major</string><docblock><description><![CDATA[<p>Major version</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>minor</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $minor</string><docblock><description><![CDATA[<p>Minor version</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>build</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $build</string><docblock><description><![CDATA[<p>Build</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Iterator.php</name><path>Core/Iterator.php</path><namespace>Core</namespace><classpath>Core.Iterator</classpath><docblock><description><![CDATA[<p>Iterator</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Core]]></package></docblock><class><name>PLibIterator</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class PLibIterator]</string><implements/><docblock><description><![CDATA[<p>A generic iterator</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Core]]></package></docblock><methods><method><name>HasNext</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>abstract public HasNext()</string><docblock><description><![CDATA[<p>Checks if there's a next index in the array</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>abstract public Next()</string><docblock><description><![CDATA[<p>Returns the next item in the array</p>]]></description><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public Length()</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public First()</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public Last()</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public NextLast()</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public Pointer()</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited/><string>public Reverse()</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>PLibIteratorOutOfRangeException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class PLibIteratorOutOfRangeException extends Exception</string><implements/><docblock><description><![CDATA[<p>Generic exception when the iterator is out of range</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Core]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace><namespace name="DB" path="DB"><module><name>Sqlite_driver.php</name><path>DB/Sqlite_driver.php</path><namespace>DB</namespace><classpath>DB.Sqlite_driver</classpath><docblock><description><![CDATA[<p>Sqlite database driver.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><license><![CDATA[GPL version 2]]></license><package><![CDATA[Database]]></package><subpackage><![CDATA[Sqlite]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=IDB#class-IDB'>IDB</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=IDBResult#class-IDBResult'>IDBResult</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><class><name>Sqlite</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>DB</extends><string>class Sqlite extends DB implements IDB</string><implements><interface>IDB</interface></implements><docblock><description><![CDATA[<p>Sqlite child class to the DB class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Sqlite]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public __construct($host, $dbname [, $user [, $pass]])</string><docblock><description><![CDATA[<p>Constructor</p>

<p>NOTE! Use <a href='?__plibclass=DB#method-Create'>DB::Create()</a> instead of instantiating this class
directly.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$host]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dbname]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>host</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$host</string></param><param><name>dbname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbname</string></param><param><name>user</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$user</string></param><param><name>pass</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$pass</string></param></params></method><method><name>Connect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public Connect([$mode=511])</string><docblock><description><![CDATA[<p>Create a Sqlite database connection</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_open'>sqlite_open()</a>]]></link><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$mode]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Sqlite#class-Sqlite'>Sqlite</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>mode</name><value>511</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mode=511</string></param></params></method><method><name>PConnect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public PConnect([$mode=511])</string><docblock><description><![CDATA[<p>SQLite persisten connection</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=Sqlite#method-Connect'>Sqlite::Connect()</a>]]></type></types><description><![CDATA[]]></description></see><link><![CDATA[<a href='http://php.net/sqlite_popen'>php.net/sqlite_popen</a>]]></link><return><types><type><![CDATA[<a href='?__plibclass=Sqlite#class-Sqlite'>Sqlite</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>mode</name><value>511</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mode=511</string></param></params></method><method><name>init</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>private init($dbr)</string><docblock><description><![CDATA[<p>Verifies the connection and selects the db choosen.</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$dbr]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dbr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbr</string></param></params></method><method><name>Query</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public Query()</string><docblock><description><![CDATA[<p>Run a database query. This method can be called with an arbitrary
numner of arguments. It behaves pretty much like
<a href='http://php.net/printf'>printf()</a>. For  further description see
<a href='?__plibclass=DB#method-buildQuery'>DB::buildQuery()</a></p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_query'>php.net/sqlite_query</a>]]></link><throws><types><type><![CDATA[<a href='?__plibclass=DBQueryFail#class-DBQueryFail'>DBQueryFail</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>Arbitrary number of arguments</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>TableExists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public TableExists($table)</string><docblock><description><![CDATA[<p>Checks if table $table exists.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$table]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>table</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$table</string></param></params></method><method><name>Escape</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public Escape($what)</string><docblock><description><![CDATA[<p>Escape a string input</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_escape_string'>php.net/sqlite_escape_string</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>InsertID</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public InsertID()</string><docblock><description><![CDATA[<p>Return the last inserted id.</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_last_insert_rowid'>php.net/sqlite_last_insert_rowid</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Close</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public Close()</string><docblock><description><![CDATA[<p>Close the connection</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_close'>php.net/sqlite_close</a>]]></link></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destruct the DB object</p>]]></description></docblock><params/></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final static Create($driver [, $persistent]) inherited from DB</string><docblock><description><![CDATA[<p>Factory method for creating a new DB driver object</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$driver]]></variable><description><![CDATA[<p>The driver to use. Example: <code>mysql://uname:pword@host/db</code></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>driver</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$driver</string></param><param><name>persistent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$persistent</string></param></params></method><method><name>TablePrefix</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final TablePrefix($prefix) inherited from DB</string><docblock><description><![CDATA[<p>Set a table prefix. If this is set we can then use a string to subsitute
<a href='?__plibclass=DB#method-prefix'>DB::prefix()</a> in front of the table names. The string to
substitute is #TPF#.</p>]]></description><uses><use><types/><description><![CDATA[<p>$tblprefix</p>]]></description></use></uses><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[]]></description></param></params><final><![CDATA[Can't be overridden]]></final></docblock><params><param><name>prefix</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>buildQuery</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>protected final buildQuery($args) inherited from DB</string><docblock><description><![CDATA[<p>Build a query.</p>

<p>Each derived class has a query method. An arbitrary number of arguments,
but at least one, can be passed to that method where the first argument
should be the SQL query it self which can contain a formatted string
(<a href='http://php.net/sprintf'>sprintf()</a>).</p>

<p>The formats will then be substituted with the rest of the arguments. So
we pass all arguments to child::Query() as an array to here where we do
the substitution if any are to be done.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>prefix</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>private final prefix($query) inherited from DB</string><docblock><description><![CDATA[<p>Replace the #TPF# pattern with our table prefix.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$query]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>query</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$query</string></param></params></method><method><name>PrepareSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final PrepareSQL() inherited from DB</string><docblock><description><![CDATA[<p>Prepare an SQL query. The construction is the same as
<a href='http://php.net/sprintf'>sprintf()</a>.</p>]]></description><link><![CDATA[<a href='?__plibclass=DB#method-buildQuery'>DB::buildQuery()</a>]]></link><uses><use><types/><description><![CDATA[<p>$sql</p>]]></description></use></uses><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>Abritrary numer of arguments</p>]]></description></param></params></docblock><params/></method><method><name>GetSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public GetSQL() inherited from DB</string><docblock><description><![CDATA[<p>Return the SQL query if <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> has been used.
This method is pretty much only for debug usage.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return><deprecated><![CDATA[This method is only kept for compatibility with older
PHP5 versions. Use the functionality of the magic method __toString
instead. That is; just echo the damn object!]]></deprecated></docblock><params/></method><method><name>Quote</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public Quote($what) inherited from DB</string><docblock><description><![CDATA[<p>Alias for DB::Escape()</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DB</declaring-class><inherited>1</inherited><string>public static ParseURL($url) inherited from DB</string><docblock><description><![CDATA[<p>Parse the connection string.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public __toString() inherited from DB</string><docblock><description><![CDATA[<p>Converts the object to a string (See
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>
for a description.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__sleep</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final __sleep() inherited from DB</string><docblock><description><![CDATA[<p>Magic function __sleep</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method><method><name>__wakeup</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final __wakeup() inherited from DB</string><docblock><description><![CDATA[<p>Magic function __wakeup</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method></methods><properties><property><name>mode</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $mode</string><docblock><description><![CDATA[<p>File access mode for the DB</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $error</string><docblock><description><![CDATA[<p>Error string</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>host</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $host</string><docblock><description><![CDATA[<p>Database host</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>dbname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dbname</string><docblock><description><![CDATA[<p>Name of the database to use</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>The resource identifier after the query has been executed</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>tblprefix</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tblprefix</string><docblock><description><![CDATA[<p>Table prefix</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>sql</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sql</string><docblock><description><![CDATA[<p>If <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> is used the sql query will be stored here</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>Sqlite_DBResult</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>DBResult</extends><string>class Sqlite_DBResult extends DBResult implements IDBResult</string><implements><interface>IDBResult</interface></implements><docblock><description><![CDATA[<p>Sqlite_Result child class to <a href='?__plibclass=DBResult#class-DBResult'>DBResult</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Sqlite]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public __construct($res)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$res]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>res</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$res</string></param></params></method><method><name>Fetch</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public Fetch()</string><docblock><description><![CDATA[<p>Iterate over the result set.
Wrapper for <a href='http://php.net/sqlite_fetch_object'>sqlite_fetch_object()</a></p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=DBResult#property-counter'>DBResult::$counter</a>]]></type></types><description><![CDATA[<p>$counter</p>]]></description></use></uses><link><![CDATA[<a href='http://php.net/sqlite_fetch_object'>php.net/sqlite_fetch_object</a>]]></link><return><types><type><![CDATA[object]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>FetchAssoc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public FetchAssoc()</string><docblock><description><![CDATA[<p>Fetch result as an associative array</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_fetch_array'>sqlite_fetch_array()</a>]]></link><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NumRows</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public NumRows()</string><docblock><description><![CDATA[<p>Get numer of rows in the result</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_num_rows'>php.net/sqlite_num_rows</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AffectedRows</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public AffectedRows()</string><docblock><description><![CDATA[<p>Get numer of affected rows in the result</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_changes'>php.net/sqlite_changes</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Result</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Sqlite_DBResult</declaring-class><inherited/><string>public Result([$row [, $col]])</string><docblock><description><![CDATA[<p>Get a single row result</p>]]></description><link><![CDATA[<a href='http://php.net/sqlite_fetch_single'>php.net/sqlite_fetch_single</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$row]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$col]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>row</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$row</string></param><param><name>col</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$col</string></param></params></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public Last() inherited from DBResult</string><docblock><description><![CDATA[<p>Are we on the last row in the result?</p>]]></description><return><types><type><![CDATA[boolean]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Counter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public Counter() inherited from DBResult</string><docblock><description><![CDATA[<p>Return the current result index</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public __destruct() inherited from DBResult</string><docblock><description><![CDATA[<p>Destructor
Free the resource</p>]]></description></docblock><params/></method></methods><properties><property><name>result</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $result</string><docblock><description><![CDATA[<p>The query result</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>counter</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $counter</string><docblock><description><![CDATA[<p>Keep track of how many rows we've looped through</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Database.php</name><path>DB/Database.php</path><namespace>DB</namespace><classpath>DB.Database</classpath><docblock><description><![CDATA[<p>This file contains interfaces, base classes and exception classes for
creating database drivers.</p>

<p>Example of usage:</p>

<div class='code'><code><span style='color: #990000;'><b>$db</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;DB<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Create<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;mysql://user:pass@host/db&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Connect<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$res</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Query<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;SELECT&#160;*&#160;FROM&#160;table&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$row</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$res</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Fetch<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;h1&#62;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$row</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>title&#160;&#160;&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;/h1&#62;\n&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;p&#62;&#34;</span>&#160;&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$row</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>excerpt&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;/p&#62;\n&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>!</span><span style='color: #990000;'><b>$res</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Last<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;hr/&#62;\n&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><br/></code></div>

<hr />

<p>Some features:</p>

<ul>
<li><p><strong>Escapeing of dynamic values in queries</strong></p>

<p>The <a href='?__plibclass=IDB#method-Query'>IDB::Query()</a> method works in the same way as
<a href='http://php.net/sprintf'>sprintf()</a> does and each argument will
will be escaped before inserted into the query.</p></li>
<li><p><strong>DB::TablePrefix($prefix)</strong></p>

<p>When developing database driven web applications you really can't
assume that every installation can use a dedicated database. To solve
this it's common to prefix the table names.</p>

<p>If you in your querys prefix all table references with #TPF# that
pattern will be substituted with what's ever passed to this method.</p>

<p>Example:</p>

<div class='code'><code>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$db</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;DB<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Create<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;mysql://user:pass@host/db&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Connect<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>TablePrefix<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;myapplication_&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$res</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Query<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;SELECT&#160;*&#160;FROM&#160;#TPF#employees&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0099CC;'>//&#160;This&#160;will&#160;then&#160;read:</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0099CC;'>//&#160;$res&#160;=&#160;$db-&#62;Query(&#34;SELECT&#160;*&#160;FROM&#160;myapplication_employees&#34;);</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;<br/></code></div></li>
<li><p><strong>DB::PrepareSQL();</strong></p>

<div class='code'><code>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>PrepareSQL<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;</span><br/><span style='color: #008800;'>&#160;&#160;&#160;&#160;&#160;&#160;INSERT&#160;INTO&#160;#TPF#employees(name,&#160;email,&#160;phone,&#160;department)</span><br/><span style='color: #008800;'>&#160;&#160;&#160;&#160;&#160;&#160;VALUES(&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;)&#34;</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;name&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;email&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;phone&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;department&#39;</span><span style='color: #0000FF;'>]</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$db</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Query<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<br/></code></div>

<p>Note! The arguments passed to this method will be escaped for safe
insertion.</p></li>
</ul>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.8.2]]></version><package><![CDATA[Database]]></package></docblock><class><name>IDB</name><type>interface</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract interface IDB]</string><implements/><docblock><description><![CDATA[<p>Database connection interface</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><since><![CDATA[0.8]]></since></docblock><methods><method><name>Connect</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDB</declaring-class><inherited/><string>abstract public Connect()</string><docblock><description><![CDATA[<p>A database must be connectable!</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[<p>The instance of self</p>]]></description></return></docblock><params/></method><method><name>PConnect</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDB</declaring-class><inherited/><string>abstract public PConnect()</string><docblock><description><![CDATA[<p>Create a persistent connection.
If the database implemented doesn't support persisten connections make
this an alias of <a href='?__plibclass=IDB#method-Connect'>IDB::Connect()</a></p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[<p>The instance of self</p>]]></description></return></docblock><params/></method><method><name>Close</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDB</declaring-class><inherited/><string>abstract public Close()</string><docblock><description><![CDATA[<p>Close the connection</p>]]></description></docblock><params/></method><method><name>Query</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDB</declaring-class><inherited/><string>abstract public Query()</string><docblock><description><![CDATA[<p>Run a database query. This method can be called with an arbitrary
numner of arguments. It behaves pretty much like <a href='http://php.net/printf'>printf()</a>. For
further description see <a href='?__plibclass=DB#method-buildQuery'>DB::buildQuery()</a></p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=DBQueryFail#class-DBQueryFail'>DBQueryFail</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Arbitrary number of arguments</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Escape</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDB</declaring-class><inherited/><string>abstract public Escape($what)</string><docblock><description><![CDATA[<p>Escape a string for safe input.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method></methods><properties/></class><class><name>IDBResult</name><type>interface</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract interface IDBResult]</string><implements/><docblock><description><![CDATA[<p>Interface for a database query result</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><since><![CDATA[0.8]]></since></docblock><methods><method><name>Fetch</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDBResult</declaring-class><inherited/><string>abstract public Fetch()</string><docblock><description><![CDATA[<p>Iterate over the result set.</p>

<p>This method should return an object. Should behave like
<a href='http://php.net/mysql_fetch_object'>mysql_fetch_object</a>, and it
should increment the $counter member for each call.</p>]]></description><uses><use><types/><description><![CDATA[<p>$counter</p>]]></description></use></uses><return><types><type><![CDATA[object]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NumRows</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDBResult</declaring-class><inherited/><string>abstract public NumRows()</string><docblock><description><![CDATA[<p>Get numer of rows in the result
For an example see <a href='http://php.net/mysql_num_rows'>mysql_num_rows</a></p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AffectedRows</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDBResult</declaring-class><inherited/><string>abstract public AffectedRows()</string><docblock><description><![CDATA[<p>Get numer of affected rows in the result.
<a href='http://php.net/mysql_affected_rows'>mysql_affected_rows</a> for an
example.</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>IDBResult</declaring-class><inherited/><string>abstract public Last()</string><docblock><description><![CDATA[<p>Are we on the last row in the result?</p>]]></description><return><types><type><![CDATA[boolean]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties/></class><class><name>DB</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class DB]</string><implements/><docblock><description><![CDATA[<p>Master class for the database abstraction. All DB driver plugins must
inherit this class.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract>1</abstract><visibility>protected</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>abstract protected __construct($host, $dbname [, $user [, $pass]])</string><docblock><description><![CDATA[<p>This constructor is hidden so that an instance of this class can not
be instantiated directly, it needs to be instantiated from a derived
class.</p>

<p>NOTE! For drivers that don't take username and password, <a href='?__plibclass=Sqlite#class-Sqlite'>Sqlite</a>
for instance, these ctor parameters must be defined in the constructor
anyway.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$host]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dbname]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[null]]></type></types><variable><![CDATA[$user]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[null]]></type></types><variable><![CDATA[$pass]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>host</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$host</string></param><param><name>dbname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbname</string></param><param><name>user</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$user</string></param><param><name>pass</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$pass</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>DB</declaring-class><inherited/><string>public final static Create($driver [, $persistent])</string><docblock><description><![CDATA[<p>Factory method for creating a new DB driver object</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$driver]]></variable><description><![CDATA[<p>The driver to use. Example: <code>mysql://uname:pword@host/db</code></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>driver</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$driver</string></param><param><name>persistent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$persistent</string></param></params></method><method><name>TablePrefix</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public final TablePrefix($prefix)</string><docblock><description><![CDATA[<p>Set a table prefix. If this is set we can then use a string to subsitute
<a href='?__plibclass=DB#method-prefix'>DB::prefix()</a> in front of the table names. The string to
substitute is #TPF#.</p>]]></description><uses><use><types/><description><![CDATA[<p>$tblprefix</p>]]></description></use></uses><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[]]></description></param></params><final><![CDATA[Can't be overridden]]></final></docblock><params><param><name>prefix</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>buildQuery</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>protected final buildQuery($args)</string><docblock><description><![CDATA[<p>Build a query.</p>

<p>Each derived class has a query method. An arbitrary number of arguments,
but at least one, can be passed to that method where the first argument
should be the SQL query it self which can contain a formatted string
(<a href='http://php.net/sprintf'>sprintf()</a>).</p>

<p>The formats will then be substituted with the rest of the arguments. So
we pass all arguments to child::Query() as an array to here where we do
the substitution if any are to be done.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>prefix</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>private final prefix($query)</string><docblock><description><![CDATA[<p>Replace the #TPF# pattern with our table prefix.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$query]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>query</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$query</string></param></params></method><method><name>PrepareSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public final PrepareSQL()</string><docblock><description><![CDATA[<p>Prepare an SQL query. The construction is the same as
<a href='http://php.net/sprintf'>sprintf()</a>.</p>]]></description><link><![CDATA[<a href='?__plibclass=DB#method-buildQuery'>DB::buildQuery()</a>]]></link><uses><use><types/><description><![CDATA[<p>$sql</p>]]></description></use></uses><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>Abritrary numer of arguments</p>]]></description></param></params></docblock><params/></method><method><name>GetSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public GetSQL()</string><docblock><description><![CDATA[<p>Return the SQL query if <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> has been used.
This method is pretty much only for debug usage.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return><deprecated><![CDATA[This method is only kept for compatibility with older
PHP5 versions. Use the functionality of the magic method __toString
instead. That is; just echo the damn object!]]></deprecated></docblock><params/></method><method><name>Quote</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public Quote($what)</string><docblock><description><![CDATA[<p>Alias for DB::Escape()</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DB</declaring-class><inherited/><string>public static ParseURL($url)</string><docblock><description><![CDATA[<p>Parse the connection string.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>DTOR
Unset the resource; the database connection</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Converts the object to a string (See
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>
for a description.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__sleep</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public final __sleep()</string><docblock><description><![CDATA[<p>Magic function __sleep</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method><method><name>__wakeup</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited/><string>public final __wakeup()</string><docblock><description><![CDATA[<p>Magic function __wakeup</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method></methods><properties><property><name>host</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $host</string><docblock><description><![CDATA[<p>Database host</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>dbname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dbname</string><docblock><description><![CDATA[<p>Name of the database to use</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>The resource identifier after the query has been executed</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>tblprefix</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tblprefix</string><docblock><description><![CDATA[<p>Table prefix</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>sql</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sql</string><docblock><description><![CDATA[<p>If <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> is used the sql query will be stored here</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>DBResult</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class DBResult]</string><implements/><docblock><description><![CDATA[<p>Master class for database results</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited/><string>public __construct($result)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><uses><use><types/><description><![CDATA[<p>$result</p>]]></description></use></uses><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$result]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>result</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$result</string></param></params></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited/><string>public Last()</string><docblock><description><![CDATA[<p>Are we on the last row in the result?</p>]]></description><return><types><type><![CDATA[boolean]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Counter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited/><string>public Counter()</string><docblock><description><![CDATA[<p>Return the current result index</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor
Free the resource</p>]]></description></docblock><params/></method></methods><properties><property><name>result</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $result</string><docblock><description><![CDATA[<p>The query result</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>counter</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $counter</string><docblock><description><![CDATA[<p>Keep track of how many rows we've looped through</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>DBException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class DBException extends Exception</string><implements/><docblock><description><![CDATA[<p>General DB exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Exception]]></subpackage><since><![CDATA[0.10]]></since></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>DBDriverNotFound</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class DBDriverNotFound extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for missing DB-drivers</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Exception]]></subpackage><since><![CDATA[0.8]]></since></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>DBConnectionFail</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class DBConnectionFail extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for failed connections</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>DBNotFound</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class DBNotFound extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class when a selected DB doesn't exist</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>DBQueryFail</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class DBQueryFail extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for failed queries</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module><module><name>SQLTablify.php</name><path>DB/SQLTablify.php</path><namespace>DB</namespace><classpath>DB.SQLTablify</classpath><docblock><description><![CDATA[<p>Creates a HTML table from a database recordset</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.10]]></version><package><![CDATA[Database]]></package><depends><depend><types><type><![CDATA[<a href='?__plibclass=Tablify#class-Tablify'>Tablify</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><class><name>SQLTablify</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Tablify</extends><string>class SQLTablify extends Tablify</string><implements/><docblock><description><![CDATA[<p>Creates a HTML table from a database recordset.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.10]]></version><package><![CDATA[Database]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SQLTablify</declaring-class><inherited/><string>public __construct($args)</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=Tablify#method-__construct'>Tablify::__construct()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Headers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SQLTablify</declaring-class><inherited/><string>public Headers()</string><docblock><description><![CDATA[<p>Set the column headers</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Arbitrary number of arguments</p>]]></description></param></params></docblock><params/></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SQLTablify</declaring-class><inherited/><string>public Parse($resource [, $ucfirst=1])</string><docblock><description><![CDATA[<p>Parse the database record set</p>]]></description><params><param><types><type><![CDATA[resource]]></type><type><![CDATA[object]]></type></types><variable><![CDATA[$resource]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$ucfirst]]></variable><description><![CDATA[<p>Turn the first character in the header fields to upper case if headers
 isn't set explicitly</p>]]></description></param></params></docblock><params><param><name>resource</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$resource</string></param><param><name>ucfirst</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$ucfirst=1</string></param></params></method><method><name>ParseFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SQLTablify</declaring-class><inherited/><string>public ParseFile()</string><docblock><description><![CDATA[<p>Hide the <a href='?__plibclass=Tablify#method-ParseFile'>Tablify::ParseFile()</a> method</p>]]></description></docblock><params/></method><method><name>append</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>SQLTablify</declaring-class><inherited/><string>private append($row)</string><docblock><description><![CDATA[<p>Append the db row to the <a href='?__plibclass=Tablify#property-'>Tablify::$content</a> array</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$row]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>row</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$row</string></param></params></method><method><name>Sort</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public Sort([$col [, $order]]) inherited from Tablify</string><docblock><description><![CDATA[<p>Set sorting rules.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$col]]></variable><description><![CDATA[<p>What column to do the initial sort on.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$order]]></variable><description><![CDATA[<p>Sort order. Use the builtin constants SORT_ASC and SORT_DESC</p>]]></description></param></params></docblock><params><param><name>col</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$col</string></param><param><name>order</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$order</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public Render() inherited from Tablify</string><docblock><description><![CDATA[<p>Render the CVS data to a table.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Copy</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public Copy() inherited from Tablify</string><docblock><description><![CDATA[<p>Make a copy of the object.
All settings in <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> will be copied to the new object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Tablify#class-Tablify'>Tablify</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>createArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected createArray($line) inherited from Tablify</string><docblock><description><![CDATA[<p>Splits $line to a column array and append to the <a href='?__plibclass=Tablify#property-'>Tablify::$content</a>
array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$line]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>line</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$line</string></param></params></method><method><name>createHeader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected createHeader($row) inherited from Tablify</string><docblock><description><![CDATA[<p>Creates the header row and makes them interactive of in interactive mode.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$row]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>row</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$row</string></param></params></method><method><name>getSessObject</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected getSessObject() inherited from Tablify</string><docblock><description><![CDATA[<p>Determines how to sort the tables if in interactive mode.</p>]]></description><return><types><type><![CDATA[array]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>_strsort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected _strsort($a, $b) inherited from Tablify</string><docblock><description><![CDATA[<p>Sort content on string values
This is a callback for <a href='http://php.net/uasort'>uasort()</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>_intsort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected _intsort($a, $b) inherited from Tablify</string><docblock><description><![CDATA[<p>Sort content on numeric values
This is a callback for {@link uasort()}</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>isNumber</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected isNumber($what) inherited from Tablify</string><docblock><description><![CDATA[<p>Check if $what is numberic</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>attrToStr</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected attrToStr($attr) inherited from Tablify</string><docblock><description><![CDATA[<p>Turns an associative array into a string of HTML tag attributes.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>linkify</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>protected linkify($str) inherited from Tablify</string><docblock><description><![CDATA[<p>Makes URLs clickable</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public __set($key, $value) inherited from Tablify</string><docblock><description><![CDATA[<p>Magic method. Sets values to the <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public __get($what) inherited from Tablify</string><docblock><description><![CDATA[<p>Magic method. Returns the value of the <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> array with
index $what</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited>1</inherited><string>public __destruct() inherited from Tablify</string><docblock><description><![CDATA[<p>Destructor.</p>]]></description></docblock><params/></method></methods><properties><property><name>headers</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $headers</string><docblock><description><![CDATA[<p>Column headers</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>instanses</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $instanses</string><docblock><description><![CDATA[<p>Instance counter. Used when creating a unique object key</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>conf</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $conf</string><docblock><description><![CDATA[<p></p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>sortOrder</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sortOrder</string><docblock><description><![CDATA[<p>The sort order.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>sortCol</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sortCol</string><docblock><description><![CDATA[<p>What column index to sort on.
0 means don't sort</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>contents</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $contents</string><docblock><description><![CDATA[<p>The array with the rows and columns of the parsed data</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>buffer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $buffer</string><docblock><description><![CDATA[<p>The resulting table</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>flood</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $flood</string><docblock><description><![CDATA[<p>The highest number of columns a row has.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>uniqueKey</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniqueKey</string><docblock><description><![CDATA[<p>Each object gets an unique key so we can determine what table to sort
on interactive sort if multiple tables are created.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>renders</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $renders</string><docblock><description><![CDATA[<p>The same object can only be used once. This member keeps track of that!</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Mysql_driver.php</name><path>DB/Mysql_driver.php</path><namespace>DB</namespace><classpath>DB.Mysql_driver</classpath><docblock><description><![CDATA[<p>Mysql database driver.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.8]]></version><license><![CDATA[GPL version 2]]></license><package><![CDATA[Database]]></package><subpackage><![CDATA[Mysql]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=IDB#class-IDB'>IDB</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=IDBResult#class-IDBResult'>IDBResult</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><class><name>Mysql</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>DB</extends><string>class Mysql extends DB implements IDB</string><implements><interface>IDB</interface></implements><docblock><description><![CDATA[<p>Mysql child class to the DB class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Mysql]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public __construct($host, $dbname [, $user [, $pass]])</string><docblock><description><![CDATA[<p>Constructor</p>

<p>NOTE! Use <a href='?__plibclass=DB#method-Create'>DB::Create()</a> instead of instantiating this class
directly.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$host]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dbname]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$user]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$pass]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>host</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$host</string></param><param><name>dbname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbname</string></param><param><name>user</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$user</string></param><param><name>pass</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$pass</string></param></params></method><method><name>Connect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public Connect()</string><docblock><description><![CDATA[<p>Create a Mysql database connection</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_connect'>php.net/mysql_connect</a>]]></link><return><types><type><![CDATA[<a href='?__plibclass=Mysql#class-Mysql'>Mysql</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>PConnect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public PConnect()</string><docblock><description><![CDATA[<p>Mysql persisten connection</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_pconnect'>mysql_pconnect()</a>]]></link><return><types><type><![CDATA[<a href='?__plibclass=Mysql#class-Mysql'>Mysql</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>init</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>private init($dbr)</string><docblock><description><![CDATA[<p>Verifies the connection and selects the db choosen.</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_select_db'>php.net/mysql_select_db</a>]]></link><uses><use><types><type><![CDATA[<a href='?__plibclass=DB#property-resource'>DB::$resource</a>]]></type></types><description><![CDATA[<p>$resource</p>]]></description></use></uses><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$dbr]]></variable><description><![CDATA[<p>See <a href='?__plibclass=DB#property-resource'>DB::$resource</a></p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dbr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbr</string></param></params></method><method><name>Query</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public Query()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_query'>mysql_query()</a>]]></link><throws><types><type><![CDATA[<a href='?__plibclass=DBQueryFail#class-DBQueryFail'>DBQueryFail</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Arbitrary number of arguments</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Mysql_DBResult#class-Mysql_DBResult'>Mysql_DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Escape</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public Escape($what)</string><docblock><description><![CDATA[<p>Escape a string input</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_escape_string'>mysql_escape_string()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>InsertID</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public InsertID()</string><docblock><description><![CDATA[<p>Return the last inserted id.</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_insert_id'>mysql_insert_id()</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Close</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public Close()</string><docblock><description><![CDATA[<p>Close the connection</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_close'>mysql_close()</a>]]></link></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destruct the DB object</p>]]></description><link><![CDATA[{@link mysql_close()}]]></link></docblock><params/></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final static Create($driver [, $persistent]) inherited from DB</string><docblock><description><![CDATA[<p>Factory method for creating a new DB driver object</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$driver]]></variable><description><![CDATA[<p>The driver to use. Example: <code>mysql://uname:pword@host/db</code></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>driver</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$driver</string></param><param><name>persistent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$persistent</string></param></params></method><method><name>TablePrefix</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final TablePrefix($prefix) inherited from DB</string><docblock><description><![CDATA[<p>Set a table prefix. If this is set we can then use a string to subsitute
<a href='?__plibclass=DB#method-prefix'>DB::prefix()</a> in front of the table names. The string to
substitute is #TPF#.</p>]]></description><uses><use><types/><description><![CDATA[<p>$tblprefix</p>]]></description></use></uses><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[]]></description></param></params><final><![CDATA[Can't be overridden]]></final></docblock><params><param><name>prefix</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>buildQuery</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>protected final buildQuery($args) inherited from DB</string><docblock><description><![CDATA[<p>Build a query.</p>

<p>Each derived class has a query method. An arbitrary number of arguments,
but at least one, can be passed to that method where the first argument
should be the SQL query it self which can contain a formatted string
(<a href='http://php.net/sprintf'>sprintf()</a>).</p>

<p>The formats will then be substituted with the rest of the arguments. So
we pass all arguments to child::Query() as an array to here where we do
the substitution if any are to be done.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>prefix</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>private final prefix($query) inherited from DB</string><docblock><description><![CDATA[<p>Replace the #TPF# pattern with our table prefix.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$query]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>query</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$query</string></param></params></method><method><name>PrepareSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final PrepareSQL() inherited from DB</string><docblock><description><![CDATA[<p>Prepare an SQL query. The construction is the same as
<a href='http://php.net/sprintf'>sprintf()</a>.</p>]]></description><link><![CDATA[<a href='?__plibclass=DB#method-buildQuery'>DB::buildQuery()</a>]]></link><uses><use><types/><description><![CDATA[<p>$sql</p>]]></description></use></uses><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>Abritrary numer of arguments</p>]]></description></param></params></docblock><params/></method><method><name>GetSQL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public GetSQL() inherited from DB</string><docblock><description><![CDATA[<p>Return the SQL query if <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> has been used.
This method is pretty much only for debug usage.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return><deprecated><![CDATA[This method is only kept for compatibility with older
PHP5 versions. Use the functionality of the magic method __toString
instead. That is; just echo the damn object!]]></deprecated></docblock><params/></method><method><name>Quote</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public Quote($what) inherited from DB</string><docblock><description><![CDATA[<p>Alias for DB::Escape()</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DB</declaring-class><inherited>1</inherited><string>public static ParseURL($url) inherited from DB</string><docblock><description><![CDATA[<p>Parse the connection string.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public __toString() inherited from DB</string><docblock><description><![CDATA[<p>Converts the object to a string (See
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>
for a description.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__sleep</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final __sleep() inherited from DB</string><docblock><description><![CDATA[<p>Magic function __sleep</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method><method><name>__wakeup</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>DB</declaring-class><inherited>1</inherited><string>public final __wakeup() inherited from DB</string><docblock><description><![CDATA[<p>Magic function __wakeup</p>

<p>See <a href='http://php.net/manual/en/language.oop5.magic.php'>PHP.NET</a> for a
description.</p>]]></description><magic><![CDATA[]]></magic></docblock><params/></method></methods><properties><property><name>username</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $username</string><docblock><description><![CDATA[<p>Database username</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>password</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $password</string><docblock><description><![CDATA[<p>Databse password</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>host</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $host</string><docblock><description><![CDATA[<p>Database host</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>dbname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dbname</string><docblock><description><![CDATA[<p>Name of the database to use</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>The resource identifier after the query has been executed</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>tblprefix</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tblprefix</string><docblock><description><![CDATA[<p>Table prefix</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>sql</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sql</string><docblock><description><![CDATA[<p>If <a href='?__plibclass=DB#method-PrepareSQL'>DB::PrepareSQL()</a> is used the sql query will be stored here</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>Mysql_DBResult</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>DBResult</extends><string>class Mysql_DBResult extends DBResult implements IDBResult</string><implements><interface>IDBResult</interface></implements><docblock><description><![CDATA[<p>Mysql child class to <a href='?__plibclass=DBResult#class-DBResult'>DBResult</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Database]]></package><subpackage><![CDATA[Mysql]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public __construct($res)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$res]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>res</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$res</string></param></params></method><method><name>Fetch</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public Fetch()</string><docblock><description><![CDATA[<p>Iterate over the result set.
Wrapper for <a href='http://php.net/mysql_fetch_object'>mysql_fetch_object()</a></p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=DBResult#property-counter'>DBResult::$counter</a>]]></type></types><description><![CDATA[<p>$counter</p>]]></description></use></uses><link><![CDATA[<a href='http://php.net/mysql_fetch_object'>php.net/mysql_fetch_object</a>]]></link><return><types><type><![CDATA[object]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>FetchAssoc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public FetchAssoc()</string><docblock><description><![CDATA[<p>Fetch result as an associative array</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_fetch_assoc'>mysql_fetch_assoc()</a>]]></link><uses><use><types><type><![CDATA[<a href='?__plibclass=DBResult#property-counter'>DBResult::$counter</a>]]></type></types><description><![CDATA[<p>$counter</p>]]></description></use></uses><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NumRows</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public NumRows()</string><docblock><description><![CDATA[<p>Get numer of rows in the result</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_num_rows'>mysql_num_rows()</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AffectedRows</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public AffectedRows()</string><docblock><description><![CDATA[<p>Get numer of affected rows in the result</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_affected_rows'>mysql_affected_rows()</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Result</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public Result([$row [, $col]])</string><docblock><description><![CDATA[<p>Get the result</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_result'>mysql_result()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$row]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$col]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>row</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$row</string></param><param><name>col</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$col</string></param></params></method><method><name>Seek</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Mysql_DBResult</declaring-class><inherited/><string>public Seek($offset)</string><docblock><description><![CDATA[<p>Seek offset in result set.</p>]]></description><link><![CDATA[<a href='http://php.net/mysql_data_seek'>mysql_data_seek()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[resource]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param></params></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public Last() inherited from DBResult</string><docblock><description><![CDATA[<p>Are we on the last row in the result?</p>]]></description><return><types><type><![CDATA[boolean]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Counter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public Counter() inherited from DBResult</string><docblock><description><![CDATA[<p>Return the current result index</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DBResult</declaring-class><inherited>1</inherited><string>public __destruct() inherited from DBResult</string><docblock><description><![CDATA[<p>Destructor
Free the resource</p>]]></description></docblock><params/></method></methods><properties><property><name>result</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $result</string><docblock><description><![CDATA[<p>The query result</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>counter</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $counter</string><docblock><description><![CDATA[<p>Keep track of how many rows we've looped through</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module></namespace><namespace name="Graphics" path="Graphics"><module><name>GText.php</name><path>Graphics/GText.php</path><namespace>Graphics</namespace><classpath>Graphics.GText</classpath><docblock><description><![CDATA[<p>Graphics text</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Graphics]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=Graphics#class-Graphics'>Graphics</a>]]></type></types><description><![CDATA[]]></description></use></uses><depends><depend><types/><description><![CDATA[<p><a href='http://php.net/gd'>The PHP Image module</a></p>]]></description></depend></depends></docblock><class><name>GText</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Graphics</extends><string>class GText extends Graphics</string><implements/><docblock><description><![CDATA[<p>Class for generating text images</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>public __construct($font [, $imagedir=.])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$font]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$imagedir]]></variable><description><![CDATA[<p>Where to save the generated images</p>]]></description></param></params></docblock><params><param><name>font</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$font</string></param><param><name>imagedir</name><value>.</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$imagedir=.</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>public Render($text [, $output])</string><docblock><description><![CDATA[<p>Create the text image</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$output]]></variable><description><![CDATA[<p>if set to true the file will not be saved but rather just written
 to the output buffer.</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>output</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$output</string></param></params></method><method><name>MimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>public MimeType()</string><docblock><description><![CDATA[<p>Returns the mimetype for the current image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>generateFileName</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>protected generateFileName($text)</string><docblock><description><![CDATA[<p>Generates a unique filename</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>getFilePath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>protected getFilePath($text)</string><docblock><description><![CDATA[<p>Returns the full path of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>ToMD5</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>public ToMD5($text)</string><docblock><description><![CDATA[<p>Returns a md5 hash of the object. All members will be used as salt.
Useful if cacheing the images in a dynamic environment where the hash
can be used to invalidate the cache.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited/><string>public __set($key, $value)</string><docblock><description><![CDATA[<p>Setter.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static IsSupported($what) inherited from Graphics</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static ConvertBoundingBox($bbox) inherited from Graphics</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p><a href='http://php.net/imagettfbbox'>imagettfbbox()</a></p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static Hex2RGB($hex) inherited from Graphics</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>bgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $bgcolor</string><docblock><description><![CDATA[<p>Default background color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fgcolor</string><docblock><description><![CDATA[<p>Default text color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontsize</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontsize</string><docblock><description><![CDATA[<p>Default font size</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>alpha</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $alpha</string><docblock><description><![CDATA[<p>Use transparent background.
0 means no transparency, 127 means full transparency</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>format</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $format</string><docblock><description><![CDATA[<p>Image format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>wordwrap</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $wordwrap</string><docblock><description><![CDATA[<p>If greater than 0 the text will be wrapped at column $wordwrap</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>imagedir</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $imagedir</string><docblock><description><![CDATA[<p>The directory in which to save the image</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>font</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $font</string><docblock><description><![CDATA[<p>The font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>fontpath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontpath</string><docblock><description><![CDATA[<p>The path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>settable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $settable</string><docblock><description><![CDATA[<p>Publically settable members</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>filename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $filename</string><docblock><description><![CDATA[<p>The generated file name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>instances</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $instances</string><docblock><description><![CDATA[<p>Number of generated images</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>GTextCacheable</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>GText</extends><string>class GTextCacheable extends GText</string><implements/><docblock><description><![CDATA[<p>Implements cacheable text images</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><depends><depend><types><type><![CDATA[<a href='?__plibclass=Cache#class-Cache'>Cache</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextCacheable</declaring-class><inherited/><string>public __construct($font [, $imgdir=.])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=GText#method-__construct'>GText::__construct()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$font]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$imgdir]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>font</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$font</string></param><param><name>imgdir</name><value>.</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$imgdir=.</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextCacheable</declaring-class><inherited/><string>public Render($text [, $output])</string><docblock><description><![CDATA[<p>Render the graphics text</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>output</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$output</string></param></params></method><method><name>MimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public MimeType() inherited from GText</string><docblock><description><![CDATA[<p>Returns the mimetype for the current image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>generateFileName</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>protected generateFileName($text) inherited from GText</string><docblock><description><![CDATA[<p>Generates a unique filename</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>getFilePath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>protected getFilePath($text) inherited from GText</string><docblock><description><![CDATA[<p>Returns the full path of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>ToMD5</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public ToMD5($text) inherited from GText</string><docblock><description><![CDATA[<p>Returns a md5 hash of the object. All members will be used as salt.
Useful if cacheing the images in a dynamic environment where the hash
can be used to invalidate the cache.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public __set($key, $value) inherited from GText</string><docblock><description><![CDATA[<p>Setter.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static IsSupported($what) inherited from Graphics</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static ConvertBoundingBox($bbox) inherited from Graphics</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p>{@see imagettfbbox()}</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static Hex2RGB($hex) inherited from Graphics</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>cacheloaded</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $cacheloaded</string><docblock><description><![CDATA[<p>Is the cache class loaded or not?</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>bgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $bgcolor</string><docblock><description><![CDATA[<p>Default background color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fgcolor</string><docblock><description><![CDATA[<p>Default text color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontsize</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontsize</string><docblock><description><![CDATA[<p>Default font size</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>alpha</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $alpha</string><docblock><description><![CDATA[<p>Use transparent background.
0 means no transparency, 127 means full transparency</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>format</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $format</string><docblock><description><![CDATA[<p>Image format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>wordwrap</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $wordwrap</string><docblock><description><![CDATA[<p>If greater than 0 the text will be wrapped at column $wordwrap</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>imagedir</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $imagedir</string><docblock><description><![CDATA[<p>The directory in which to save the image</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>font</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $font</string><docblock><description><![CDATA[<p>The font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>fontpath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontpath</string><docblock><description><![CDATA[<p>The path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>settable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $settable</string><docblock><description><![CDATA[<p>Publically settable members</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>filename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $filename</string><docblock><description><![CDATA[<p>The generated file name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>instances</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $instances</string><docblock><description><![CDATA[<p>Number of generated images</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>GTextDB</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>GText</extends><string>class GTextDB extends GText</string><implements/><docblock><description><![CDATA[<p>Like <a href='?__plibclass=GText#class-GText'>GText</a> and <a href='?__plibclass=GTextCacheable#class-GTextCacheable'>GTextCacheable</a> except this class utilize
a special database table.</p>

<p><strong>The table structure</strong></p>

<div class='code'><code><span style='color: #0099CC;'>#&#160;MySQL</span><br/>CREATE&#160;TABLE&#160;&#160;`dbname`<span style='color: #0000FF;'>.</span>`gtext`&#160;<span style='color: #0000FF;'>(</span><br/>&#160;&#160;`ckey`&#160;varchar<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`created`&#160;datetime&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`hash`&#160;varchar<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`width`&#160;<span style='color: #000099;'><b>int</b></span><span style='color: #0000FF;'>(</span><span style='color: purple;'>11</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`height`&#160;<span style='color: #000099;'><b>int</b></span><span style='color: #0000FF;'>(</span><span style='color: purple;'>11</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`remove_callback`&#160;varchar<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`id`&#160;<span style='color: #000099;'><b>int</b></span><span style='color: #0000FF;'>(</span><span style='color: purple;'>11</span><span style='color: #0000FF;'>)</span>&#160;NOT&#160;NULL&#160;auto_increment<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`type`&#160;varchar<span style='color: #0000FF;'>(</span><span style='color: purple;'>100</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #000099;'><b>default</b></span>&#160;NULL<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`data`&#160;longblob<span style='color: #0000FF;'>,</span><br/>&#160;&#160;PRIMARY&#160;KEY&#160;&#160;<span style='color: #0000FF;'>(</span>`id`<span style='color: #0000FF;'>)</span><br/><span style='color: #0000FF;'>)</span>&#160;ENGINE<span style='color: #0000FF;'>=</span>MyISAM<br/>&#160;<br/><span style='color: #0099CC;'>#SQLite</span><br/>CREATE&#160;TABLE&#160;`gtext`&#160;<span style='color: #0000FF;'>(</span><br/>&#160;&#160;`ckey`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VARCHAR<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`created`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;DATE<span style='color: #0000FF;'>,</span><br/>&#160;&#160;`hash`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VARCHAR<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`width`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INT<span style='color: #0000FF;'>(</span><span style='color: purple;'>11</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`height`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;INT<span style='color: #0000FF;'>(</span><span style='color: purple;'>11</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`remove_callback`&#160;VARCHAR<span style='color: #0000FF;'>(</span><span style='color: purple;'>255</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`type`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;VARCHAR<span style='color: #0000FF;'>(</span><span style='color: purple;'>100</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span><br/>&#160;&#160;`data`&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;LONGBLOB<br/><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><example><![CDATA[GTextDB.xmpl]]></example><depends><depend><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=Mysql#class-Mysql'>Mysql</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDB</declaring-class><inherited/><string>public __construct($font)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$font]]></variable><description><![CDATA[<p>The full path to the font to use</p>]]></description></param></params><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>font</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$font</string></param></params></method><method><name>Initialize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>GTextDB</declaring-class><inherited/><string>public static Initialize([DB $db])</string><docblock><description><![CDATA[<p>Initialize the database object to use.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><variable><![CDATA[$db]]></variable><description><![CDATA[<p>A database driver extending <a href='?__plibclass=DB#class-DB'>DB</a>.</p>]]></description></param></params></docblock><params><param><name>db</name><value/><reference/><optional>1</optional><class>DB</class><array/><nullable>1</nullable><string>DB $db</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDB</declaring-class><inherited/><string>public Render($text)</string><docblock><description><![CDATA[<p>Create the image</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>GTextDB</declaring-class><inherited/><string>public static Get($which)</string><docblock><description><![CDATA[<p>Get a specific image from the database</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[<p>If the DB object isn't initialized</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>This is the cache key for the image.
 <a href='?__plibclass=GTextDB#class-GTextDB'>GTextDB</a> for an example of usage</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Mysql_DBResult#class-Mysql_DBResult'>Mysql_DBResult</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>Clear</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDB</declaring-class><inherited/><string>public Clear()</string><docblock><description><![CDATA[<p>Clear the dabtabase</p>]]></description></docblock><params/></method><method><name>MimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public MimeType() inherited from GText</string><docblock><description><![CDATA[<p>Returns the mimetype for the current image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>generateFileName</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>protected generateFileName($text) inherited from GText</string><docblock><description><![CDATA[<p>Generates a unique filename</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>getFilePath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>protected getFilePath($text) inherited from GText</string><docblock><description><![CDATA[<p>Returns the full path of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>ToMD5</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public ToMD5($text) inherited from GText</string><docblock><description><![CDATA[<p>Returns a md5 hash of the object. All members will be used as salt.
Useful if cacheing the images in a dynamic environment where the hash
can be used to invalidate the cache.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GText</declaring-class><inherited>1</inherited><string>public __set($key, $value) inherited from GText</string><docblock><description><![CDATA[<p>Setter.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static IsSupported($what) inherited from Graphics</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static ConvertBoundingBox($bbox) inherited from Graphics</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p>{@see imagettfbbox()}</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static Hex2RGB($hex) inherited from Graphics</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>db</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $db</string><docblock><description><![CDATA[<p>DB connection object</p>]]></description><var><![CDATA[Mysql|SQLite]]></var></docblock></property><property><name>table</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $table</string><docblock><description><![CDATA[<p>Name of the database table</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>sqlite_table</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $sqlite_table</string><docblock/></property><property><name>bgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $bgcolor</string><docblock><description><![CDATA[<p>Default background color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fgcolor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fgcolor</string><docblock><description><![CDATA[<p>Default text color</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontsize</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontsize</string><docblock><description><![CDATA[<p>Default font size</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>alpha</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $alpha</string><docblock><description><![CDATA[<p>Use transparent background.
0 means no transparency, 127 means full transparency</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>format</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $format</string><docblock><description><![CDATA[<p>Image format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>wordwrap</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $wordwrap</string><docblock><description><![CDATA[<p>If greater than 0 the text will be wrapped at column $wordwrap</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>imagedir</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $imagedir</string><docblock><description><![CDATA[<p>The directory in which to save the image</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>font</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $font</string><docblock><description><![CDATA[<p>The font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>fontpath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontpath</string><docblock><description><![CDATA[<p>The path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>settable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $settable</string><docblock><description><![CDATA[<p>Publically settable members</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>filename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $filename</string><docblock><description><![CDATA[<p>The generated file name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>instances</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $instances</string><docblock><description><![CDATA[<p>Number of generated images</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class></module><module><name>GTextDTR.php</name><path>Graphics/GTextDTR.php</path><namespace>Graphics</namespace><classpath>Graphics.GTextDTR</classpath><docblock><description><![CDATA[<p>GTextDTR - Dynamic Text Replacement</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Graphics]]></package><version><![CDATA[0.1]]></version></docblock><class><name>GTextDTR</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>HTMLParser</extends><string>class GTextDTR extends HTMLParser</string><implements/><docblock><description><![CDATA[<p>The GTextDTR (GText Dynamic Text Replacement) class will parse the entire
page and look for H1-H4 tags and wrap the content in a span tag, that is
hidden by a CSS rule, and turn the content into a text image which will be
set as background image in respecive H(x) tags.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Graphics]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public __construct(GText $gtext)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=GText#class-GText'>GText</a>]]></type></types><variable><![CDATA[$gtext]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>gtext</name><value/><reference/><optional/><class>GText</class><array/><nullable/><string>GText $gtext</string></param></params></method><method><name>SetFontSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public SetFontSize($tag, $size)</string><docblock><description><![CDATA[<p>Set font size for a given header level</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[<p>h1, h2, h3 or h4</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method><method><name>SetFontSizes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public SetFontSizes($sizes)</string><docblock><description><![CDATA[<p>Set all fontsizes at once.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$sizes]]></variable><description><![CDATA[<p>Associative array where the keys should be h1-h4 and the values
 should be of integer values.</p>]]></description></param></params></docblock><params><param><name>sizes</name><value/><reference/><optional/><class/><array/><nullable/><string>$sizes</string></param></params></method><method><name>HasClass</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public HasClass($classname)</string><docblock><description><![CDATA[<p>If you don't want to replace all header tags you can set a class rule which
means that only header tags with this css class applied to it will be
parsed and replaced.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$classname]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>classname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$classname</string></param></params></method><method><name>NotHasClass</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public NotHasClass($classname)</string><docblock><description><![CDATA[<p>The inverse of <a href='?__plibclass=GTextDTR#method-HasClass'>GTextDTR::HasClass()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$classname]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>classname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$classname</string></param></params></method><method><name>InsideOf</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public InsideOf($what)</string><docblock><description><![CDATA[<p>Set this to only parse header tags inside of this element.
NOTE! This will only work properly on valid XHTML.</p>

<div class='code'><code>&#160;&#160;<span style='color: #990000;'><b>$gtextDTR</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>InsideOf<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#34;&#60;div&#160;class=&#39;main-content&#39;&#62;&#34;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public Parse()</string><docblock><description><![CDATA[<p>Overrides the Parse method in <a href='?__plibclass=HTMLParser#class-HTMLParser'>HTMLParser</a>. Collects the current
buffer and calls the parent method.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getGTextURL</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>private getGTextURL($tag, $attr)</string><docblock><description><![CDATA[<p>Creates the text images as well as the new H1 or H2 tag with the text
wrapped in a span tag and CSS attributes written to the header tags.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$level]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable/><string>$attr</string></param></params></method><method><name>parseAttr</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>private parseAttr($attr)</string><docblock><description><![CDATA[<p>Turn the attribute array into a string and filter "style" attributes
if existing.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable/><string>$attr</string></param></params></method><method><name>tagCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>protected tagCallback(HTMLParser $p, $tag, $attr)</string><docblock><description><![CDATA[<p>Tag callback. Will be called for every tag that's found in the buffer</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLParser#class-HTMLParser'>HTMLParser</a>]]></type></types><variable><![CDATA[$p]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>p</name><value/><reference/><optional/><class>HTMLParser</class><array/><nullable/><string>HTMLParser $p</string></param><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>_hasClass</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>private _hasClass($attr, $class)</string><docblock><description><![CDATA[<p>Check if the tag has a class matching the class rule</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable/><string>$attr</string></param><param><name>class</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$class</string></param></params></method><method><name>dataCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>protected dataCallback(HTMLParser $p, $data)</string><docblock><description><![CDATA[<p>Data callback. Called when ever tag content is found</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLParser#class-HTMLParser'>HTMLParser</a>]]></type></types><variable><![CDATA[$p]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>p</name><value/><reference/><optional/><class>HTMLParser</class><array/><nullable/><string>HTMLParser $p</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>GetContents</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public GetContents()</string><docblock><description><![CDATA[<p>Returns the parsed buffer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>GTextDTR</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor. Cleans our internal buffer</p>]]></description></docblock><params/></method><method><name>AddTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public AddTag($tag, $cb) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Add action to take place when tag $tag is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span>&#160;<span style='color: #990000;'><b>$attributes</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>AddTags</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public AddTags($cbs) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Add one ore more tag callbacks at once. The argument should
be an associative array with the key/value should be tag/callback.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=HTMLParser#method-AddTag'>HTMLParser::AddTag()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$cbs]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cbs</name><value/><reference/><optional/><class/><array/><nullable/><string>$cbs</string></param></params></method><method><name>AddContainer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public AddContainer($tag, $cb) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Add action to take place when container tag $tag is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span>&#160;<span style='color: #990000;'><b>$attributes</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$content</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>AddContainers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public AddContainers($cbs) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Add one ore more container tag callbacks at once. The argument should
be an associative array with the key/value should be tag/callback.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=HTMLParser#method-AddContainer'>HTMLParser::AddContainer()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$cbs]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cbs</name><value/><reference/><optional/><class/><array/><nullable/><string>$cbs</string></param></params></method><method><name>SetDataCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public SetDataCallback($cb) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Add action to take place when tag data is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$content</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>SetEntityCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public SetEntityCallback($cb) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Set callback for entities.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$entity</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>SetTagCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public SetTagCallback($cb) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Set callback for all tags</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public Render([$return=1]) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Render the stack of parsed data. Note that <a href='?__plibclass=HTMLParser#method-Parse'>HTMLParser::Parse()</a>
must be called prior to this method. Since <a href='?__plibclass=HTMLParser#method-Parse'>HTMLParser::Parse()</a>
returns the HTMLParser object it self the call can be chained like:</p>

<div class='code'><code><span style='color: #990000;'><b>$result</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$parser</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Parse<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Render<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>If true the each <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a> and result from eventual callbacks
  will be added to a buffer which will then be returned. If you only want
  to parse the data and have no interest in the original HTML you should
  set this to false since that will both speed things up and keep the
  memory consuption down.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>return</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return=1</string></param></params></method><method><name>GetEndTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public GetEndTag(HTMLElement $e) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Tries to find the end tag of $e.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If $e is not a container tag</p>]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>e</name><value/><reference/><optional/><class>HTMLElement</class><array/><nullable/><string>HTMLElement $e</string></param></params></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public GetContent(HTMLElement $e [, $getEndTag]) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Tries to collect the content of a container tag.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$getEndTag]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[<p>if $getEndTag is true an array will be returned where the first index
  is the content and the second the end tag it self (HTMLElement).</p>]]></description></return></docblock><params><param><name>e</name><value/><reference/><optional/><class>HTMLElement</class><array/><nullable/><string>HTMLElement $e</string></param><param><name>getEndTag</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$getEndTag</string></param></params></method><method><name>Current</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public Current() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Returns the current HTMLElement during <a href='?__plibclass=HTMLParser#method-Render'>HTMLParser::Render()</a></p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Stack</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public Stack() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Returns the stack of <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>s.</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>TagName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public TagName() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Returns the current tag name during <a href='?__plibclass=HTMLParser#method-Render'>HTMLParser::Render()</a></p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Context</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public Context() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Returns the current context</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Tag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public Tag() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Returns the current full tag, i.e. <code>&lt;span class='date'&gt;</code></p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>scan</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private scan() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Scan the data</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>isComment</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private isComment($str, $pos) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Checks if the current position in $str is the beginning of a comment.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[<p>The offset where to start searching from.</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param></params></method><method><name>isCDATA</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private isCDATA($str, $pos) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Checks if the current position in $str is the beginning of a CDATA section.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param></params></method><method><name>find</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private find($what, $start) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Fint the position of $what in $this->data.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$start]]></variable><description><![CDATA[<p>The offset to start searching from</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>start</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$start</string></param></params></method><method><name>parseTagName</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private parseTagName($in) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Finds the tag name in a full tag. <code>&lt;div class='wrapper'&gt;</code> will return
<code>div</code>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>parseTagAttributes</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private parseTagAttributes($in) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Parse tag attributes.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>The found attributes. It's an assoc array where the attribute name is
  the key and the attribute value is the value.</p>]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>skipWhites</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private skipWhites($in, $begin) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Moves the offset in string $in to the first non-whitespace character.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$begin]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param><param><name>begin</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$begin</string></param></params></method><method><name>parseEntities</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private parseEntities($in) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Parse entities.
Found entities and surrounding data will be put on the stack when found.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>pStack</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>private pStack($type [, $value [, $attr [, $byte]]]) inherited from HTMLParser</string><docblock><description><![CDATA[<p>Creates a new <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a> and puts it on the stack.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The name of a tag or the content if it's data or the entire entity if an
  entity.</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$byte]]></variable><description><![CDATA[<p>The offset where the element begin.</p>]]></description></param></params></docblock><params><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param><param><name>byte</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$byte</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited>1</inherited><string>public __toString() inherited from HTMLParser</string><docblock><description><![CDATA[<p>Renders the stack into a string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>buffer</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $buffer</string><docblock><description><![CDATA[<p>Where we keep the parsed buffer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>capture</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $capture</string><docblock><description><![CDATA[<p>Set to true when an opening H1 or H2 tag is found</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>hdata</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $hdata</string><docblock><description><![CDATA[<p>The data of a H1 or H2 tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>hattr</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $hattr</string><docblock><description><![CDATA[<p>The attributes of the current header tag</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>gtext</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $gtext</string><docblock><description><![CDATA[<p>The GText object</p>]]></description><var><![CDATA[GTextCacheable]]></var></docblock></property><property><name>fontSizes</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $fontSizes</string><docblock><description><![CDATA[<p>Default font sizes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>classRule</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $classRule</string><docblock><description><![CDATA[<p>If set only header tags with this class will be parsed</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>notClassRule</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $notClassRule</string><docblock><description><![CDATA[<p>Header tags with this class name won't be parsed</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>insideOf</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $insideOf</string><docblock><description><![CDATA[<p>Only parse header tags inside of this rule.
This could be something like</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>div&#160;<span style='color: #000099;'><b>class</b></span><span style='color: #0000FF;'>=</span><span style='color: #008800;'>&#39;main-content&#39;</span><span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>forbiddenStyles</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $forbiddenStyles</string><docblock><description><![CDATA[<p>Style attributes dedicated to GTextDTR</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>depth</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $depth</string><docblock><description><![CDATA[<p>Keeps count of the current tag depth</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>doParse</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $doParse</string><docblock><description><![CDATA[<p>Should me begin parsing header tags.
This only has mening when $insideOf is set</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>stopAtLevel</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stopAtLevel</string><docblock><description><![CDATA[<p>When $insideOf is used we need to keep track of when to stop, that is when
we reach "outsideOf" again.</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Font.php</name><path>Graphics/Font.php</path><namespace>Graphics</namespace><classpath>Graphics.Font</classpath><docblock><description><![CDATA[<p>Font</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Dir#class-Dir'>Dir</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Font</name><type>class</type><abstract/><final/><instantiable/><extends/><string>[class Font]</string><implements/><docblock><description><![CDATA[<p>Reads information (creator, name, version an so on) from a font file.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Font]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>protected __construct($file)</string><docblock><description><![CDATA[<p>Hidden constructor. This class can't be instantiated directly but must
be instantiated from a child class.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static Create($fontfile)</string><docblock><description><![CDATA[<p>Creates a new instanse of what ever fonts are being supported</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontTTF#class-FontTTF'>FontTTF</a>]]></type><type><![CDATA[<a href='?__plibclass=FontAFM#class-FontAFM'>FontAFM</a>]]></type><type><![CDATA[<a href='?__plibclass=FontOTF#class-FontOTF'>FontOTF</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>AddDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static AddDir($path)</string><docblock><description><![CDATA[<p>Add a font directory.
The directory will be traversed recursivley for fonts to add.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>AddFont</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static AddFont($path)</string><docblock><description><![CDATA[<p>Add a single font</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>GetFonts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static GetFonts([$type])</string><docblock><description><![CDATA[<p>Returns all fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Each value is an instance of <a href='?__plibclass=File#class-File'>File</a></p>]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>sort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>protected static sort($a, $b)</string><docblock><description><![CDATA[<p>Function for sorting the font array on file name.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>filterFontsByExtension</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>protected static filterFontsByExtension($which)</string><docblock><description><![CDATA[<p>Create a font array with only $which fonts</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>e.g. font file extension</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetFontPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static GetFontPath($fontname)</string><docblock><description><![CDATA[<p>Returns the path to $fontname if $fontname exists in the internal array.
NOTE! This should contain the file extension as well</p>

<div class='code'><code><span style='color: #990000;'><b>$fontpath</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetFontPath<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;verdana.ttf&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>fontname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontname</string></param></params></method><method><name>GetIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited/><string>public final static GetIterator([$type])</string><docblock><description><![CDATA[<p>Returns an iterator to interate over all available fonts</p>

<div class='code'><code>Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>AddDir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/usr/share/fonts/truetype&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$iter</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetIterator<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>HasNext<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$font</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Next<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;File&#160;name:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;,&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #008800;'>&#34;File&#160;path:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>path&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>If given only fonts of type $type will be collected.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontIterator#class-FontIterator'>FontIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>streamReader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>protected streamReader()</string><docblock><description><![CDATA[<p>Returns a StreamReader object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Path()</string><docblock><description><![CDATA[<p>Returns the font's path</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Family</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Family()</string><docblock><description><![CDATA[<p>Returns the font family</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SubFamily</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public SubFamily()</string><docblock><description><![CDATA[<p>Returns the sub family (e.g. Regular)</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Manufacturer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Manufacturer()</string><docblock><description><![CDATA[<p>Returns the font manufacturer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Trademark</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Trademark()</string><docblock><description><![CDATA[<p>Returns the font trademark</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Name()</string><docblock><description><![CDATA[<p>Returns the name of the font</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Designer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Designer()</string><docblock><description><![CDATA[<p>Returns the font designer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>PostScriptName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public PostScriptName()</string><docblock><description><![CDATA[<p>Returns the post script name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UniqueName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public UniqueName()</string><docblock><description><![CDATA[<p>Returns the unique name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Version()</string><docblock><description><![CDATA[<p>Returns the version of the font</p>]]></description><return><types><type><![CDATA[float]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Type()</string><docblock><description><![CDATA[<p>Returns the font type</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Sample</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>public Sample()</string><docblock><description><![CDATA[<p>Creates a text image
Only applicable for TTF fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>initGText</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Font</declaring-class><inherited/><string>protected final initGText()</string><docblock><description><![CDATA[<p>Initialize the GText object</p>]]></description></docblock><params/></method></methods><properties><property><name>fonts</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fonts</string><docblock><description><![CDATA[<p>Collection of all fonts with full paths</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>fontnames</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fontnames</string><docblock><description><![CDATA[<p>Collection of only the font names</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>validExtensions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $validExtensions</string><docblock><description><![CDATA[<p>Valid font extentions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>samplesize</name><value><![CDATA[32]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $samplesize</string><docblock><description><![CDATA[<p>Default font size for samples</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>samplebgcolor</name><value><![CDATA[000]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplebgcolor</string><docblock><description><![CDATA[<p>Default background color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>samplefgcolor</name><value><![CDATA[FFF]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplefgcolor</string><docblock><description><![CDATA[<p>Default foreground color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of font (true type, type1 etc);</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The file system path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>family</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $family</string><docblock><description><![CDATA[<p>The font family</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>subfamily</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subfamily</string><docblock><description><![CDATA[<p>The font sub family e.g. Regular</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fullname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fullname</string><docblock><description><![CDATA[<p>The font's full name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>psname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $psname</string><docblock><description><![CDATA[<p>Postscript name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>trademark</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $trademark</string><docblock><description><![CDATA[<p>Trademark</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>manufacturer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $manufacturer</string><docblock><description><![CDATA[<p>The font manufacturer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>designer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $designer</string><docblock><description><![CDATA[<p>The font designer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontfile</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontfile</string><docblock><description><![CDATA[<p>The file object for the font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>uniquename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniquename</string><docblock><description><![CDATA[<p>Unique name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The font version</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>gtext</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $gtext</string><docblock><description><![CDATA[<p>The GText object</p>]]></description><var><![CDATA[GText]]></var></docblock></property></properties></class><class><name>FontTTF</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Font</extends><string>class FontTTF extends Font</string><implements/><docblock><description><![CDATA[<p>Class for reading TTF fonts</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Font]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontTTF</declaring-class><inherited/><string>public __construct($fontfile)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params><see><types><type><![CDATA[<a href='?__plibclass=Font#method-Create'>Font::Create()</a>]]></type></types><description><![CDATA[]]></description></see></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>parseTTF</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>FontTTF</declaring-class><inherited/><string>private parseTTF()</string><docblock><description><![CDATA[<p>This is pretty much a port of a Perl script from ImageMagick
<a href='http://www.imagemagick.org/Usage/scripts/imagick_type_gen'>www.imagemagick.org/Usage/scripts/imagick_type_gen</a></p>]]></description><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params/></method><method><name>Sample</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontTTF</declaring-class><inherited/><string>public Sample($text)</string><docblock><description><![CDATA[<p>Returns an array from <a href='?__plibclass=GText#method-Render'>GText::Render()</a></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[<p>The sample text to write to the image</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static Create($fontfile) inherited from Font</string><docblock><description><![CDATA[<p>Creates a new instanse of what ever fonts are being supported</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontTTF#class-FontTTF'>FontTTF</a>]]></type><type><![CDATA[<a href='?__plibclass=FontAFM#class-FontAFM'>FontAFM</a>]]></type><type><![CDATA[<a href='?__plibclass=FontOTF#class-FontOTF'>FontOTF</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>AddDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddDir($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a font directory.
The directory will be traversed recursivley for fonts to add.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>AddFont</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddFont($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a single font</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>GetFonts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFonts([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns all fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Each value is an instance of <a href='?__plibclass=File#class-File'>File</a></p>]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>sort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static sort($a, $b) inherited from Font</string><docblock><description><![CDATA[<p>Function for sorting the font array on file name.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>filterFontsByExtension</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static filterFontsByExtension($which) inherited from Font</string><docblock><description><![CDATA[<p>Create a font array with only $which fonts</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>e.g. font file extension</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetFontPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFontPath($fontname) inherited from Font</string><docblock><description><![CDATA[<p>Returns the path to $fontname if $fontname exists in the internal array.
NOTE! This should contain the file extension as well</p>

<div class='code'><code><span style='color: #990000;'><b>$fontpath</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetFontPath<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;verdana.ttf&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>fontname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontname</string></param></params></method><method><name>GetIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetIterator([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns an iterator to interate over all available fonts</p>

<div class='code'><code>Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>AddDir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/usr/share/fonts/truetype&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$iter</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetIterator<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>HasNext<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$font</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Next<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;File&#160;name:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;,&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #008800;'>&#34;File&#160;path:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>path&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>If given only fonts of type $type will be collected.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontIterator#class-FontIterator'>FontIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>streamReader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected streamReader() inherited from Font</string><docblock><description><![CDATA[<p>Returns a StreamReader object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Path() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font's path</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Family</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Family() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font family</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SubFamily</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public SubFamily() inherited from Font</string><docblock><description><![CDATA[<p>Returns the sub family (e.g. Regular)</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Manufacturer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Manufacturer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font manufacturer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Trademark</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Trademark() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font trademark</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Name() inherited from Font</string><docblock><description><![CDATA[<p>Returns the name of the font</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Designer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Designer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font designer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>PostScriptName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public PostScriptName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the post script name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UniqueName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public UniqueName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the unique name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Version() inherited from Font</string><docblock><description><![CDATA[<p>Returns the version of the font</p>]]></description><return><types><type><![CDATA[float]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Type() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font type</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>initGText</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected final initGText() inherited from Font</string><docblock><description><![CDATA[<p>Initialize the GText object</p>]]></description></docblock><params/></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fonts</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fonts</string><docblock><description><![CDATA[<p>Collection of all fonts with full paths</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>fontnames</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fontnames</string><docblock><description><![CDATA[<p>Collection of only the font names</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>validExtensions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $validExtensions</string><docblock><description><![CDATA[<p>Valid font extentions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>samplesize</name><value><![CDATA[32]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $samplesize</string><docblock><description><![CDATA[<p>Default font size for samples</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>samplebgcolor</name><value><![CDATA[000]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplebgcolor</string><docblock><description><![CDATA[<p>Default background color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>samplefgcolor</name><value><![CDATA[FFF]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplefgcolor</string><docblock><description><![CDATA[<p>Default foreground color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The file system path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>family</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $family</string><docblock><description><![CDATA[<p>The font family</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>subfamily</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subfamily</string><docblock><description><![CDATA[<p>The font sub family e.g. Regular</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fullname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fullname</string><docblock><description><![CDATA[<p>The font's full name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>psname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $psname</string><docblock><description><![CDATA[<p>Postscript name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>trademark</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $trademark</string><docblock><description><![CDATA[<p>Trademark</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>manufacturer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $manufacturer</string><docblock><description><![CDATA[<p>The font manufacturer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>designer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $designer</string><docblock><description><![CDATA[<p>The font designer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontfile</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontfile</string><docblock><description><![CDATA[<p>The file object for the font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>uniquename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniquename</string><docblock><description><![CDATA[<p>Unique name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The font version</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>gtext</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $gtext</string><docblock><description><![CDATA[<p>The GText object</p>]]></description><var><![CDATA[GText]]></var></docblock></property></properties></class><class><name>FontOTF</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Font</extends><string>class FontOTF extends Font</string><implements/><docblock><description><![CDATA[<p>Class for reading Open Type Fonts</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Font]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontOTF</declaring-class><inherited/><string>public __construct($fontfile)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>parseOTF</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FontOTF</declaring-class><inherited/><string>protected parseOTF()</string><docblock><description><![CDATA[<p>Parse the font</p>]]></description></docblock><params/></method><method><name>Sample</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontOTF</declaring-class><inherited/><string>public Sample($text)</string><docblock><description><![CDATA[<p>Returns an array from <a href='?__plibclass=GText#method-Render'>GText::Render()</a></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[<p>The sample text to write to the image</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static Create($fontfile) inherited from Font</string><docblock><description><![CDATA[<p>Creates a new instanse of what ever fonts are being supported</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontTTF#class-FontTTF'>FontTTF</a>]]></type><type><![CDATA[<a href='?__plibclass=FontAFM#class-FontAFM'>FontAFM</a>]]></type><type><![CDATA[<a href='?__plibclass=FontOTF#class-FontOTF'>FontOTF</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>AddDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddDir($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a font directory.
The directory will be traversed recursivley for fonts to add.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>AddFont</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddFont($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a single font</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>GetFonts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFonts([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns all fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Each value is an instance of <a href='?__plibclass=File#class-File'>File</a></p>]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>sort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static sort($a, $b) inherited from Font</string><docblock><description><![CDATA[<p>Function for sorting the font array on file name.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>filterFontsByExtension</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static filterFontsByExtension($which) inherited from Font</string><docblock><description><![CDATA[<p>Create a font array with only $which fonts</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>e.g. font file extension</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetFontPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFontPath($fontname) inherited from Font</string><docblock><description><![CDATA[<p>Returns the path to $fontname if $fontname exists in the internal array.
NOTE! This should contain the file extension as well</p>

<div class='code'><code><span style='color: #990000;'><b>$fontpath</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetFontPath<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;verdana.ttf&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>fontname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontname</string></param></params></method><method><name>GetIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetIterator([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns an iterator to interate over all available fonts</p>

<div class='code'><code>Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>AddDir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/usr/share/fonts/truetype&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$iter</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetIterator<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>HasNext<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$font</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Next<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;File&#160;name:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;,&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #008800;'>&#34;File&#160;path:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>path&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>If given only fonts of type $type will be collected.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontIterator#class-FontIterator'>FontIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>streamReader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected streamReader() inherited from Font</string><docblock><description><![CDATA[<p>Returns a StreamReader object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Path() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font's path</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Family</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Family() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font family</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SubFamily</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public SubFamily() inherited from Font</string><docblock><description><![CDATA[<p>Returns the sub family (e.g. Regular)</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Manufacturer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Manufacturer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font manufacturer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Trademark</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Trademark() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font trademark</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Name() inherited from Font</string><docblock><description><![CDATA[<p>Returns the name of the font</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Designer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Designer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font designer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>PostScriptName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public PostScriptName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the post script name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UniqueName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public UniqueName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the unique name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Version() inherited from Font</string><docblock><description><![CDATA[<p>Returns the version of the font</p>]]></description><return><types><type><![CDATA[float]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Type() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font type</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>initGText</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected final initGText() inherited from Font</string><docblock><description><![CDATA[<p>Initialize the GText object</p>]]></description></docblock><params/></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fonts</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fonts</string><docblock><description><![CDATA[<p>Collection of all fonts with full paths</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>fontnames</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fontnames</string><docblock><description><![CDATA[<p>Collection of only the font names</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>validExtensions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $validExtensions</string><docblock><description><![CDATA[<p>Valid font extentions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>samplesize</name><value><![CDATA[32]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $samplesize</string><docblock><description><![CDATA[<p>Default font size for samples</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>samplebgcolor</name><value><![CDATA[000]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplebgcolor</string><docblock><description><![CDATA[<p>Default background color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>samplefgcolor</name><value><![CDATA[FFF]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplefgcolor</string><docblock><description><![CDATA[<p>Default foreground color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The file system path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>family</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $family</string><docblock><description><![CDATA[<p>The font family</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>subfamily</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subfamily</string><docblock><description><![CDATA[<p>The font sub family e.g. Regular</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fullname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fullname</string><docblock><description><![CDATA[<p>The font's full name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>psname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $psname</string><docblock><description><![CDATA[<p>Postscript name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>trademark</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $trademark</string><docblock><description><![CDATA[<p>Trademark</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>manufacturer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $manufacturer</string><docblock><description><![CDATA[<p>The font manufacturer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>designer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $designer</string><docblock><description><![CDATA[<p>The font designer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontfile</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontfile</string><docblock><description><![CDATA[<p>The file object for the font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>uniquename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniquename</string><docblock><description><![CDATA[<p>Unique name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The font version</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>gtext</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $gtext</string><docblock><description><![CDATA[<p>The GText object</p>]]></description><var><![CDATA[GText]]></var></docblock></property></properties></class><class><name>FontAFM</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Font</extends><string>class FontAFM extends Font</string><implements/><docblock><description><![CDATA[<p>Class for reading type1 fonts</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Font]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontAFM</declaring-class><inherited/><string>public __construct($fontfile)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>parseAFM</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FontAFM</declaring-class><inherited/><string>protected parseAFM()</string><docblock><description><![CDATA[<p>Parses the AFM file for information</p>]]></description><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static Create($fontfile) inherited from Font</string><docblock><description><![CDATA[<p>Creates a new instanse of what ever fonts are being supported</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontfile]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontTTF#class-FontTTF'>FontTTF</a>]]></type><type><![CDATA[<a href='?__plibclass=FontAFM#class-FontAFM'>FontAFM</a>]]></type><type><![CDATA[<a href='?__plibclass=FontOTF#class-FontOTF'>FontOTF</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>fontfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontfile</string></param></params></method><method><name>AddDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddDir($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a font directory.
The directory will be traversed recursivley for fonts to add.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>AddFont</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static AddFont($path) inherited from Font</string><docblock><description><![CDATA[<p>Add a single font</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=FontException#class-FontException'>FontException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>GetFonts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFonts([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns all fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Each value is an instance of <a href='?__plibclass=File#class-File'>File</a></p>]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>sort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static sort($a, $b) inherited from Font</string><docblock><description><![CDATA[<p>Function for sorting the font array on file name.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>filterFontsByExtension</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected static filterFontsByExtension($which) inherited from Font</string><docblock><description><![CDATA[<p>Create a font array with only $which fonts</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>e.g. font file extension</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetFontPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetFontPath($fontname) inherited from Font</string><docblock><description><![CDATA[<p>Returns the path to $fontname if $fontname exists in the internal array.
NOTE! This should contain the file extension as well</p>

<div class='code'><code><span style='color: #990000;'><b>$fontpath</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetFontPath<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;verdana.ttf&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$fontname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>fontname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$fontname</string></param></params></method><method><name>GetIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Font</declaring-class><inherited>1</inherited><string>public final static GetIterator([$type]) inherited from Font</string><docblock><description><![CDATA[<p>Returns an iterator to interate over all available fonts</p>

<div class='code'><code>Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>AddDir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/usr/share/fonts/truetype&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$iter</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Font<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>GetIterator<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>HasNext<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$font</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$iter</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Next<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;File&#160;name:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;,&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #008800;'>&#34;File&#160;path:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$font</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>path&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>If given only fonts of type $type will be collected.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FontIterator#class-FontIterator'>FontIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>streamReader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected streamReader() inherited from Font</string><docblock><description><![CDATA[<p>Returns a StreamReader object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Path() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font's path</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Family</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Family() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font family</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SubFamily</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public SubFamily() inherited from Font</string><docblock><description><![CDATA[<p>Returns the sub family (e.g. Regular)</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Manufacturer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Manufacturer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font manufacturer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Trademark</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Trademark() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font trademark</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Name() inherited from Font</string><docblock><description><![CDATA[<p>Returns the name of the font</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Designer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Designer() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font designer</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>PostScriptName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public PostScriptName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the post script name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UniqueName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public UniqueName() inherited from Font</string><docblock><description><![CDATA[<p>Returns the unique name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Version() inherited from Font</string><docblock><description><![CDATA[<p>Returns the version of the font</p>]]></description><return><types><type><![CDATA[float]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Type() inherited from Font</string><docblock><description><![CDATA[<p>Returns the font type</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Sample</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>public Sample() inherited from Font</string><docblock><description><![CDATA[<p>Creates a text image
Only applicable for TTF fonts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>initGText</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Font</declaring-class><inherited>1</inherited><string>protected final initGText() inherited from Font</string><docblock><description><![CDATA[<p>Initialize the GText object</p>]]></description></docblock><params/></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fonts</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fonts</string><docblock><description><![CDATA[<p>Collection of all fonts with full paths</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>fontnames</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $fontnames</string><docblock><description><![CDATA[<p>Collection of only the font names</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>validExtensions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $validExtensions</string><docblock><description><![CDATA[<p>Valid font extentions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>samplesize</name><value><![CDATA[32]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $samplesize</string><docblock><description><![CDATA[<p>Default font size for samples</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>samplebgcolor</name><value><![CDATA[000]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplebgcolor</string><docblock><description><![CDATA[<p>Default background color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>samplefgcolor</name><value><![CDATA[FFF]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $samplefgcolor</string><docblock><description><![CDATA[<p>Default foreground color for samples</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The file system path to the font</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>family</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $family</string><docblock><description><![CDATA[<p>The font family</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>subfamily</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subfamily</string><docblock><description><![CDATA[<p>The font sub family e.g. Regular</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fullname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fullname</string><docblock><description><![CDATA[<p>The font's full name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>psname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $psname</string><docblock><description><![CDATA[<p>Postscript name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>trademark</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $trademark</string><docblock><description><![CDATA[<p>Trademark</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>manufacturer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $manufacturer</string><docblock><description><![CDATA[<p>The font manufacturer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>designer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $designer</string><docblock><description><![CDATA[<p>The font designer</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fontfile</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fontfile</string><docblock><description><![CDATA[<p>The file object for the font</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>uniquename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniquename</string><docblock><description><![CDATA[<p>Unique name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The font version</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>gtext</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $gtext</string><docblock><description><![CDATA[<p>The GText object</p>]]></description><var><![CDATA[GText]]></var></docblock></property></properties></class><class><name>FontIterator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class FontIterator extends PLibIterator</string><implements/><docblock><description><![CDATA[<p>Loops over all available fonts</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Font]]></subpackage><see><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></see></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontIterator</declaring-class><inherited/><string>public __construct([$type])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>Type of fonts to collect</p>]]></description></param></params></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontIterator</declaring-class><inherited/><string>public HasNext()</string><docblock><description><![CDATA[<p>Verifies if there's a next index in the interator</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FontIterator</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Moves the iterator forward and returns the next value</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Font#class-Font'>Font</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>FontException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class FontException extends Exception</string><implements/><docblock><description><![CDATA[<p>Generic font exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module><module><name>Image.php</name><path>Graphics/Image.php</path><namespace>Graphics</namespace><classpath>Graphics.Image</classpath><docblock><description><![CDATA[<p>The image class makes it easy to manipulate images.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.3]]></version><package><![CDATA[Graphics]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=Graphics#class-Graphics'>Graphics</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></use></uses><todo><![CDATA[<p>When converting a PNG image with alpha channels to a JPEG image
  we need to fill the background or else it will look like crap!</p>]]></todo></docblock><class><name>Image</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Graphics</extends><string>class Image extends Graphics</string><implements/><docblock><description><![CDATA[<p>The image class makes it easy to manipulate images.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Graphics]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public __construct($src)</string><docblock><description><![CDATA[<p>Ctor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$src]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>src</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$src</string></param></params></method><method><name>ConvertTo</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ConvertTo($what [, $filename])</string><docblock><description><![CDATA[<p>Convert to given image format</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[<p>If no filename is given the current image will be over writted
 by the new one.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToJPEG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ConvertToJPEG([$filename])</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('jpeg')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToPNG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ConvertToPNG([$filename])</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('png')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToGIF</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ConvertToGIF([$filename])</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('gif')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>Scale</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Scale($width, $height [, $constrain=1])</string><docblock><description><![CDATA[<p>Scale to given dimensions</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$constrain]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param><param><name>constrain</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$constrain=1</string></param></params></method><method><name>ScalePercentage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ScalePercentage($percentage)</string><docblock><description><![CDATA[<p>Scales the image to the given percentage</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$percentage]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>percentage</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$percentage</string></param></params></method><method><name>Copy</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Copy($newName)</string><docblock><description><![CDATA[<p>Make a copy of the current image</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$newName]]></variable><description><![CDATA[<p>The filename of the copy</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>newName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$newName</string></param></params></method><method><name>Rename</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Rename($newname)</string><docblock><description><![CDATA[<p>Rename the image.
This won't move the file to a new location but just rename the file at
the location where it exists.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$newname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>newname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$newname</string></param></params></method><method><name>Rotate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Rotate($angle [, $bgcolor [, $ignoreTransparent]])</string><docblock><description><![CDATA[<p>Rotates the image in $angle degrees.</p>]]></description><since><![CDATA[0.2]]></since><link><![CDATA[imagerotate]]></link><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[float]]></type></types><variable><![CDATA[$angle]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bgcolor]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$ignoreTransparent]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>angle</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$angle</string></param><param><name>bgcolor</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bgcolor</string></param><param><name>ignoreTransparent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$ignoreTransparent</string></param></params></method><method><name>File</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public File()</string><docblock><description><![CDATA[<p>Returns the File object of the image</p>]]></description><since><![CDATA[0.3]]></since><return><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Path()</string><docblock><description><![CDATA[<p>Returns the file system path of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>FileName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public FileName()</string><docblock><description><![CDATA[<p>Returns the filename of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Size</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Size()</string><docblock><description><![CDATA[<p>Returns the filesize of the image in bytes</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NiceSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public NiceSize([$decimals=1])</string><docblock><description><![CDATA[<p>Returns the filesize human readable like 43Kb</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$decimals]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>decimals</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$decimals=1</string></param></params></method><method><name>Width</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Width()</string><docblock><description><![CDATA[<p>Returns the width of the image</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Height</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Height()</string><docblock><description><![CDATA[<p>Returns the height of the image</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Type()</string><docblock><description><![CDATA[<p>Returns the type of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ImageType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public ImageType()</string><docblock><description><![CDATA[<p>Detects the image type from the actual image data</p>]]></description><since><![CDATA[0.2]]></since><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[<p>If the image type is not supported</p>]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Resource</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference>1</reference><static/><declaring-class>Image</declaring-class><inherited/><string>public Resource()</string><docblock><description><![CDATA[<p>Returns the image resource handle</p>]]></description><since><![CDATA[0.2]]></since><todo><![CDATA[<p>Return by reference will cause a fatal error in PHP 6</p>]]></todo><return><types><type><![CDATA[resource]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Grayscale</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Grayscale()</string><docblock><description><![CDATA[<p>Converts the image to grayscale</p>]]></description><since><![CDATA[0.2]]></since><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Crop</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public Crop($x, $y, $width, $height)</string><docblock><description><![CDATA[<p>Crop the image</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$x]]></variable><description><![CDATA[<p>The x-position in the original image to start from</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$y]]></variable><description><![CDATA[<p>The y-position in the original image to start from</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[<p>The desired width of the new image</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[<p>The desired height of the new image</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>x</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$x</string></param><param><name>y</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$y</string></param><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>CropCenter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public CropCenter($width, $height)</string><docblock><description><![CDATA[<p>Crops around the center of the image</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>SaveImageFromResource</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public SaveImageFromResource($resource)</string><docblock><description><![CDATA[<p>Saves a new image of $resource from the current image type.</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$resource]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>resource</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$resource</string></param></params></method><method><name>AlphaPNG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Image</declaring-class><inherited/><string>public static AlphaPNG($path)</string><docblock><description><![CDATA[<p>Checks if the image given as argument is a PNG image with
alpha channels.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Prints out information about the object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor</p>]]></description></docblock><params/></method><method><name>getContraints</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>protected getContraints($width, $height)</string><docblock><description><![CDATA[<p>Returns constraint proportions from the desired width and height</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>createImageFromType</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>protected createImageFromType($resource)</string><docblock><description><![CDATA[<p>Creates a new image from the current image type</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$resource]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>resource</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$resource</string></param></params></method><method><name>useAlphaBlending</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>protected useAlphaBlending()</string><docblock><description><![CDATA[<p>Should we use alpha blending on the current image</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>moveToLocation</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited/><string>protected moveToLocation($where)</string><docblock><description><![CDATA[<p>Moves the current file to a new location.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$where]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>where</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$where</string></param></params></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static IsSupported($what) inherited from Graphics</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static ConvertBoundingBox($bbox) inherited from Graphics</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p>{@see imagettfbbox()}</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static Hex2RGB($hex) inherited from Graphics</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>src</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $src</string><docblock><description><![CDATA[<p>The source file</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>handle</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $handle</string><docblock><description><![CDATA[<p>Allowed file extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of image</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>Image resource</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>width</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $width</string><docblock><description><![CDATA[<p>Image width</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>height</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $height</string><docblock><description><![CDATA[<p>Image height</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>StringImage</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Image</extends><string>class StringImage extends Image</string><implements/><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=Image#class-Image'>Image</a> object from a string</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Graphics]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringImage</declaring-class><inherited/><string>public __construct($data)</string><docblock><description><![CDATA[<p>Contructor.
Tries to create an image resource from $data.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>SaveToDisk</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringImage</declaring-class><inherited/><string>public SaveToDisk($filename [, $mode=438])</string><docblock><description><![CDATA[<p>Saves the file to dist.</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[<p>The full path to the new image. You don't need to add the extension
 since that will be added dynamically depending on what type of image
 we're dealing with.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$mode]]></variable><description><![CDATA[<p>Set the permission of the image.</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$filename</string></param><param><name>mode</name><value>438</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mode=438</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringImage</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[]]></description><since><![CDATA[0.2
Destructor. Removes the temporary file and calls
<a href='?__plibclass=Image#method-'>Image::__desctruct()</a>]]></since></docblock><params/></method><method><name>ConvertTo</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ConvertTo($what [, $filename]) inherited from Image</string><docblock><description><![CDATA[<p>Convert to given image format</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[<p>If no filename is given the current image will be over writted
 by the new one.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToJPEG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ConvertToJPEG([$filename]) inherited from Image</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('jpeg')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToPNG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ConvertToPNG([$filename]) inherited from Image</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('png')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>ConvertToGIF</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ConvertToGIF([$filename]) inherited from Image</string><docblock><description><![CDATA[<p>Alias for <code>Image::ConvertTo('gif')</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filename</string></param></params></method><method><name>Scale</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Scale($width, $height [, $constrain=1]) inherited from Image</string><docblock><description><![CDATA[<p>Scale to given dimensions</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$constrain]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param><param><name>constrain</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$constrain=1</string></param></params></method><method><name>ScalePercentage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ScalePercentage($percentage) inherited from Image</string><docblock><description><![CDATA[<p>Scales the image to the given percentage</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$percentage]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>percentage</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$percentage</string></param></params></method><method><name>Copy</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Copy($newName) inherited from Image</string><docblock><description><![CDATA[<p>Make a copy of the current image</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$newName]]></variable><description><![CDATA[<p>The filename of the copy</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>newName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$newName</string></param></params></method><method><name>Rename</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Rename($newname) inherited from Image</string><docblock><description><![CDATA[<p>Rename the image.
This won't move the file to a new location but just rename the file at
the location where it exists.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$newname]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>newname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$newname</string></param></params></method><method><name>Rotate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Rotate($angle [, $bgcolor [, $ignoreTransparent]]) inherited from Image</string><docblock><description><![CDATA[<p>Rotates the image in $angle degrees.</p>]]></description><since><![CDATA[0.2]]></since><link><![CDATA[imagerotate]]></link><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[float]]></type></types><variable><![CDATA[$angle]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bgcolor]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$ignoreTransparent]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>angle</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$angle</string></param><param><name>bgcolor</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bgcolor</string></param><param><name>ignoreTransparent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$ignoreTransparent</string></param></params></method><method><name>File</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public File() inherited from Image</string><docblock><description><![CDATA[<p>Returns the File object of the image</p>]]></description><since><![CDATA[0.3]]></since><return><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Path</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Path() inherited from Image</string><docblock><description><![CDATA[<p>Returns the file system path of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>FileName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public FileName() inherited from Image</string><docblock><description><![CDATA[<p>Returns the filename of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Size</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Size() inherited from Image</string><docblock><description><![CDATA[<p>Returns the filesize of the image in bytes</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NiceSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public NiceSize([$decimals=1]) inherited from Image</string><docblock><description><![CDATA[<p>Returns the filesize human readable like 43Kb</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$decimals]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>decimals</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$decimals=1</string></param></params></method><method><name>Width</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Width() inherited from Image</string><docblock><description><![CDATA[<p>Returns the width of the image</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Height</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Height() inherited from Image</string><docblock><description><![CDATA[<p>Returns the height of the image</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Type() inherited from Image</string><docblock><description><![CDATA[<p>Returns the type of the image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ImageType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public ImageType() inherited from Image</string><docblock><description><![CDATA[<p>Detects the image type from the actual image data</p>]]></description><since><![CDATA[0.2]]></since><throws><types><type><![CDATA[<a href='?__plibclass=GraphicsException#class-GraphicsException'>GraphicsException</a>]]></type></types><description><![CDATA[<p>If the image type is not supported</p>]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Resource</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference>1</reference><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Resource() inherited from Image</string><docblock><description><![CDATA[<p>Returns the image resource handle</p>]]></description><since><![CDATA[0.2]]></since><todo><![CDATA[<p>Return by reference will cause a fatal error in PHP 6</p>]]></todo><return><types><type><![CDATA[resource]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Grayscale</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Grayscale() inherited from Image</string><docblock><description><![CDATA[<p>Converts the image to grayscale</p>]]></description><since><![CDATA[0.2]]></since><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Crop</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public Crop($x, $y, $width, $height) inherited from Image</string><docblock><description><![CDATA[<p>Crop the image</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$x]]></variable><description><![CDATA[<p>The x-position in the original image to start from</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$y]]></variable><description><![CDATA[<p>The y-position in the original image to start from</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[<p>The desired width of the new image</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[<p>The desired height of the new image</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>x</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$x</string></param><param><name>y</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$y</string></param><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>CropCenter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public CropCenter($width, $height) inherited from Image</string><docblock><description><![CDATA[<p>Crops around the center of the image</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>SaveImageFromResource</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public SaveImageFromResource($resource) inherited from Image</string><docblock><description><![CDATA[<p>Saves a new image of $resource from the current image type.</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$resource]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>resource</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$resource</string></param></params></method><method><name>AlphaPNG</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Image</declaring-class><inherited>1</inherited><string>public static AlphaPNG($path) inherited from Image</string><docblock><description><![CDATA[<p>Checks if the image given as argument is a PNG image with
alpha channels.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>public __toString() inherited from Image</string><docblock><description><![CDATA[<p>Prints out information about the object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getContraints</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>protected getContraints($width, $height) inherited from Image</string><docblock><description><![CDATA[<p>Returns constraint proportions from the desired width and height</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$width]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$height]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>width</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$width</string></param><param><name>height</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$height</string></param></params></method><method><name>createImageFromType</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>protected createImageFromType($resource) inherited from Image</string><docblock><description><![CDATA[<p>Creates a new image from the current image type</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$resource]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>resource</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$resource</string></param></params></method><method><name>useAlphaBlending</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>protected useAlphaBlending() inherited from Image</string><docblock><description><![CDATA[<p>Should we use alpha blending on the current image</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>moveToLocation</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Image</declaring-class><inherited>1</inherited><string>protected moveToLocation($where) inherited from Image</string><docblock><description><![CDATA[<p>Moves the current file to a new location.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$where]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Image#class-Image'>Image</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>where</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$where</string></param></params></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static IsSupported($what) inherited from Graphics</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static ConvertBoundingBox($bbox) inherited from Graphics</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p>{@see imagettfbbox()}</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited>1</inherited><string>public static Hex2RGB($hex) inherited from Graphics</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>The image data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tempnam</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tempnam</string><docblock><description><![CDATA[<p>The filename of the temporary file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>src</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $src</string><docblock><description><![CDATA[<p>The source file</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>handle</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $handle</string><docblock><description><![CDATA[<p>Allowed file extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of image</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>Image resource</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>width</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $width</string><docblock><description><![CDATA[<p>Image width</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>height</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $height</string><docblock><description><![CDATA[<p>Image height</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class></module><module><name>_Graphics.php</name><path>Graphics/_Graphics.php</path><namespace>Graphics</namespace><classpath>Graphics._Graphics</classpath><docblock><description><![CDATA[<p>Base class for the Graphics module.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=IO#class-IO'>IO</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Graphics</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class Graphics]</string><implements/><docblock><description><![CDATA[<p>Master class for graphics</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Graphics</declaring-class><inherited/><string>private __construct()</string><docblock><description><![CDATA[<p>Hidden constructor. This class can not be instantiated</p>]]></description></docblock><params/></method><method><name>IsSupported</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited/><string>public static IsSupported($what)</string><docblock><description><![CDATA[<p>Validate whether $what is supported or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>ConvertBoundingBox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited/><string>public static ConvertBoundingBox($bbox)</string><docblock><description><![CDATA[<p>From PHP.net <a href='http://php.net/manual/sv/function.imagettfbbox.php'>php.net/manual/sv/function.imagettfbbox.php</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$bbox]]></variable><description><![CDATA[<p>{@see imagettfbbox()}</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bbox</name><value/><reference/><optional/><class/><array/><nullable/><string>$bbox</string></param></params></method><method><name>Hex2RGB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Graphics</declaring-class><inherited/><string>public static Hex2RGB($hex)</string><docblock><description><![CDATA[<p>Converts a hexadecimal colour into RGB values</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$hex]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>hex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hex</string></param></params></method></methods><properties><property><name>JPEG_QUALITY</name><value><![CDATA[80]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $JPEG_QUALITY</string><docblock><description><![CDATA[<p>JPEG quality (0-100)</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>PNG_QUALITY</name><value><![CDATA[9]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $PNG_QUALITY</string><docblock><description><![CDATA[<p>Compression level. 0 = no compression</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>ALPHA_SUPPORT</name><value><![CDATA[array (
  0 => 'png',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $ALPHA_SUPPORT</string><docblock><description><![CDATA[<p>Image formats supporting alpha blending</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>GraphicsException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class GraphicsException extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Graphics]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace><namespace name="IO" path="IO"><module><name>StreamReader.php</name><path>IO/StreamReader.php</path><namespace>IO</namespace><classpath>IO.StreamReader</classpath><docblock><description><![CDATA[<p>Stream reader</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><version><![CDATA[0.3]]></version></docblock><class><name>StreamReader</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class StreamReader implements IStream</string><implements><interface>IStream</interface></implements><docblock><description><![CDATA[<p>The StreamReader class has a number of methods to ease reading of a file.
The file it self will never be read into memory wich makes this class
handy when dealing with large files.</p>

<div class='code'><code><span style='color: #990000;'><b>$reader</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;StreamReader<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/really/large/file.log&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>false</b></span>&#160;<span style='color: #0000FF;'>!</span><span style='color: #0000FF;'>=</span><span style='color: #0000FF;'>=</span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$line</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$reader</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>ReadLine<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #990000;'><b>$line</b></span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public __construct($file)</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>When file doesn't exist or isn't readable</p>]]></description></throws></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Read</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public Read([$bytes=1])</string><docblock><description><![CDATA[<p>Read <code>$bytes</code> number of bytes. If no argument is given <code>1</code> byte at a time
will be read.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bytes</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bytes=1</string></param></params></method><method><name>Unread</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public Unread([$bytes=1])</string><docblock><description><![CDATA[<p>Rewinds the stream <code>$bytes</code> number of bytes</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bytes</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bytes=1</string></param></params></method><method><name>ReadToChar</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public ReadToChar($char)</string><docblock><description><![CDATA[<p>Reads upto the first occurance of <code>$char</code> or reads to the end if <code>$char</code>
is not found</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$char]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>char</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$char</string></param></params></method><method><name>ReadToChars</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public ReadToChars($chars)</string><docblock><description><![CDATA[<p>Reads upto the first occurance of any of the characters in <code>$chars</code> or
reads to the end if no match is found</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$chars]]></variable><description><![CDATA[<p>Array of characters</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chars</name><value/><reference/><optional/><class/><array/><nullable/><string>$chars</string></param></params></method><method><name>ReadBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public ReadBlock($begin, $offset [, $whence])</string><docblock><description><![CDATA[<p>Reads <code>$offset</code> number of bytes starting at <code>$begin</code>.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$begin]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[<p><code>SEEK_SET</code>, <code>SEEK_CUR</code> or <code>SEEK_END</code>. See {@link fseek fseek()}.</p>]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If <code>$begin</code> is less than <code>0</code></p>]]></description></throws><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>begin</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$begin</string></param><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>ReadLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public ReadLine()</string><docblock><description><![CDATA[<p>Reads one line at a time from the file resource</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>BytesRead</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public BytesRead()</string><docblock><description><![CDATA[<p>Returns the file pointer's current position</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Seek</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public Seek($offset [, $whence])</string><docblock><description><![CDATA[<p>Seek to offset</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[<p><code>SEEK_SET</code>, <code>SEEK_CUR</code> or <code>SEEK_END</code>. See {@link fseek fseek()}.</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[<p>(0 on success, -1 otherwise)</p>]]></description></return></docblock><params><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>Position</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public Position()</string><docblock><description><![CDATA[<p>Returns the current offset</p>]]></description><since><![CDATA[0.3]]></since><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Close</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public Close()</string><docblock><description><![CDATA[<p>Close the file pointer</p>]]></description></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StreamReader</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor.
Closes the file resource.</p>]]></description></docblock><params/></method></methods><properties><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock><description><![CDATA[<p>The file currently being used</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>The file resource pointer</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class></module><module><name>Tablify.php</name><path>IO/Tablify.php</path><namespace>IO</namespace><classpath>IO.Tablify</classpath><docblock><description><![CDATA[<p>Tablify converts an CSV file into an HTML table</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Tablify</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Tablify</string><implements/><docblock><description><![CDATA[<p>Tablify converts an CSV file into an HTML table.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><subpackage><![CDATA[Tablify]]></subpackage><version><![CDATA[0.1]]></version><depends><depend><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public __construct([$args])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Associative array with settings. The settings are:</p>

<ul>
<li>CellSeparator: What character to split cells on. Default is \t</li>
<li>RowSeparator: What character to split row on. Default is \n</li>
<li>Interactive: Boolean for if to allow interactive sorting.
Default is false.</li>
<li>TableAttributes: Assoc array to set tag attributes for the table.</li>
<li>HeaderAttributes: Assoc array to set tag attributes for the header tr.</li>
<li>OddRowAttributes: Assoc array to set tag attributes for every odd tr.</li>
<li>EvenRowAttributes: Assoc array to set tag attributes for every even tr.</li>
<li>Linkify: Boolean for if to make URLs clickable.</li>
<li><p>Squeeze: If set to true emty "cells" in the CSV file will be discarted.
This allows for CSV files formatted like this:</p>

<div class='code'><code>&#160;&#160;&#160;&#160;Given&#160;name&#160;&#160;&#160;&#160;&#160;&#160;&#160;Last&#160;name&#160;&#160;&#160;Profession<br/>&#160;&#160;&#160;&#160;Brad&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Pit&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Actor<br/>&#160;&#160;&#160;&#160;Ingmar&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Bergman&#160;&#160;&#160;&#160;&#160;Director<br/>&#160;&#160;&#160;&#160;Mary&#160;Elizabeth&#160;&#160;&#160;Winstead&#160;&#160;&#160;&#160;Actress<br/></code></div></li>
<li><p>HeaderRow: If true the first line in the CSV file will not be treated
as data but as column headers.</p></li>
</ul>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Sort</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public Sort([$col [, $order]])</string><docblock><description><![CDATA[<p>Set sorting rules.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$col]]></variable><description><![CDATA[<p>What column to do the initial sort on.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$order]]></variable><description><![CDATA[<p>Sort order. Use the builtin constants SORT_ASC and SORT_DESC</p>]]></description></param></params></docblock><params><param><name>col</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$col</string></param><param><name>order</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$order</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public Parse($data)</string><docblock><description><![CDATA[<p>Parse CSV string data.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>ParseFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public ParseFile($file)</string><docblock><description><![CDATA[<p>Parse a CVS file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public Render()</string><docblock><description><![CDATA[<p>Render the CVS data to a table.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Copy</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public Copy()</string><docblock><description><![CDATA[<p>Make a copy of the object.
All settings in <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> will be copied to the new object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Tablify#class-Tablify'>Tablify</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>createArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected createArray($line)</string><docblock><description><![CDATA[<p>Splits $line to a column array and append to the <a href='?__plibclass=Tablify#property-'>Tablify::$content</a>
array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$line]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>line</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$line</string></param></params></method><method><name>createHeader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected createHeader($row)</string><docblock><description><![CDATA[<p>Creates the header row and makes them interactive of in interactive mode.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$row]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>row</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$row</string></param></params></method><method><name>getSessObject</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected getSessObject()</string><docblock><description><![CDATA[<p>Determines how to sort the tables if in interactive mode.</p>]]></description><return><types><type><![CDATA[array]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>_strsort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected _strsort($a, $b)</string><docblock><description><![CDATA[<p>Sort content on string values
This is a callback for {@link uasort()}</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>_intsort</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected _intsort($a, $b)</string><docblock><description><![CDATA[<p>Sort content on numeric values
This is a callback for {@link uasort()}</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$b]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param><param><name>b</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$b</string></param></params></method><method><name>isNumber</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected isNumber($what)</string><docblock><description><![CDATA[<p>Check if $what is numberic</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>attrToStr</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected attrToStr($attr)</string><docblock><description><![CDATA[<p>Turns an associative array into a string of HTML tag attributes.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>linkify</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>protected linkify($str)</string><docblock><description><![CDATA[<p>Makes URLs clickable</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public __set($key, $value)</string><docblock><description><![CDATA[<p>Magic method. Sets values to the <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public __get($what)</string><docblock><description><![CDATA[<p>Magic method. Returns the value of the <a href='?__plibclass=Tablify#property-conf'>Tablify::$conf</a> array with
index $what</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Tablify</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor.</p>]]></description></docblock><params/></method></methods><properties><property><name>instanses</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $instanses</string><docblock><description><![CDATA[<p>Instance counter. Used when creating a unique object key</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>conf</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $conf</string><docblock><description><![CDATA[<p></p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>sortOrder</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sortOrder</string><docblock><description><![CDATA[<p>The sort order.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>sortCol</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sortCol</string><docblock><description><![CDATA[<p>What column index to sort on.
0 means don't sort</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>contents</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $contents</string><docblock><description><![CDATA[<p>The array with the rows and columns of the parsed data</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>buffer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $buffer</string><docblock><description><![CDATA[<p>The resulting table</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>flood</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $flood</string><docblock><description><![CDATA[<p>The highest number of columns a row has.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>uniqueKey</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $uniqueKey</string><docblock><description><![CDATA[<p>Each object gets an unique key so we can determine what table to sort
on interactive sort if multiple tables are created.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>renders</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $renders</string><docblock><description><![CDATA[<p>The same object can only be used once. This member keeps track of that!</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>TablifySession</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class TablifySession</string><implements/><docblock><description><![CDATA[<p>Keeps track of interative sorting settings for a <a href='?__plibclass=Tablify#class-Tablify'>Tablify</a> object</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><subpackage><![CDATA[Tablify]]></subpackage><version><![CDATA[0.1]]></version></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>TablifySession</declaring-class><inherited/><string>public __construct()</string><docblock/><params/></method><method><name>Add</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>TablifySession</declaring-class><inherited/><string>public Add($key, $arr)</string><docblock/><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>arr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arr</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>TablifySession</declaring-class><inherited/><string>public Get()</string><docblock/><params/></method></methods><properties><property><name>objects</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $objects</string><docblock><description><![CDATA[<p>Container for session objects</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Archiver.php</name><path>IO/Archiver.php</path><namespace>IO</namespace><classpath>IO.Archiver</classpath><docblock><description><![CDATA[<p>Archive unpacker/packer
This is pretty much a platform agnostic class. It only works on *nix.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[IO]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Dir#class-Dir'>Dir</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Archiver</name><type>class</type><abstract/><final/><instantiable/><extends/><string>[class Archiver]</string><implements/><docblock><description><![CDATA[<p>Class Archiver</p>

<p>This is the wrapper class for ArchivePack and ArchiveUnpack.
The class unpacks and packs different types of archive files.
What archives can be uses depends on what softwares are installed
on the server running the script since the class executes shell
commands. This class does only work on *nix at this state, but
it would'nt take much effort to make it work on Windows.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited/><string>protected __construct()</string><docblock><description><![CDATA[<p>Hidden constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tmpdir]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params/></method><method><name>_exec</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited/><string>protected _exec($cmd)</string><docblock><description><![CDATA[<p>Execute a shellcommand</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cmd]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cmd</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cmd</string></param></params></method><method><name>_clean</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited/><string>protected _clean(Dir $dir)</string><docblock><description><![CDATA[<p>Recursively clean a directory</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional/><class>Dir</class><array/><nullable/><string>Dir $dir</string></param></params></method><method><name>_getCommand</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited/><string>protected _getCommand($arrayAllowed, $arrayCommand, $archiveType)</string><docblock><description><![CDATA[<p>Get the command for $archiveType</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayAllowed]]></variable><description><![CDATA[<p>Array to look in</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayCommand]]></variable><description><![CDATA[<p>array to return from</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$archiveType]]></variable><description><![CDATA[<p>Type to look for</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>arrayAllowed</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayAllowed</string></param><param><name>arrayCommand</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayCommand</string></param><param><name>archiveType</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$archiveType</string></param></params></method><method><name>GetTmpId</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Archiver</declaring-class><inherited/><string>public static GetTmpId()</string><docblock><description><![CDATA[<p>Generates a random string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>tmpdir</name><value><![CDATA[/tmp]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $tmpdir</string><docblock><description><![CDATA[<p>If no directory is specified where the archive should either be created or
extracted this is where the work will be done.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_err</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_err</string><docblock><description><![CDATA[<p>Array to keep errors in</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $error</string><docblock><description><![CDATA[<p>Flag that tells if something went bananas</p>]]></description><var><![CDATA[bool]]></var></docblock></property></properties></class><class><name>ArchiverPack</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Archiver</extends><string>class ArchiverPack extends Archiver</string><implements/><docblock><description><![CDATA[<p>This class packs files and directories into a given archive type.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ArchiverPack</declaring-class><inherited/><string>public __construct($type [, $name [, $dest [, $chmod=438]]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>Type of archive</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>Name of the archive</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dest]]></variable><description><![CDATA[<p>Destination where to put the archive</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$chmod]]></variable><description><![CDATA[<p>Mode to set the archive to</p>]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>name</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>dest</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$dest</string></param><param><name>chmod</name><value>438</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$chmod=438</string></param></params></method><method><name>Add</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ArchiverPack</declaring-class><inherited/><string>public Add($file)</string><docblock><description><![CDATA[<p>Add a file to the archive.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The file to add to the archive</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Pack</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ArchiverPack</declaring-class><inherited/><string>public Pack([$folder])</string><docblock><description><![CDATA[<p>Tries to pack the archive. If no $folder is given it means we should pack
an entire directory. If no name is given for the archive we take the name
of the first file added or the directory name.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$folder]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>folder</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$folder</string></param></params></method><method><name>_packDir</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>ArchiverPack</declaring-class><inherited/><string>protected _packDir($dir)</string><docblock><description><![CDATA[<p>Recursively loops through a directory structure and adds each file and
directory to the _files array. This method is used when packing an entire
directory.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>dir</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dir</string></param></params></method><method><name>_exec</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _exec($cmd) inherited from Archiver</string><docblock><description><![CDATA[<p>Execute a shellcommand</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cmd]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cmd</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cmd</string></param></params></method><method><name>_clean</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _clean(Dir $dir) inherited from Archiver</string><docblock><description><![CDATA[<p>Recursively clean a directory</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional/><class>Dir</class><array/><nullable/><string>Dir $dir</string></param></params></method><method><name>_getCommand</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _getCommand($arrayAllowed, $arrayCommand, $archiveType) inherited from Archiver</string><docblock><description><![CDATA[<p>Get the command for $archiveType</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayAllowed]]></variable><description><![CDATA[<p>Array to look in</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayCommand]]></variable><description><![CDATA[<p>array to return from</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$archiveType]]></variable><description><![CDATA[<p>Type to look for</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>arrayAllowed</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayAllowed</string></param><param><name>arrayCommand</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayCommand</string></param><param><name>archiveType</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$archiveType</string></param></params></method><method><name>GetTmpId</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>public static GetTmpId() inherited from Archiver</string><docblock><description><![CDATA[<p>Generates a random string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>_type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_type</string><docblock><description><![CDATA[<p>The type of archive to pack</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_name</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_name</string><docblock><description><![CDATA[<p>The name of the archive</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_dest</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_dest</string><docblock><description><![CDATA[<p>The destination where to put the archive</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_chmod</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_chmod</string><docblock><description><![CDATA[<p>Mode on the archive when packed</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>_files</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_files</string><docblock><description><![CDATA[<p>The files to pack</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>_packCMD</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_packCMD</string><docblock><description><![CDATA[<p>Pack tbz2</p>]]></description></docblock></property><property><name>_packAllowed</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $_packAllowed</string><docblock><description><![CDATA[<p>Allowed archive types</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>tmpdir</name><value><![CDATA[/tmp]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $tmpdir</string><docblock><description><![CDATA[<p>If no directory is specified where the archive should either be created or
extracted this is where the work will be done.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_err</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_err</string><docblock><description><![CDATA[<p>Array to keep errors in</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $error</string><docblock><description><![CDATA[<p>Flag that tells if something went bananas</p>]]></description><var><![CDATA[bool]]></var></docblock></property></properties></class><class><name>ArchiverUnpack</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Archiver</extends><string>class ArchiverUnpack extends Archiver</string><implements/><docblock><description><![CDATA[<p>This class unpacks archive files.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ArchiverUnpack</declaring-class><inherited/><string>public __construct()</string><docblock><description><![CDATA[<p>Constructor</p>]]></description></docblock><params/></method><method><name>Extract</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ArchiverUnpack</declaring-class><inherited/><string>public Extract($file [, $location [, $subdir]])</string><docblock><description><![CDATA[<p>Tries to unpack an archive</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The file to unpack</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$location]]></variable><description><![CDATA[<p>The location to unpack the archive to</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>Creates a sub directory in location and unpack into that.</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param><param><name>location</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$location</string></param><param><name>subdir</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$subdir</string></param></params></method><method><name>_exec</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _exec($cmd) inherited from Archiver</string><docblock><description><![CDATA[<p>Execute a shellcommand</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cmd]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cmd</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cmd</string></param></params></method><method><name>_clean</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _clean(Dir $dir) inherited from Archiver</string><docblock><description><![CDATA[<p>Recursively clean a directory</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional/><class>Dir</class><array/><nullable/><string>Dir $dir</string></param></params></method><method><name>_getCommand</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>protected _getCommand($arrayAllowed, $arrayCommand, $archiveType) inherited from Archiver</string><docblock><description><![CDATA[<p>Get the command for $archiveType</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayAllowed]]></variable><description><![CDATA[<p>Array to look in</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arrayCommand]]></variable><description><![CDATA[<p>array to return from</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$archiveType]]></variable><description><![CDATA[<p>Type to look for</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>arrayAllowed</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayAllowed</string></param><param><name>arrayCommand</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arrayCommand</string></param><param><name>archiveType</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$archiveType</string></param></params></method><method><name>GetTmpId</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Archiver</declaring-class><inherited>1</inherited><string>public static GetTmpId() inherited from Archiver</string><docblock><description><![CDATA[<p>Generates a random string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>_unPackCMD</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_unPackCMD</string><docblock><description><![CDATA[<p>unpack tar.bz2 and tbz2</p>]]></description></docblock></property><property><name>_unPackAllowed</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_unPackAllowed</string><docblock><description><![CDATA[<p>tar.bz2 and tbz2</p>]]></description></docblock></property><property><name>tmpdir</name><value><![CDATA[/tmp]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $tmpdir</string><docblock><description><![CDATA[<p>If no directory is specified where the archive should either be created or
extracted this is where the work will be done.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_err</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $_err</string><docblock><description><![CDATA[<p>Array to keep errors in</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $error</string><docblock><description><![CDATA[<p>Flag that tells if something went bananas</p>]]></description><var><![CDATA[bool]]></var></docblock></property></properties></class></module><module><name>StdIO.php</name><path>IO/StdIO.php</path><namespace>IO</namespace><classpath>IO.StdIO</classpath><docblock><description><![CDATA[<p>Helper classes for "IO" operations.</p>

<p>Example:</p>

<div class='code'><code><span style='color: #0099CC;'>//!&#160;List&#160;the&#160;content&#160;of&#160;this&#160;directory&#160;sorted&#160;on&#160;file&#160;name</span><br/><span style='color: #990000;'><b>$dir</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Dir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;.&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$dir</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span><span style='color: #ff0000;'>sort</span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;name&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>while</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$f</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$dir</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>emit<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;*&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;<span style='color: #000099;'><b>switch</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span><span style='color: #ff0000;'>filetype</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #008800;'>&#39;file&#39;</span><span style='color: #0000FF;'>:</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#160;(&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>nicesize&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;)&#60;br/&#62;\n&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>case</b></span>&#160;<span style='color: #008800;'>&#39;dir&#39;</span><span style='color: #0000FF;'>:</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Directory:&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>name&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;\n&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>break</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>}</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><todo><![CDATA[<p>These classes really needs to be looked over.</p>]]></todo></docblock><class><name>File</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>IO</extends><string>class File extends IO</string><implements/><docblock><description><![CDATA[<p>Class for handling filesystem files.
This class will collect information about the requested file and giv easy
access to that information. Most methods can be called statically if the
file path is sent as argument.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.4]]></version><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>public __construct($file)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The path to the file</p>]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>initFile</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>protected initFile($file)</string><docblock><description><![CDATA[<p>Set up basic members</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Dir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>public Dir()</string><docblock><description><![CDATA[<p>Get the path of the file, i.e. the directory in which the file recides.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Rename</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>public Rename($newName)</string><docblock><description><![CDATA[<p>Rename the file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$newName]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>Returns the new full path to the file</p>]]></description></return></docblock><params><param><name>newName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$newName</string></param></params></method><method><name>GetContents</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>public GetContents()</string><docblock><description><![CDATA[<p>Same as file_get_contents().
This method can be called statically thus the file reference argument</p>]]></description><link><![CDATA[<a href='http://php.net/file_get_contents'>file_get_contents()</a>]]></link><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsBinary</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>File</declaring-class><inherited/><string>public static IsBinary($file)</string><docblock><description><![CDATA[<p>Tries to figure out if a file is binary or not!</p>]]></description><since><![CDATA[0.3]]></since><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the file isn't found an exception is thrown</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>File</declaring-class><inherited/><string>public static Create($path [, $mode=a+ [, $chmod=436]])</string><docblock><description><![CDATA[<p>Returns a new <a href='?__plibclass=File#class-File'>File</a> object for <code>$path</code>. If <code>$path</code> doesn't exists
tries to create it.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$mode]]></variable><description><![CDATA[<p>See <a href='http://php.net/fopen'>fopen()</a></p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$chmod]]></variable><description><![CDATA[<p>See <a href='http://php.net/chmod'>chmod()</a></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>mode</name><value>a+</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mode=a+</string></param><param><name>chmod</name><value>436</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$chmod=436</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>File</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor</p>]]></description></docblock><params/></method><method><name>IsWritable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public IsWritable() inherited from IO</string><docblock/><params/></method><method><name>IsReadable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public IsReadable() inherited from IO</string><docblock/><params/></method><method><name>CombinePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>IO</declaring-class><inherited>1</inherited><string>public final static CombinePath($args) inherited from IO</string><docblock><description><![CDATA[<p>Concatenates all arguments with the directory separator.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Any number or arguments ...</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>NOTE! No ending slash</p>]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>_usort_int</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected _usort_int($array) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>_usort_str</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected _usort_str($array) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>mk_sortarray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected mk_sortarray($array, $index) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>NiceSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IO</declaring-class><inherited>1</inherited><string>public static NiceSize($size [, $decimals=1]) inherited from IO</string><docblock><description><![CDATA[<p>Return the file size in nice format such as 5Kb or 2Mb etc</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$decimals]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param><param><name>decimals</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$decimals=1</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public __toString() inherited from IO</string><docblock><description><![CDATA[<p>Magic method. Returns the path.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $file</string><docblock><description><![CDATA[<p>1 Gb in bytes
@const int</p>]]></description></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $path</string><docblock/></property><property><name>size</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $size</string><docblock/></property><property><name>filetype</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $filetype</string><docblock/></property><property><name>mtime</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $mtime</string><docblock/></property><property><name>ctime</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $ctime</string><docblock/></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $name</string><docblock/></property><property><name>nicesize</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nicesize</string><docblock/></property><property><name>extension</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $extension</string><docblock/></property><property><name>NEWLINE</name><value><![CDATA[
]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $NEWLINE</string><docblock/></property></properties></class><class><name>Dir</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>IO</extends><string>class Dir extends IO</string><implements/><docblock><description><![CDATA[<p>Class for handling filesystem directories. This class will collect
information about the requested directory and give easy access to that
information. The contents of the directory will be also be collected and can
be easily looped through</p>

<p>Example</p>

<div class='code'><code><span style='color: #990000;'><b>$dir</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Dir<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/path/to/dir&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>//&#160;Loop&#160;through&#160;the&#160;contents&#160;of&#160;the&#160;directory&#160;and&#160;show&#160;only&#160;PHP&#160;files.</span><br/><span style='color: #0099CC;'>//&#160;The&#160;$f&#160;here&#160;will&#160;be&#160;a&#160;File&#160;object&#160;&#60;a&#160;href=&#39;?__plibclass=File#class-File&#39;&#62;File&#60;/a&#62;</span><br/><span style='color: #000099;'><b>while</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$f</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$dir</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>emit<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;*.php&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>path&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$f</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>niceSize<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#34;&#60;br/&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/></code></div>

<p>For a more extensive example see the docblock for <a href='?__plibclass=IO#class-IO'>IO</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Dir</declaring-class><inherited/><string>public __construct($dir)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dir]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>dir</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dir</string></param></params></method><method><name>Sort</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Dir</declaring-class><inherited/><string>public Sort([$key=name [, $order=4]])</string><docblock><description><![CDATA[<p>Sorting function. The method used to sort is called "Schwartzian
Transform" which might look quite scary at first glance, but it a
really fast method. If you don't know what it is, search Google and
you'll find lots of stuff about it.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>Array key to sort on</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$order]]></variable><description><![CDATA[<p>Sort order, either asc (SORT_ASC) or desc (SORT_DESC)</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value>name</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$key=name</string></param><param><name>order</name><value>4</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$order=4</string></param></params></method><method><name>Emit</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Dir</declaring-class><inherited/><string>public Emit([$filter=*])</string><docblock><description><![CDATA[<p>Emit the contents of the directory.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filter]]></variable><description><![CDATA[<p>Glob pattern</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type><type><![CDATA[<a href='?__plibclass=Dir#class-Dir'>Dir</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>filter</name><value>*</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$filter=*</string></param></params></method><method><name>glob</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Dir</declaring-class><inherited/><string>private glob($string, $pattern)</string><docblock><description><![CDATA[<p>Create a regexp from the glob pattern</p>]]></description><todo><![CDATA[<p>Bug checking? This could break...</p>]]></todo><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$string]]></variable><description><![CDATA[<p>The string to match on</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$pattern]]></variable><description><![CDATA[<p>The glob pattern</p>]]></description></param></params></docblock><params><param><name>string</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$string</string></param><param><name>pattern</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pattern</string></param></params></method><method><name>getContents</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Dir</declaring-class><inherited/><string>private getContents()</string><docblock><description><![CDATA[<p>Get the contents of the current directory</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RecursiveIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Dir</declaring-class><inherited/><string>public static RecursiveIterator($path)</string><docblock><description><![CDATA[<p>Returns a recursive iterator</p>]]></description><since><![CDATA[0.3]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=RecursiveIteratorIterator&amp;lang=en'>RecursiveIteratorIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>MkdirHier</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Dir</declaring-class><inherited/><string>public static MkdirHier($path)</string><docblock><description><![CDATA[<p>Creates a directory hierarchy</p>]]></description><since><![CDATA[0.4]]></since><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Remove</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Dir</declaring-class><inherited/><string>public static Remove($path [, $recurse [, $keepRoot]])</string><docblock><description><![CDATA[<p>Delete the directory</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$recurse]]></variable><description><![CDATA[<p>If true the directory will be removed recursivley</p>]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>recurse</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$recurse</string></param><param><name>keepRoot</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$keepRoot</string></param></params></method><method><name>IsWritable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public IsWritable() inherited from IO</string><docblock/><params/></method><method><name>IsReadable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public IsReadable() inherited from IO</string><docblock/><params/></method><method><name>CombinePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>IO</declaring-class><inherited>1</inherited><string>public final static CombinePath($args) inherited from IO</string><docblock><description><![CDATA[<p>Concatenates all arguments with the directory separator.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Any number or arguments ...</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>NOTE! No ending slash</p>]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>_usort_int</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected _usort_int($array) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>_usort_str</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected _usort_str($array) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>mk_sortarray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>protected mk_sortarray($array, $index) inherited from IO</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>NiceSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IO</declaring-class><inherited>1</inherited><string>public static NiceSize($size [, $decimals=1]) inherited from IO</string><docblock><description><![CDATA[<p>Return the file size in nice format such as 5Kb or 2Mb etc</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$decimals]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param><param><name>decimals</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$decimals=1</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited>1</inherited><string>public __toString() inherited from IO</string><docblock><description><![CDATA[<p>Magic method. Returns the path.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>dir</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $dir</string><docblock/></property><property><name>globPattern</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $globPattern</string><docblock/></property><property><name>contents_index</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $contents_index</string><docblock/></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $path</string><docblock/></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $name</string><docblock/></property><property><name>size</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $size</string><docblock/></property><property><name>filetype</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $filetype</string><docblock/></property><property><name>contents</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $contents</string><docblock/></property><property><name>NEWLINE</name><value><![CDATA[
]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $NEWLINE</string><docblock/></property></properties></class><class><name>IO</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class IO]</string><implements/><docblock><description><![CDATA[<p>Abstract IO class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>IsWritable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>public IsWritable()</string><docblock/><params/></method><method><name>IsReadable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>public IsReadable()</string><docblock/><params/></method><method><name>CombinePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>IO</declaring-class><inherited/><string>public final static CombinePath($args)</string><docblock><description><![CDATA[<p>Concatenates all arguments with the directory separator.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Any number or arguments ...</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>NOTE! No ending slash</p>]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>_usort_int</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>protected _usort_int($array)</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>_usort_str</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>protected _usort_str($array)</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>mk_sortarray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>protected mk_sortarray($array, $index)</string><docblock/><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>NiceSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IO</declaring-class><inherited/><string>public static NiceSize($size [, $decimals=1])</string><docblock><description><![CDATA[<p>Return the file size in nice format such as 5Kb or 2Mb etc</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$decimals]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param><param><name>decimals</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$decimals=1</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IO</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Magic method. Returns the path.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>NEWLINE</name><value><![CDATA[
]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $NEWLINE</string><docblock/></property><property><name>filetype</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $filetype</string><docblock/></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock/></property></properties></class><class><name>IOObject</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class IOObject</string><implements/><docblock><description><![CDATA[<p>Fake IO class</p>]]></description><author><![CDATA[Pontus �stlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods/><properties/></class></module></namespace><namespace name="Media" path="Media"><module><name>ID3.php</name><path>Media/ID3.php</path><namespace>Media</namespace><classpath>Media.ID3</classpath><docblock><description><![CDATA[<p>ID3 tag reader</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Media]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=StringReader#class-StringReader'>StringReader</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>TagLib</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class TagLib]</string><implements/><docblock><description><![CDATA[<p>Base class of media file tags (ID3...)</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>GetGenreById</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited/><string>public static GetGenreById($id)</string><docblock><description><![CDATA[<p>Returns the string reprentation of genre with id <code>$id</code></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$id]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>id</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$id</string></param></params></method><method><name>GetIdOfGenre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited/><string>public static GetIdOfGenre($genre)</string><docblock><description><![CDATA[<p>Returns the ID of <code>$genre</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$genre]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>genre</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$genre</string></param></params></method><method><name>unsyncronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited/><string>protected unsyncronize($data)</string><docblock><description><![CDATA[<p>Perform "unsynchronization" on the data.  This takes things that
look like mpeg syncs, 11111111 111xxxxx, and stuffs a zero
in between the bytes.  In addition, it stuffs a zero after every
ff 00 combination.</p>

<p>Note that this is A.F.U., because the standard doesn't say to stuff
an extra zero in 11111111 00000000 111xxxxx.  It says to stuff it
after 11111111 00000000.  That's broken.  Seems to be what id3lib
does also, though.</p>

<p>This is a port of the same method in the PERL module.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unUnsynchronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited/><string>protected unUnsynchronize($data)</string><docblock><description><![CDATA[<p>The oposit of <a href='?__plibclass=TagLib#method-'>TagLib::unsynchronize()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unmungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited/><string>protected unmungeSize($size)</string><docblock><description><![CDATA[<p>Takes an ID3 size field and returns an integer</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method><method><name>mungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited/><string>protected mungeSize($size)</string><docblock><description><![CDATA[<p>Takes an integer and returns an ID3 size field</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $type</string><docblock><description><![CDATA[<p>Type of tag</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>GENRES</name><value><![CDATA[array (
  0 => 'Blues',
  1 => 'Classic Rock',
  2 => 'Country',
  3 => 'Dance',
  4 => 'Disco',
  5 => 'Funk',
  6 => 'Grunge',
  7 => 'Hip-Hop',
  8 => 'Jazz',
  9 => 'Metal',
  10 => 'New Age',
  11 => 'Oldies',
  12 => 'Other',
  13 => 'Pop',
  14 => 'R&B',
  15 => 'Rap',
  16 => 'Reggae',
  17 => 'Rock',
  18 => 'Techno',
  19 => 'Industrial',
  20 => 'Alternative',
  21 => 'Ska',
  22 => 'Death Metal',
  23 => 'Pranks',
  24 => 'Soundtrack',
  25 => 'Euro-Techno',
  26 => 'Ambient',
  27 => 'Trip-Hop',
  28 => 'Vocal',
  29 => 'Jazz+Funk',
  30 => 'Fusion',
  31 => 'Trance',
  32 => 'Classical',
  33 => 'Instrumental',
  34 => 'Acid',
  35 => 'House',
  36 => 'Game',
  37 => 'Sound Clip',
  38 => 'Gospel',
  39 => 'Noise',
  40 => 'AlternRock',
  41 => 'Bass',
  42 => 'Soul',
  43 => 'Punk',
  44 => 'Space',
  45 => 'Meditative',
  46 => 'Instrumental Pop',
  47 => 'Instrumental Rock',
  48 => 'Ethnic',
  49 => 'Gothic',
  50 => 'Darkwave',
  51 => 'Techno-Industrial',
  52 => 'Electronic',
  53 => 'Pop-Folk',
  54 => 'Eurodance',
  55 => 'Dream',
  56 => 'Southern Rock',
  57 => 'Comedy',
  58 => 'Cult',
  59 => 'Gangsta',
  60 => 'Top 40',
  61 => 'Christian Rap',
  62 => 'Pop/Funk',
  63 => 'Jungle',
  64 => 'Native American',
  65 => 'Cabaret',
  66 => 'New Wave',
  67 => 'Psychadelic',
  68 => 'Rave',
  69 => 'Showtunes',
  70 => 'Trailer',
  71 => 'Lo-Fi',
  72 => 'Tribal',
  73 => 'Acid Punk',
  74 => 'Acid Jazz',
  75 => 'Polka',
  76 => 'Retro',
  77 => 'Musical',
  78 => 'Rock & Roll',
  79 => 'Hard Rock',
  80 => 'Folk',
  81 => 'Folk-Rock',
  82 => 'National Folk',
  83 => 'Swing',
  84 => 'Fast Fusion',
  85 => 'Bebob',
  86 => 'Latin',
  87 => 'Revival',
  88 => 'Celtic',
  89 => 'Bluegrass',
  90 => 'Avantgarde',
  91 => 'Gothic Rock',
  92 => 'Progressive Rock',
  93 => 'Psychedelic Rock',
  94 => 'Symphonic Rock',
  95 => 'Slow Rock',
  96 => 'Big Band',
  97 => 'Chorus',
  98 => 'Easy Listening',
  99 => 'Acoustic',
  100 => 'Humour',
  101 => 'Speech',
  102 => 'Chanson',
  103 => 'Opera',
  104 => 'Chamber Music',
  105 => 'Sonata',
  106 => 'Symphony',
  107 => 'Booty Bass',
  108 => 'Primus',
  109 => 'Porn Groove',
  110 => 'Satire',
  111 => 'Slow Jam',
  112 => 'Club',
  113 => 'Tango',
  114 => 'Samba',
  115 => 'Folklore',
  116 => 'Ballad',
  117 => 'Power Ballad',
  118 => 'Rhythmic Soul',
  119 => 'Freestyle',
  120 => 'Duet',
  121 => 'Punk Rock',
  122 => 'Drum Solo',
  123 => 'A capella',
  124 => 'Euro-House',
  125 => 'Dance Hall',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $GENRES</string><docblock><description><![CDATA[<p>ID3 genre list. Genres beyond 79 are Winamp extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>ID3</name><type>class</type><abstract/><final/><instantiable/><extends>TagLib</extends><string>[class ID3 extends TagLib]</string><implements/><docblock><description><![CDATA[<p>Base class for ID3 tags</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>protected __construct(File $file, $head)</string><docblock><description><![CDATA[<p>Hidden constructor.
This class must be instantiated from a derived class.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class>File</class><array/><nullable/><string>File $file</string></param><param><name>head</name><value/><reference/><optional/><class/><array/><nullable/><string>$head</string></param></params></method><method><name>Title</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Title()</string><docblock><description><![CDATA[<p>Returns the song title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Artist</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Artist()</string><docblock><description><![CDATA[<p>Returns the artist</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Album</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Album()</string><docblock><description><![CDATA[<p>Returns the album name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Year</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Year()</string><docblock><description><![CDATA[<p>Returns the year of the album/song</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Comment</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Comment()</string><docblock><description><![CDATA[<p>Returns the comment</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Track</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Track()</string><docblock><description><![CDATA[<p>Returns the track number</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Genre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public Genre([$asInt])</string><docblock><description><![CDATA[<p>Returns the genre.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$asInt]]></variable><description><![CDATA[<p>If set the integer value of the genre will be returned</p>]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>asInt</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$asInt</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>ID3</declaring-class><inherited/><string>public final static Create($file)</string><docblock><description><![CDATA[<p>Factory method for reading ID3 information from a media file.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=ID3Exception#class-ID3Exception'>ID3Exception</a>]]></type></types><description><![CDATA[<p>If no tag is found or the tag is unsupported</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=ID3v1#class-ID3v1'>ID3v1</a>]]></type><type><![CDATA[<a href='?__plibclass=ID3v2#class-ID3v2'>ID3v2</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor</p>]]></description></docblock><params/></method><method><name>GetGenreById</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetGenreById($id) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the string reprentation of genre with id <code>$id</code></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$id]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>id</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$id</string></param></params></method><method><name>GetIdOfGenre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetIdOfGenre($genre) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the ID of <code>$genre</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$genre]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>genre</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$genre</string></param></params></method><method><name>unsyncronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unsyncronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>Perform "unsynchronization" on the data.  This takes things that
look like mpeg syncs, 11111111 111xxxxx, and stuffs a zero
in between the bytes.  In addition, it stuffs a zero after every
ff 00 combination.</p>

<p>Note that this is A.F.U., because the standard doesn't say to stuff
an extra zero in 11111111 00000000 111xxxxx.  It says to stuff it
after 11111111 00000000.  That's broken.  Seems to be what id3lib
does also, though.</p>

<p>This is a port of the same method in the PERL module.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unUnsynchronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unUnsynchronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>The oposit of <a href='?__plibclass=TagLib#method-'>TagLib::unsynchronize()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unmungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unmungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an ID3 size field and returns an integer</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method><method><name>mungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected mungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an integer and returns an ID3 size field</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method></methods><properties><property><name>title</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $title</string><docblock><description><![CDATA[<p>Title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>album</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $album</string><docblock><description><![CDATA[<p>Album title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>artist</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $artist</string><docblock><description><![CDATA[<p>Artist</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>year</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $year</string><docblock><description><![CDATA[<p>Year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>comment</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $comment</string><docblock><description><![CDATA[<p>Comment</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>track</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $track</string><docblock><description><![CDATA[<p>The track number</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>genre</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $genre</string><docblock><description><![CDATA[<p>Genre</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>fileIdentifier</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fileIdentifier</string><docblock><description><![CDATA[<p>File identifier</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>stream</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $stream</string><docblock><description><![CDATA[<p>Stream reader</p>]]></description><var><![CDATA[StreamReader]]></var></docblock></property><property><name>head</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $head</string><docblock><description><![CDATA[<p>Head, first 10 bytes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tag</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tag</string><docblock><description><![CDATA[<p>The ID3 tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock><description><![CDATA[<p>The real file</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The version</p>]]></description><var><![CDATA[Version]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $type</string><docblock><description><![CDATA[<p>Type of tag</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>GENRES</name><value><![CDATA[array (
  0 => 'Blues',
  1 => 'Classic Rock',
  2 => 'Country',
  3 => 'Dance',
  4 => 'Disco',
  5 => 'Funk',
  6 => 'Grunge',
  7 => 'Hip-Hop',
  8 => 'Jazz',
  9 => 'Metal',
  10 => 'New Age',
  11 => 'Oldies',
  12 => 'Other',
  13 => 'Pop',
  14 => 'R&B',
  15 => 'Rap',
  16 => 'Reggae',
  17 => 'Rock',
  18 => 'Techno',
  19 => 'Industrial',
  20 => 'Alternative',
  21 => 'Ska',
  22 => 'Death Metal',
  23 => 'Pranks',
  24 => 'Soundtrack',
  25 => 'Euro-Techno',
  26 => 'Ambient',
  27 => 'Trip-Hop',
  28 => 'Vocal',
  29 => 'Jazz+Funk',
  30 => 'Fusion',
  31 => 'Trance',
  32 => 'Classical',
  33 => 'Instrumental',
  34 => 'Acid',
  35 => 'House',
  36 => 'Game',
  37 => 'Sound Clip',
  38 => 'Gospel',
  39 => 'Noise',
  40 => 'AlternRock',
  41 => 'Bass',
  42 => 'Soul',
  43 => 'Punk',
  44 => 'Space',
  45 => 'Meditative',
  46 => 'Instrumental Pop',
  47 => 'Instrumental Rock',
  48 => 'Ethnic',
  49 => 'Gothic',
  50 => 'Darkwave',
  51 => 'Techno-Industrial',
  52 => 'Electronic',
  53 => 'Pop-Folk',
  54 => 'Eurodance',
  55 => 'Dream',
  56 => 'Southern Rock',
  57 => 'Comedy',
  58 => 'Cult',
  59 => 'Gangsta',
  60 => 'Top 40',
  61 => 'Christian Rap',
  62 => 'Pop/Funk',
  63 => 'Jungle',
  64 => 'Native American',
  65 => 'Cabaret',
  66 => 'New Wave',
  67 => 'Psychadelic',
  68 => 'Rave',
  69 => 'Showtunes',
  70 => 'Trailer',
  71 => 'Lo-Fi',
  72 => 'Tribal',
  73 => 'Acid Punk',
  74 => 'Acid Jazz',
  75 => 'Polka',
  76 => 'Retro',
  77 => 'Musical',
  78 => 'Rock & Roll',
  79 => 'Hard Rock',
  80 => 'Folk',
  81 => 'Folk-Rock',
  82 => 'National Folk',
  83 => 'Swing',
  84 => 'Fast Fusion',
  85 => 'Bebob',
  86 => 'Latin',
  87 => 'Revival',
  88 => 'Celtic',
  89 => 'Bluegrass',
  90 => 'Avantgarde',
  91 => 'Gothic Rock',
  92 => 'Progressive Rock',
  93 => 'Psychedelic Rock',
  94 => 'Symphonic Rock',
  95 => 'Slow Rock',
  96 => 'Big Band',
  97 => 'Chorus',
  98 => 'Easy Listening',
  99 => 'Acoustic',
  100 => 'Humour',
  101 => 'Speech',
  102 => 'Chanson',
  103 => 'Opera',
  104 => 'Chamber Music',
  105 => 'Sonata',
  106 => 'Symphony',
  107 => 'Booty Bass',
  108 => 'Primus',
  109 => 'Porn Groove',
  110 => 'Satire',
  111 => 'Slow Jam',
  112 => 'Club',
  113 => 'Tango',
  114 => 'Samba',
  115 => 'Folklore',
  116 => 'Ballad',
  117 => 'Power Ballad',
  118 => 'Rhythmic Soul',
  119 => 'Freestyle',
  120 => 'Duet',
  121 => 'Punk Rock',
  122 => 'Drum Solo',
  123 => 'A capella',
  124 => 'Euro-House',
  125 => 'Dance Hall',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $GENRES</string><docblock><description><![CDATA[<p>ID3 genre list. Genres beyond 79 are Winamp extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>ID3v2</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>ID3</extends><string>class ID3v2 extends ID3</string><implements/><docblock><description><![CDATA[<p>ID3v2 class.
Don't instantiate this class directly. Use <a href='?__plibclass=ID3#method-Create'>ID3::Create()</a> instead.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>public __construct(File $file, $head)</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class>File</class><array/><nullable/><string>File $file</string></param><param><name>head</name><value/><reference/><optional/><class/><array/><nullable/><string>$head</string></param></params></method><method><name>frameOrNull</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>private frameOrNull($which)</string><docblock><description><![CDATA[<p>Returns the frame <code>$which</code> or <code>null</code> if the frame is not set</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=ID3v2Frame#class-ID3v2Frame'>ID3v2Frame</a>]]></type><type><![CDATA[<a href='?__plibclass=ID3v2ImageFrame#class-ID3v2ImageFrame'>ID3v2ImageFrame</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>readFrames</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>protected readFrames()</string><docblock><description><![CDATA[<p>Read the ID3 frames</p>]]></description></docblock><params/></method><method><name>Frames</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>public Frames()</string><docblock><description><![CDATA[<p>Returns the frames</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Valid</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>public Valid()</string><docblock><description><![CDATA[<p>Returns true if at least one frame was found</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Tracks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>public Tracks()</string><docblock><description><![CDATA[<p>Returns the number of tracks.</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Image</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2</declaring-class><inherited/><string>public Image()</string><docblock><description><![CDATA[<p>Returns the image if existing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Title</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Title() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the song title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Artist</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Artist() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the artist</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Album</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Album() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the album name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Year</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Year() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the year of the album/song</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Comment</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Comment() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the comment</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Track</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Track() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the track number</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Genre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Genre([$asInt]) inherited from ID3</string><docblock><description><![CDATA[<p>Returns the genre.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$asInt]]></variable><description><![CDATA[<p>If set the integer value of the genre will be returned</p>]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>asInt</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$asInt</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public final static Create($file) inherited from ID3</string><docblock><description><![CDATA[<p>Factory method for reading ID3 information from a media file.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=ID3Exception#class-ID3Exception'>ID3Exception</a>]]></type></types><description><![CDATA[<p>If no tag is found or the tag is unsupported</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=ID3v1#class-ID3v1'>ID3v1</a>]]></type><type><![CDATA[<a href='?__plibclass=ID3v2#class-ID3v2'>ID3v2</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public __destruct() inherited from ID3</string><docblock><description><![CDATA[<p>Destructor</p>]]></description></docblock><params/></method><method><name>GetGenreById</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetGenreById($id) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the string reprentation of genre with id <code>$id</code></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$id]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>id</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$id</string></param></params></method><method><name>GetIdOfGenre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetIdOfGenre($genre) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the ID of <code>$genre</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$genre]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>genre</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$genre</string></param></params></method><method><name>unsyncronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unsyncronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>Perform "unsynchronization" on the data.  This takes things that
look like mpeg syncs, 11111111 111xxxxx, and stuffs a zero
in between the bytes.  In addition, it stuffs a zero after every
ff 00 combination.</p>

<p>Note that this is A.F.U., because the standard doesn't say to stuff
an extra zero in 11111111 00000000 111xxxxx.  It says to stuff it
after 11111111 00000000.  That's broken.  Seems to be what id3lib
does also, though.</p>

<p>This is a port of the same method in the PERL module.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unUnsynchronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unUnsynchronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>The oposit of <a href='?__plibclass=TagLib#method-'>TagLib::unsynchronize()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unmungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unmungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an ID3 size field and returns an integer</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method><method><name>mungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected mungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an integer and returns an ID3 size field</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $type</string><docblock/></property><property><name>frameids</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $frameids</string><docblock><description><![CDATA[<p>Available frame id's</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>tracks</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tracks</string><docblock><description><![CDATA[<p>Number of tracks</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>frames</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $frames</string><docblock><description><![CDATA[<p>Storage for frames
Asscociative. frameid => value</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>sframes</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $sframes</string><docblock><description><![CDATA[<p>Unparsed frames</p>]]></description><var><![CDATA[StringReader]]></var></docblock></property><property><name>title</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $title</string><docblock><description><![CDATA[<p>Title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>album</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $album</string><docblock><description><![CDATA[<p>Album title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>artist</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $artist</string><docblock><description><![CDATA[<p>Artist</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>year</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $year</string><docblock><description><![CDATA[<p>Year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>comment</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $comment</string><docblock><description><![CDATA[<p>Comment</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>track</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $track</string><docblock><description><![CDATA[<p>The track number</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>genre</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $genre</string><docblock><description><![CDATA[<p>Genre</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>fileIdentifier</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fileIdentifier</string><docblock><description><![CDATA[<p>File identifier</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>stream</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $stream</string><docblock><description><![CDATA[<p>Stream reader</p>]]></description><var><![CDATA[StreamReader]]></var></docblock></property><property><name>head</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $head</string><docblock><description><![CDATA[<p>Head, first 10 bytes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tag</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tag</string><docblock><description><![CDATA[<p>The ID3 tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock><description><![CDATA[<p>The real file</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The version</p>]]></description><var><![CDATA[Version]]></var></docblock></property><property><name>GENRES</name><value><![CDATA[array (
  0 => 'Blues',
  1 => 'Classic Rock',
  2 => 'Country',
  3 => 'Dance',
  4 => 'Disco',
  5 => 'Funk',
  6 => 'Grunge',
  7 => 'Hip-Hop',
  8 => 'Jazz',
  9 => 'Metal',
  10 => 'New Age',
  11 => 'Oldies',
  12 => 'Other',
  13 => 'Pop',
  14 => 'R&B',
  15 => 'Rap',
  16 => 'Reggae',
  17 => 'Rock',
  18 => 'Techno',
  19 => 'Industrial',
  20 => 'Alternative',
  21 => 'Ska',
  22 => 'Death Metal',
  23 => 'Pranks',
  24 => 'Soundtrack',
  25 => 'Euro-Techno',
  26 => 'Ambient',
  27 => 'Trip-Hop',
  28 => 'Vocal',
  29 => 'Jazz+Funk',
  30 => 'Fusion',
  31 => 'Trance',
  32 => 'Classical',
  33 => 'Instrumental',
  34 => 'Acid',
  35 => 'House',
  36 => 'Game',
  37 => 'Sound Clip',
  38 => 'Gospel',
  39 => 'Noise',
  40 => 'AlternRock',
  41 => 'Bass',
  42 => 'Soul',
  43 => 'Punk',
  44 => 'Space',
  45 => 'Meditative',
  46 => 'Instrumental Pop',
  47 => 'Instrumental Rock',
  48 => 'Ethnic',
  49 => 'Gothic',
  50 => 'Darkwave',
  51 => 'Techno-Industrial',
  52 => 'Electronic',
  53 => 'Pop-Folk',
  54 => 'Eurodance',
  55 => 'Dream',
  56 => 'Southern Rock',
  57 => 'Comedy',
  58 => 'Cult',
  59 => 'Gangsta',
  60 => 'Top 40',
  61 => 'Christian Rap',
  62 => 'Pop/Funk',
  63 => 'Jungle',
  64 => 'Native American',
  65 => 'Cabaret',
  66 => 'New Wave',
  67 => 'Psychadelic',
  68 => 'Rave',
  69 => 'Showtunes',
  70 => 'Trailer',
  71 => 'Lo-Fi',
  72 => 'Tribal',
  73 => 'Acid Punk',
  74 => 'Acid Jazz',
  75 => 'Polka',
  76 => 'Retro',
  77 => 'Musical',
  78 => 'Rock & Roll',
  79 => 'Hard Rock',
  80 => 'Folk',
  81 => 'Folk-Rock',
  82 => 'National Folk',
  83 => 'Swing',
  84 => 'Fast Fusion',
  85 => 'Bebob',
  86 => 'Latin',
  87 => 'Revival',
  88 => 'Celtic',
  89 => 'Bluegrass',
  90 => 'Avantgarde',
  91 => 'Gothic Rock',
  92 => 'Progressive Rock',
  93 => 'Psychedelic Rock',
  94 => 'Symphonic Rock',
  95 => 'Slow Rock',
  96 => 'Big Band',
  97 => 'Chorus',
  98 => 'Easy Listening',
  99 => 'Acoustic',
  100 => 'Humour',
  101 => 'Speech',
  102 => 'Chanson',
  103 => 'Opera',
  104 => 'Chamber Music',
  105 => 'Sonata',
  106 => 'Symphony',
  107 => 'Booty Bass',
  108 => 'Primus',
  109 => 'Porn Groove',
  110 => 'Satire',
  111 => 'Slow Jam',
  112 => 'Club',
  113 => 'Tango',
  114 => 'Samba',
  115 => 'Folklore',
  116 => 'Ballad',
  117 => 'Power Ballad',
  118 => 'Rhythmic Soul',
  119 => 'Freestyle',
  120 => 'Duet',
  121 => 'Punk Rock',
  122 => 'Drum Solo',
  123 => 'A capella',
  124 => 'Euro-House',
  125 => 'Dance Hall',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $GENRES</string><docblock><description><![CDATA[<p>ID3 genre list. Genres beyond 79 are Winamp extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>ID3v2Frame</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class ID3v2Frame</string><implements/><docblock><description><![CDATA[<p>Representation of a ID3v2 frame</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public __construct($head, $data [, Version $version])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>The version of the owning tag</p>]]></description></param></params></docblock><params><param><name>head</name><value/><reference/><optional/><class/><array/><nullable/><string>$head</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>version</name><value/><reference/><optional>1</optional><class>Version</class><array/><nullable>1</nullable><string>Version $version</string></param></params></method><method><name>Data</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public Data()</string><docblock><description><![CDATA[<p>Returns the data normalized, i.e all binary data removed.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RawData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public RawData()</string><docblock><description><![CDATA[<p>Returns the raw data</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ID</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public ID()</string><docblock><description><![CDATA[<p>Returns the frame ID</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsTextual</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public IsTextual()</string><docblock><description><![CDATA[<p>Is the frame a text frame or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast to string.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The noramlized data</p>]]></description></return></docblock><params/></method><method><name>normalize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited/><string>protected normalize($str)</string><docblock><description><![CDATA[<p>Removes binary shit in the string</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>Converted to ISO-8859-1</p>]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method></methods><properties><property><name>head</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $head</string><docblock><description><![CDATA[<p>Frame header</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Frame data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cdata</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cdata</string><docblock><description><![CDATA[<p>Normalized frame data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>Version of owning tag</p>]]></description><var><![CDATA[Version]]></var></docblock></property></properties></class><class><name>ID3v2ImageFrame</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>ID3v2Frame</extends><string>class ID3v2ImageFrame extends ID3v2Frame</string><implements/><docblock><description><![CDATA[<p>Representation of a ID3v2 frame containing an image</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2ImageFrame</declaring-class><inherited/><string>public __construct($head, $data [, Version $version])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=Version#class-Version'>Version</a>]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>The version of the owning tag</p>]]></description></param></params></docblock><params><param><name>head</name><value/><reference/><optional/><class/><array/><nullable/><string>$head</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>version</name><value/><reference/><optional>1</optional><class>Version</class><array/><nullable>1</nullable><string>Version $version</string></param></params></method><method><name>Encoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2ImageFrame</declaring-class><inherited/><string>public Encoding()</string><docblock><description><![CDATA[<p>Returns the encoding</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>MimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2ImageFrame</declaring-class><inherited/><string>public MimeType()</string><docblock><description><![CDATA[<p>Returns the mime type</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2ImageFrame</declaring-class><inherited/><string>public Type()</string><docblock><description><![CDATA[<p>Returns the type of image</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>normalize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>ID3v2ImageFrame</declaring-class><inherited/><string>protected normalize($data)</string><docblock><description><![CDATA[<p>Normalizes the data, i.e. parses the image frame and pulls out the
encoding, mimetype etc.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>Returns the image data</p>]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>Data</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited>1</inherited><string>public Data() inherited from ID3v2Frame</string><docblock><description><![CDATA[<p>Returns the data normalized, i.e all binary data removed.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RawData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited>1</inherited><string>public RawData() inherited from ID3v2Frame</string><docblock><description><![CDATA[<p>Returns the raw data</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ID</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited>1</inherited><string>public ID() inherited from ID3v2Frame</string><docblock><description><![CDATA[<p>Returns the frame ID</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsTextual</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited>1</inherited><string>public IsTextual() inherited from ID3v2Frame</string><docblock><description><![CDATA[<p>Is the frame a text frame or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v2Frame</declaring-class><inherited>1</inherited><string>public __toString() inherited from ID3v2Frame</string><docblock><description><![CDATA[<p>Cast to string.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The noramlized data</p>]]></description></return></docblock><params/></method></methods><properties><property><name>pictypes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pictypes</string><docblock><description><![CDATA[<p>Picture types</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>mime</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $mime</string><docblock><description><![CDATA[<p>Image's mime type</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of image</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=ID3v2ImageFrame#property-'>ID3v2ImageFrame::$pictype</a>]]></type></types><description><![CDATA[<p>$pictype</p>]]></description></see><var><![CDATA[string]]></var></docblock></property><property><name>enc</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $enc</string><docblock><description><![CDATA[<p>Image encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>head</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $head</string><docblock><description><![CDATA[<p>Frame header</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Frame data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cdata</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cdata</string><docblock><description><![CDATA[<p>Normalized frame data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>Version of owning tag</p>]]></description><var><![CDATA[Version]]></var></docblock></property></properties></class><class><name>ID3v1</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>ID3</extends><string>class ID3v1 extends ID3</string><implements/><docblock><description><![CDATA[<p>ID3v1 class.
Don't instantiate this class directly. Use <a href='?__plibclass=ID3#method-Create'>ID3::Create()</a> instead.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v1</declaring-class><inherited/><string>public __construct(File $file, $head)</string><docblock><description><![CDATA[<p>Creates an ID3v1 object</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[<p>The first 10 bytes of the file</p>]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class>File</class><array/><nullable/><string>File $file</string></param><param><name>head</name><value/><reference/><optional/><class/><array/><nullable/><string>$head</string></param></params></method><method><name>ParseTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3v1</declaring-class><inherited/><string>public ParseTag($tag)</string><docblock><description><![CDATA[<p>Parse the ID3v1 tag - the last <code>128</code> bytes of the file.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param></params></method><method><name>Title</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Title() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the song title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Artist</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Artist() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the artist</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Album</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Album() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the album name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Year</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Year() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the year of the album/song</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Comment</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Comment() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the comment</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Track</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Track() inherited from ID3</string><docblock><description><![CDATA[<p>Returns the track number</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Genre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public Genre([$asInt]) inherited from ID3</string><docblock><description><![CDATA[<p>Returns the genre.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$asInt]]></variable><description><![CDATA[<p>If set the integer value of the genre will be returned</p>]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>asInt</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$asInt</string></param></params></method><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public final static Create($file) inherited from ID3</string><docblock><description><![CDATA[<p>Factory method for reading ID3 information from a media file.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=ID3Exception#class-ID3Exception'>ID3Exception</a>]]></type></types><description><![CDATA[<p>If no tag is found or the tag is unsupported</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=ID3v1#class-ID3v1'>ID3v1</a>]]></type><type><![CDATA[<a href='?__plibclass=ID3v2#class-ID3v2'>ID3v2</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>ID3</declaring-class><inherited>1</inherited><string>public __destruct() inherited from ID3</string><docblock><description><![CDATA[<p>Destructor</p>]]></description></docblock><params/></method><method><name>GetGenreById</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetGenreById($id) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the string reprentation of genre with id <code>$id</code></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$id]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>id</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$id</string></param></params></method><method><name>GetIdOfGenre</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>public static GetIdOfGenre($genre) inherited from TagLib</string><docblock><description><![CDATA[<p>Returns the ID of <code>$genre</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$genre]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>genre</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$genre</string></param></params></method><method><name>unsyncronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unsyncronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>Perform "unsynchronization" on the data.  This takes things that
look like mpeg syncs, 11111111 111xxxxx, and stuffs a zero
in between the bytes.  In addition, it stuffs a zero after every
ff 00 combination.</p>

<p>Note that this is A.F.U., because the standard doesn't say to stuff
an extra zero in 11111111 00000000 111xxxxx.  It says to stuff it
after 11111111 00000000.  That's broken.  Seems to be what id3lib
does also, though.</p>

<p>This is a port of the same method in the PERL module.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unUnsynchronize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unUnsynchronize($data) inherited from TagLib</string><docblock><description><![CDATA[<p>The oposit of <a href='?__plibclass=TagLib#method-'>TagLib::unsynchronize()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>unmungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected unmungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an ID3 size field and returns an integer</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method><method><name>mungeSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>TagLib</declaring-class><inherited>1</inherited><string>protected mungeSize($size) inherited from TagLib</string><docblock><description><![CDATA[<p>Takes an integer and returns an ID3 size field</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$size]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>size</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$size</string></param></params></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $type</string><docblock/></property><property><name>size</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $size</string><docblock><description><![CDATA[<p>Tag size</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>title</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $title</string><docblock><description><![CDATA[<p>Title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>album</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $album</string><docblock><description><![CDATA[<p>Album title</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>artist</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $artist</string><docblock><description><![CDATA[<p>Artist</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>year</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $year</string><docblock><description><![CDATA[<p>Year</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>comment</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $comment</string><docblock><description><![CDATA[<p>Comment</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>track</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $track</string><docblock><description><![CDATA[<p>The track number</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>genre</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $genre</string><docblock><description><![CDATA[<p>Genre</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>fileIdentifier</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $fileIdentifier</string><docblock><description><![CDATA[<p>File identifier</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>stream</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $stream</string><docblock><description><![CDATA[<p>Stream reader</p>]]></description><var><![CDATA[StreamReader]]></var></docblock></property><property><name>head</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $head</string><docblock><description><![CDATA[<p>Head, first 10 bytes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tag</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tag</string><docblock><description><![CDATA[<p>The ID3 tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock><description><![CDATA[<p>The real file</p>]]></description><var><![CDATA[File]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The version</p>]]></description><var><![CDATA[Version]]></var></docblock></property><property><name>GENRES</name><value><![CDATA[array (
  0 => 'Blues',
  1 => 'Classic Rock',
  2 => 'Country',
  3 => 'Dance',
  4 => 'Disco',
  5 => 'Funk',
  6 => 'Grunge',
  7 => 'Hip-Hop',
  8 => 'Jazz',
  9 => 'Metal',
  10 => 'New Age',
  11 => 'Oldies',
  12 => 'Other',
  13 => 'Pop',
  14 => 'R&B',
  15 => 'Rap',
  16 => 'Reggae',
  17 => 'Rock',
  18 => 'Techno',
  19 => 'Industrial',
  20 => 'Alternative',
  21 => 'Ska',
  22 => 'Death Metal',
  23 => 'Pranks',
  24 => 'Soundtrack',
  25 => 'Euro-Techno',
  26 => 'Ambient',
  27 => 'Trip-Hop',
  28 => 'Vocal',
  29 => 'Jazz+Funk',
  30 => 'Fusion',
  31 => 'Trance',
  32 => 'Classical',
  33 => 'Instrumental',
  34 => 'Acid',
  35 => 'House',
  36 => 'Game',
  37 => 'Sound Clip',
  38 => 'Gospel',
  39 => 'Noise',
  40 => 'AlternRock',
  41 => 'Bass',
  42 => 'Soul',
  43 => 'Punk',
  44 => 'Space',
  45 => 'Meditative',
  46 => 'Instrumental Pop',
  47 => 'Instrumental Rock',
  48 => 'Ethnic',
  49 => 'Gothic',
  50 => 'Darkwave',
  51 => 'Techno-Industrial',
  52 => 'Electronic',
  53 => 'Pop-Folk',
  54 => 'Eurodance',
  55 => 'Dream',
  56 => 'Southern Rock',
  57 => 'Comedy',
  58 => 'Cult',
  59 => 'Gangsta',
  60 => 'Top 40',
  61 => 'Christian Rap',
  62 => 'Pop/Funk',
  63 => 'Jungle',
  64 => 'Native American',
  65 => 'Cabaret',
  66 => 'New Wave',
  67 => 'Psychadelic',
  68 => 'Rave',
  69 => 'Showtunes',
  70 => 'Trailer',
  71 => 'Lo-Fi',
  72 => 'Tribal',
  73 => 'Acid Punk',
  74 => 'Acid Jazz',
  75 => 'Polka',
  76 => 'Retro',
  77 => 'Musical',
  78 => 'Rock & Roll',
  79 => 'Hard Rock',
  80 => 'Folk',
  81 => 'Folk-Rock',
  82 => 'National Folk',
  83 => 'Swing',
  84 => 'Fast Fusion',
  85 => 'Bebob',
  86 => 'Latin',
  87 => 'Revival',
  88 => 'Celtic',
  89 => 'Bluegrass',
  90 => 'Avantgarde',
  91 => 'Gothic Rock',
  92 => 'Progressive Rock',
  93 => 'Psychedelic Rock',
  94 => 'Symphonic Rock',
  95 => 'Slow Rock',
  96 => 'Big Band',
  97 => 'Chorus',
  98 => 'Easy Listening',
  99 => 'Acoustic',
  100 => 'Humour',
  101 => 'Speech',
  102 => 'Chanson',
  103 => 'Opera',
  104 => 'Chamber Music',
  105 => 'Sonata',
  106 => 'Symphony',
  107 => 'Booty Bass',
  108 => 'Primus',
  109 => 'Porn Groove',
  110 => 'Satire',
  111 => 'Slow Jam',
  112 => 'Club',
  113 => 'Tango',
  114 => 'Samba',
  115 => 'Folklore',
  116 => 'Ballad',
  117 => 'Power Ballad',
  118 => 'Rhythmic Soul',
  119 => 'Freestyle',
  120 => 'Duet',
  121 => 'Punk Rock',
  122 => 'Drum Solo',
  123 => 'A capella',
  124 => 'Euro-House',
  125 => 'Dance Hall',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $GENRES</string><docblock><description><![CDATA[<p>ID3 genre list. Genres beyond 79 are Winamp extensions</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>ID3v2AsID3v1</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class ID3v2AsID3v1 extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception for when a tag is misversioned as version 1 but really is
a version 2 tag.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>ID3Exception</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class ID3Exception extends Exception</string><implements/><docblock><description><![CDATA[<p>General ID3 exception class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Media]]></package></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace><namespace name="Parser" path="Parser"><module><name>Docblock.php</name><path>Parser/Docblock.php</path><namespace>Parser</namespace><classpath>Parser.Docblock</classpath><docblock><description><![CDATA[<p>A simple docblock parser</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.1]]></version><package><![CDATA[Parser]]></package><subpackage><![CDATA[Docblock]]></subpackage><uses><use><types><type><![CDATA[<a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=STXMarkdown#class-STXMarkdown'>STXMarkdown</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>DocblockParser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class DocblockParser</string><implements/><docblock><description><![CDATA[<p>A simple dockblock parser that pulls out the docblock description and
docblock tags.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Docblock]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>public __construct()</string><docblock><description><![CDATA[<p>Constructor</p>]]></description></docblock><params/></method><method><name>Keywords</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DocblockParser</declaring-class><inherited/><string>public static Keywords()</string><docblock><description><![CDATA[<p>Returns the keywords array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>StaticFilesLocation</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DocblockParser</declaring-class><inherited/><string>public static StaticFilesLocation([$index [, $value]])</string><docblock><description><![CDATA[<p>To save loading and processor time we can preparse example, tutorial and
source files. We store directory references here if they are set.</p>

<p>Avilable indexes are:</p>

<ul>
<li>EXAMPLE_SOURCE  > Were the original example files are</li>
<li>EXAMPLE_RESULT  > Where to put the parsed example files</li>
<li>SOURCE_RESULT   > Where to put parsed source code files</li>
<li>TUTORIAL_SOURCE > Where the orginal tutorial files are</li>
<li>TUTORIAL_RESULT > Where to put the parsed tutorial files</li>
</ul>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[<p>What directory to set the value for</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The path to the directory</p>]]></description></param></params><return><types><type><![CDATA[void]]></type><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[<ul>
<li>If no arguments is passed the <a href='?__plibclass=DocblockParser#property-STATIC_DIRS'>DocblockParser::$STATIC_DIRS</a> will
be returned.</li>
<li>If only the index is passed the value of that index will be returned if
it is set or false will be returned</li>
<li>If both index and value is passed the value will be assigned to the
index in the array.</li>
</ul>]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>public Parse($in)</string><docblock><description><![CDATA[<p>Parse the block comment</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>scan</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>protected scan()</string><docblock><description><![CDATA[<p>Scan the block comment for description and tags.</p>]]></description></docblock><params/></method><method><name>isKeyword</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>private isKeyword($pos)</string><docblock><description><![CDATA[<p>Checks if the @ sign at position $pos is a tag or not.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[<p>If @ is a keyword the keyword is returned else false is returned</p>]]></description></return></docblock><params><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param></params></method><method><name>fixStars</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>private fixStars($in)</string><docblock><description><![CDATA[<p>Strips all leading asterics.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>GetTopLevelBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DocblockParser</declaring-class><inherited/><string>public static GetTopLevelBlock($in)</string><docblock><description><![CDATA[<p>Pulls out the top level docblock from a file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[<p>Can either be a file reference or file contents.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>GetClassConstBLock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DocblockParser</declaring-class><inherited/><string>public static GetClassConstBLock($className, $file)</string><docblock/><params><param><name>className</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$className</string></param><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>DocblockData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>public DocblockData()</string><docblock><description><![CDATA[<p>Returns the map array with description and found tags</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockParser</declaring-class><inherited/><string>public __get($key)</string><docblock><description><![CDATA[<p>Magic getter.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method></methods><properties><property><name>STATIC_DIRS</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $STATIC_DIRS</string><docblock><description><![CDATA[<p>To save loading and processor time we can preparse example, tutorial and
source files. We store directory references here if they are set.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=DocblockParser#method-StaticFilesLocation'>DocblockParser::StaticFilesLocation()</a>]]></type></types><description><![CDATA[]]></description></see><var><![CDATA[array]]></var></docblock></property><property><name>keywords</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static>1</static><type>null</type><string>private static $keywords</string><docblock><description><![CDATA[<p>Keywords to treat at docblock tags</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dockblock</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $dockblock</string><docblock><description><![CDATA[<p>The actual comment</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblockDescription</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $docblockDescription</string><docblock><description><![CDATA[<p>All text preceeding the first docblock tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>map</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $map</string><docblock><description><![CDATA[<p>Container for found tags</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>classConstants</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $classConstants</string><docblock/></property></properties></class><class><name>DocblockTagParser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class DocblockTagParser</string><implements/><docblock><description><![CDATA[<p>Parses the docblock tags, i.e stuff beginning with @ followed by anything
in <a href='?__plibclass=DocblockParser#property-keywords'>DocblockParser::$keywords</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Docblock]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>public __construct()</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description></docblock><params/></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>public Parse($tag, $value)</string><docblock><description><![CDATA[<p>Parse a docblock tag.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=DocblockTagParser#property-tag'>DocblockTagParser::$tag</a>]]></type></types><description><![CDATA[<p>$tag</p>]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=DocblockTagParser#property-value'>DocblockTagParser::$value</a>]]></type></types><description><![CDATA[<p>$value</p>]]></description></use></uses><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parseExampleFile</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseExampleFile($file)</string><docblock><description><![CDATA[<p>Parse an example file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>GetRefs</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>DocblockTagParser</declaring-class><inherited/><string>public static GetRefs()</string><docblock><description><![CDATA[<p>Returns the <a href='?__plibclass=DocblockParser#property-'>DocblockParser::$parsedRefs</a> array.
Only useful for debugging.</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>parseTag</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseTag($data)</string><docblock><description><![CDATA[<p>Parse a generic docblock tag that can have:
Datatype[|Datatype] Description</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>parseParam</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseParam($param)</string><docblock><description><![CDATA[<p>Parse a docblock param tag.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>Has the following indexes</p>

<ul>
<li>type      => array with input type|s</li>
<li>variable  => name of the variable</li>
<li>descition => need explaination? ;)`</li>
</ul>

<p>So: <code>(at)param string|int $arg The input thing</code><br/>
would reult in:</p>

<pre>array(
  'type' => array(0 => 'string', 1 => 'int'),
  'variable => '$arg',
  'description' => 'The input thing'
)</pre>]]></description></return></docblock><params><param><name>param</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$param</string></param></params></method><method><name>parseDescription</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseDescription($desc [, $topara=1])</string><docblock><description><![CDATA[<p>Parse description. Can either be the full description part of a docblock
or description of a param or return type or what ever.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$desc]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$topara]]></variable><description><![CDATA[<p>Set to false if the data shouldn't be run through <a href='?__plibfunction=Markdown#function-Markdown'>Markdown()</a></p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>desc</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$desc</string></param><param><name>topara</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$topara=1</string></param></params></method><method><name>toPara</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected toPara($in)</string><docblock><description><![CDATA[<p>Applies {@link Markdown()} formatting and <a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a> to $in</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>fixCodeBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected fixCodeBlock($m)</string><docblock><description><![CDATA[<p>Callback function to regexp pattern matching in <a href='?__plibclass=DocblockTagParser#method-toPara'>DocblockTagParser::toPara()</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$m]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>m</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$m</string></param></params></method><method><name>inlineCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected inlineCallback($m)</string><docblock><description><![CDATA[<p>Callback function for regexp matching inline tags. <a href='?__plibclass=DocblockTagParser#method-parseDescription'>DocblockTagParser::parseDescription()</a></p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$m]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>m</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$m</string></param></params></method><method><name>parseReference</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseReference($ref [, $scan=1])</string><docblock><description><![CDATA[<p>Parse a reference. A reference is for instance a class or function in
contrast to regular URL.</p>]]></description><see><types><type><![CDATA[print()]]></type></types><description><![CDATA[<p>is a reference for instance.</p>]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$ref]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$scan]]></variable><description><![CDATA[<p>When not called from an inline tag don't bother with the first regexp.
  For instance when parsing see, depends and tags like that</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>ref</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$ref</string></param><param><name>scan</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$scan=1</string></param></params></method><method><name>parseURL</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected parseURL($url)</string><docblock><description><![CDATA[<p>Creates a clickable link from an URL.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>reflectOther</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected reflectOther($what [, $linktext])</string><docblock><description><![CDATA[<p>Tries to introspect a function or a constant.</p>

<p>If <a href='?__plibclass=DocblockTagParser#method-reflectClass'>DocblockTagParser::reflectClass()</a> cathes an exception, i.e
what was passed to it wasn't a class, it will pass the argument here
instead so we can ceck if it's a function, constant or what ever. If we
fail here we just ignore it, no need to throw an exception since it might
just be a typo or what ever in the docblock.</p>]]></description><todo><![CDATA[<p>We only handle functions here right now. Need to also handle
constants.</p>]]></todo><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$linktext]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>linktext</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$linktext</string></param></params></method><method><name>reflectClass</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>DocblockTagParser</declaring-class><inherited/><string>protected reflectClass($class, $instance, $type [, $linktext])</string><docblock><description><![CDATA[<p>Tries to introspect a class and it's members, methods and constants. If we
fail we relay to <a href='?__plibclass=DocblockTagParser#method-reflectOther'>DocblockTagParser::reflectOther()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[<p>Name of the class</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$instance]]></variable><description><![CDATA[<p>Name of member, method or constant</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>Context (class|member|method|constant)</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$linktext]]></variable><description><![CDATA[<p>The description part, if any, of a tag.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>class</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$class</string></param><param><name>instance</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$instance</string></param><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>linktext</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$linktext</string></param></params></method></methods><properties><property><name>tag</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $tag</string><docblock><description><![CDATA[<p>The tag to parse</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>value</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $value</string><docblock><description><![CDATA[<p>The value of the tag</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>keywords</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $keywords</string><docblock><description><![CDATA[<p><a href='?__plibclass=DocblockParser#property-keywords'>DocblockParser::$keywords</a></p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>strKeywords</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $strKeywords</string><docblock><description><![CDATA[<p>The kewords array joined by a | to a string. Used in the tag matching
regexp.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>inlineRegexp</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $inlineRegexp</string><docblock><description><![CDATA[<p>Regexp for finding inline tags.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>phpNetObjectLink</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $phpNetObjectLink</string><docblock><description><![CDATA[<p>Base link to search page on <a href="http://php.net">http://php.net</a> where to search for built-in
PHP classes. Unlike built-in functions classes can't be resolved on
php.net just by appending the name to the URL.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>phpNetFuncLink</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $phpNetFuncLink</string><docblock><description><![CDATA[<p>Base link to <a href="http://php.net">http://php.net</a>. When built-in functions are found the
function name is appended to this.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>stx</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $stx</string><docblock><description><![CDATA[<p>The <a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a> object to use for code highlighting.</p>]]></description><var><![CDATA[Syntaxer]]></var></docblock></property><property><name>stxmd</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $stxmd</string><docblock><description><![CDATA[<p>The <a href='?__plibclass=STXMarkdown#class-STXMarkdown'>STXMarkdown</a> object to use for highlighting tutorial files.</p>]]></description><var><![CDATA[STXMarkdown]]></var></docblock></property><property><name>skipType</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $skipType</string><docblock><description><![CDATA[<p>Don't bother reflect these datatypes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parsedExamples</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $parsedExamples</string><docblock><description><![CDATA[<p>Stores parsed example files so we don't need to parse the same file
more than once.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parsedRefs</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $parsedRefs</string><docblock><description><![CDATA[<p>Stores reflected functions, classes and so on.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>syntaxer</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>unknown</type><string>public static $syntaxer</string><docblock><description><![CDATA[<p>Syntaxer object to use other than the default</p>]]></description><var><![CDATA[Syntaxer]]></var></docblock></property></properties></class></module><module><name>HTML2.php</name><path>Parser/HTML2.php</path><namespace>Parser</namespace><classpath>Parser.HTML2</classpath><docblock><description><![CDATA[<p>Description goes here...</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author></docblock><class><name>HTMLParser2</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTMLParser2</string><implements/><docblock><description><![CDATA[<p>Description goes here...</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser2</declaring-class><inherited/><string>public __construct()</string><docblock/><params/></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser2</declaring-class><inherited/><string>public Parse($html)</string><docblock/><params><param><name>html</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$html</string></param></params></method><method><name>walk</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser2</declaring-class><inherited/><string>private walk($node)</string><docblock/><params><param><name>node</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$node</string></param></params></method><method><name>indent</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser2</declaring-class><inherited/><string>private indent()</string><docblock/><params/></method></methods><properties><property><name>contCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $contCB</string><docblock/></property><property><name>tagCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tagCB</string><docblock/></property><property><name>entCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $entCB</string><docblock/></property><property><name>dataCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $dataCB</string><docblock/></property><property><name>allTagCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $allTagCB</string><docblock/></property><property><name>doc</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $doc</string><docblock/></property><property><name>level</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $level</string><docblock/></property></properties></class></module><module><name>HTML.php</name><path>Parser/HTML.php</path><namespace>Parser</namespace><classpath>Parser.HTML</classpath><docblock><description><![CDATA[<p>HTML parser</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><version><![CDATA[0.1]]></version></docblock><class><name>HTMLParser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTMLParser</string><implements/><docblock><description><![CDATA[<p>HTML parser class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><version><![CDATA[0.1]]></version><todo><![CDATA[<p>Doesn't handle nested stuff. Need to make the parser recursive.</p>]]></todo></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public __construct()</string><docblock/><params/></method><method><name>AddTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public AddTag($tag, $cb)</string><docblock><description><![CDATA[<p>Add action to take place when tag $tag is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span>&#160;<span style='color: #990000;'><b>$attributes</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>AddTags</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public AddTags($cbs)</string><docblock><description><![CDATA[<p>Add one ore more tag callbacks at once. The argument should
be an associative array with the key/value should be tag/callback.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=HTMLParser#method-AddTag'>HTMLParser::AddTag()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$cbs]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cbs</name><value/><reference/><optional/><class/><array/><nullable/><string>$cbs</string></param></params></method><method><name>AddContainer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public AddContainer($tag, $cb)</string><docblock><description><![CDATA[<p>Add action to take place when container tag $tag is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>array</b></span>&#160;<span style='color: #990000;'><b>$attributes</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$content</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>AddContainers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public AddContainers($cbs)</string><docblock><description><![CDATA[<p>Add one ore more container tag callbacks at once. The argument should
be an associative array with the key/value should be tag/callback.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=HTMLParser#method-AddContainer'>HTMLParser::AddContainer()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$cbs]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cbs</name><value/><reference/><optional/><class/><array/><nullable/><string>$cbs</string></param></params></method><method><name>SetDataCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public SetDataCallback($cb)</string><docblock><description><![CDATA[<p>Add action to take place when tag data is encountered.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$content</b></span><span style='color: #0000FF;'>)</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>SetEntityCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public SetEntityCallback($cb)</string><docblock><description><![CDATA[<p>Set callback for entities.
The callback function will be called with the following arguments:</p>

<div class='code'><code>callback<span style='color: #0000FF;'>(</span>HTMLParser&#160;<span style='color: #990000;'><b>$p</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #000099;'><b>string</b></span>&#160;<span style='color: #990000;'><b>$entity</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>SetTagCallback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public SetTagCallback($cb)</string><docblock><description><![CDATA[<p>Set callback for all tags</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cb]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>cb</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cb</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Render([$return=1])</string><docblock><description><![CDATA[<p>Render the stack of parsed data. Note that <a href='?__plibclass=HTMLParser#method-Parse'>HTMLParser::Parse()</a>
must be called prior to this method. Since <a href='?__plibclass=HTMLParser#method-Parse'>HTMLParser::Parse()</a>
returns the HTMLParser object it self the call can be chained like:</p>

<div class='code'><code><span style='color: #990000;'><b>$result</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$parser</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Parse<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Render<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$return]]></variable><description><![CDATA[<p>If true the each <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a> and result from eventual callbacks
  will be added to a buffer which will then be returned. If you only want
  to parse the data and have no interest in the original HTML you should
  set this to false since that will both speed things up and keep the
  memory consuption down.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>return</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$return=1</string></param></params></method><method><name>GetEndTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public GetEndTag(HTMLElement $e)</string><docblock><description><![CDATA[<p>Tries to find the end tag of $e.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If $e is not a container tag</p>]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>e</name><value/><reference/><optional/><class>HTMLElement</class><array/><nullable/><string>HTMLElement $e</string></param></params></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public GetContent(HTMLElement $e [, $getEndTag])</string><docblock><description><![CDATA[<p>Tries to collect the content of a container tag.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><variable><![CDATA[$e]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$getEndTag]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[<p>if $getEndTag is true an array will be returned where the first index
  is the content and the second the end tag it self (HTMLElement).</p>]]></description></return></docblock><params><param><name>e</name><value/><reference/><optional/><class>HTMLElement</class><array/><nullable/><string>HTMLElement $e</string></param><param><name>getEndTag</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$getEndTag</string></param></params></method><method><name>Current</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Current()</string><docblock><description><![CDATA[<p>Returns the current HTMLElement during <a href='?__plibclass=HTMLParser#method-Render'>HTMLParser::Render()</a></p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Stack</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Stack()</string><docblock><description><![CDATA[<p>Returns the stack of <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a>s.</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>TagName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public TagName()</string><docblock><description><![CDATA[<p>Returns the current tag name during <a href='?__plibclass=HTMLParser#method-Render'>HTMLParser::Render()</a></p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Context</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Context()</string><docblock><description><![CDATA[<p>Returns the current context</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Tag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Tag()</string><docblock><description><![CDATA[<p>Returns the current full tag, i.e. <code>&lt;span class='date'&gt;</code></p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public Parse($str)</string><docblock><description><![CDATA[<p>Parse the $str. To get the result of the parse call
<a href='?__plibclass=HTMLParser#method-Render'>HTMLParser::Render()</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=HTMLParser#class-HTMLParser'>HTMLParser</a>]]></type></types><description><![CDATA[<p>Returns this instance</p>]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>scan</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private scan()</string><docblock><description><![CDATA[<p>Scan the data</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>isComment</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private isComment($str, $pos)</string><docblock><description><![CDATA[<p>Checks if the current position in $str is the beginning of a comment.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[<p>The offset where to start searching from.</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param></params></method><method><name>isCDATA</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private isCDATA($str, $pos)</string><docblock><description><![CDATA[<p>Checks if the current position in $str is the beginning of a CDATA section.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param></params></method><method><name>find</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private find($what, $start)</string><docblock><description><![CDATA[<p>Fint the position of $what in $this->data.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$start]]></variable><description><![CDATA[<p>The offset to start searching from</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>start</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$start</string></param></params></method><method><name>parseTagName</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private parseTagName($in)</string><docblock><description><![CDATA[<p>Finds the tag name in a full tag. <code>&lt;div class='wrapper'&gt;</code> will return
<code>div</code>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>parseTagAttributes</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private parseTagAttributes($in)</string><docblock><description><![CDATA[<p>Parse tag attributes.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>The found attributes. It's an assoc array where the attribute name is
  the key and the attribute value is the value.</p>]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>skipWhites</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private skipWhites($in, $begin)</string><docblock><description><![CDATA[<p>Moves the offset in string $in to the first non-whitespace character.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$begin]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param><param><name>begin</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$begin</string></param></params></method><method><name>parseEntities</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private parseEntities($in)</string><docblock><description><![CDATA[<p>Parse entities.
Found entities and surrounding data will be put on the stack when found.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>pStack</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>private pStack($type [, $value [, $attr [, $byte]]])</string><docblock><description><![CDATA[<p>Creates a new <a href='?__plibclass=HTMLElement#class-HTMLElement'>HTMLElement</a> and puts it on the stack.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The name of a tag or the content if it's data or the entire entity if an
  entity.</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$byte]]></variable><description><![CDATA[<p>The offset where the element begin.</p>]]></description></param></params></docblock><params><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param><param><name>byte</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$byte</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLParser</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Renders the stack into a string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>stack</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stack</string><docblock/></property><property><name>stacklen</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stacklen</string><docblock/></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $data</string><docblock/></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $length</string><docblock/></property><property><name>tag</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tag</string><docblock/></property><property><name>tagname</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tagname</string><docblock/></property><property><name>tagargs</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tagargs</string><docblock/></property><property><name>ctx</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $ctx</string><docblock/></property><property><name>byte</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $byte</string><docblock/></property><property><name>current</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $current</string><docblock/></property><property><name>contCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $contCB</string><docblock/></property><property><name>tagCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tagCB</string><docblock/></property><property><name>entCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $entCB</string><docblock/></property><property><name>dataCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $dataCB</string><docblock/></property><property><name>allTagCB</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $allTagCB</string><docblock/></property></properties></class><class><name>HTMLElement</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTMLElement</string><implements/><docblock/><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLElement</declaring-class><inherited/><string>public __construct($type, $value [, $attr [, $position [, $byte]]])</string><docblock/><params><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param><param><name>position</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$position</string></param><param><name>byte</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$byte</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTMLElement</declaring-class><inherited/><string>public __toString()</string><docblock/><params/></method></methods><properties><property><name>byte</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $byte</string><docblock/></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $type</string><docblock/></property><property><name>position</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $position</string><docblock/></property><property><name>value</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $value</string><docblock/></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $attributes</string><docblock/></property></properties></class><function><name>dbg</name><internal/><reference/><string>dbg($a)</string><docblock/><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$a</string></param></params></function></module><namespace name="Parser.Markdown" path="Parser/Markdown"><module><name>markdown.php</name><path>Parser/Markdown/markdown.php</path><namespace>Parser.Markdown</namespace><classpath>Parser.Markdown.markdown</classpath><docblock><description><![CDATA[<p>Markdown Extra  -  A text-to-HTML conversion tool for web writers</p>

<p>PHP Markdown &amp; Extra
Copyright (c) 2004-2007 Michel Fortin
<a href="http://www.michelf.com/projects/php-markdown/">http://www.michelf.com/projects/php-markdown/</a></p>

<p>Original Markdown
Copyright (c) 2004-2006 John Gruber
<a href="http://daringfireball.net/projects/markdown/">http://daringfireball.net/projects/markdown/</a></p>]]></description><author><![CDATA[Michel Fortin]]></author><author><![CDATA[John Gruber]]></author><copyright><![CDATA[2004-2007 Michel Fortin]]></copyright><copyright><![CDATA[2004-2006 John Gruber]]></copyright><package><![CDATA[Parser]]></package><subpackage><![CDATA[Markdown]]></subpackage></docblock><class><name>Markdown_Parser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Markdown_Parser</string><implements/><docblock/><methods><method><name>Markdown_Parser</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public Markdown_Parser()</string><docblock/><params/></method><method><name>transform</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public transform($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>stripLinkDefinitions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public stripLinkDefinitions($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripLinkDefinitions_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _stripLinkDefinitions_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>hashHTMLBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public hashHTMLBlocks($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_hashHTMLBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _hashHTMLBlocks_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>hashBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public hashBlock($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>hashSpan</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public hashSpan($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public runBlockGamut($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBasicBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public runBasicBlockGamut($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHorizontalRules</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doHorizontalRules($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runSpanGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public runSpanGamut($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHardBreaks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doHardBreaks($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>escapeSpecialCharsWithinTagAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public escapeSpecialCharsWithinTagAttributes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAnchors</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doAnchors($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAnchors_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doAnchors_reference_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAnchors_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doAnchors_inline_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doImages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doImages($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doImages_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doImages_reference_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doImages_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doImages_inline_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doHeaders</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doHeaders($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doHeaders_callback_setext_h1</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doHeaders_callback_setext_h1($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_setext_h2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doHeaders_callback_setext_h2($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_atx</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doHeaders_callback_atx($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doLists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doLists($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doLists_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doLists_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>processListItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public processListItems($list_str, $marker_any)</string><docblock/><params><param><name>list_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$list_str</string></param><param><name>marker_any</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$marker_any</string></param></params></method><method><name>_processListItems_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _processListItems_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doCodeBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doCodeBlocks($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doCodeBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doCodeBlocks_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doCodeSpans</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doCodeSpans($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doCodeSpans_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doCodeSpans_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public encodeCode($_)</string><docblock/><params><param><name>_</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$_</string></param></params></method><method><name>doItalicsAndBold</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doItalicsAndBold($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doItalicAndBold_em_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doItalicAndBold_em_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doItalicAndBold_strong_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doItalicAndBold_strong_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doBlockQuotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doBlockQuotes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doBlockQuotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doBlockQuotes_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doBlockQuotes_callback2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doBlockQuotes_callback2($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>formParagraphs</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public formParagraphs($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>encodeAmpsAndAngles</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public encodeAmpsAndAngles($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>encodeBackslashEscapes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public encodeBackslashEscapes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAutoLinks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public doAutoLinks($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAutoLinks_url_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doAutoLinks_url_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAutoLinks_email_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _doAutoLinks_email_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeEmailAddress</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public encodeEmailAddress($addr)</string><docblock/><params><param><name>addr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$addr</string></param></params></method><method><name>unescapeSpecialChars</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public unescapeSpecialChars($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>tokenizeHTML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public tokenizeHTML($str)</string><docblock/><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>outdent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public outdent($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>detab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public detab($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_initDetab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public _initDetab()</string><docblock/><params/></method><method><name>unhash</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited/><string>public unhash($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method></methods><properties><property><name>nested_brackets_depth</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets_depth</string><docblock/></property><property><name>nested_brackets</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets</string><docblock/></property><property><name>escape_chars</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_chars</string><docblock/></property><property><name>escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_table</string><docblock/></property><property><name>backslash_escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $backslash_escape_table</string><docblock/></property><property><name>empty_element_suffix</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $empty_element_suffix</string><docblock/></property><property><name>tab_width</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $tab_width</string><docblock/></property><property><name>urls</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $urls</string><docblock/></property><property><name>titles</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $titles</string><docblock/></property><property><name>html_blocks</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_blocks</string><docblock/></property><property><name>html_hashes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_hashes</string><docblock/></property><property><name>document_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $document_gamut</string><docblock/></property><property><name>block_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $block_gamut</string><docblock/></property><property><name>span_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $span_gamut</string><docblock/></property><property><name>list_level</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $list_level</string><docblock/></property><property><name>utf8_strlen</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $utf8_strlen</string><docblock/></property></properties></class><class><name>MarkdownExtra_Parser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Markdown_Parser</extends><string>class MarkdownExtra_Parser extends Markdown_Parser</string><implements/><docblock/><methods><method><name>MarkdownExtra_Parser</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public MarkdownExtra_Parser()</string><docblock/><params/></method><method><name>transform</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public transform($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>hashHTMLBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public hashHTMLBlocks($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_hashHTMLBlocks_inMarkdown</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _hashHTMLBlocks_inMarkdown($text [, $indent [, $enclosing_tag [, $span]]])</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>indent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$indent</string></param><param><name>enclosing_tag</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$enclosing_tag</string></param><param><name>span</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$span</string></param></params></method><method><name>_hashHTMLBlocks_inHTML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _hashHTMLBlocks_inHTML($text, $hash_method, $md_attr)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>hash_method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hash_method</string></param><param><name>md_attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$md_attr</string></param></params></method><method><name>hashClean</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public hashClean($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHeaders</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doHeaders($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doHeaders_attr</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doHeaders_attr($attr)</string><docblock/><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>_doHeaders_callback_setext_h1</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doHeaders_callback_setext_h1($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_setext_h2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doHeaders_callback_setext_h2($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_atx</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doHeaders_callback_atx($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doTables</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doTables($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doTable_leadingPipe_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doTable_leadingPipe_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doTable_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doTable_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doDefLists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doDefLists($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doDefLists_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doDefLists_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>processDefListItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public processDefListItems($list_str)</string><docblock/><params><param><name>list_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$list_str</string></param></params></method><method><name>_processDefListItems_callback_dt</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _processDefListItems_callback_dt($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_processDefListItems_callback_dd</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _processDefListItems_callback_dd($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doItalicsAndBold</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doItalicsAndBold($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>formParagraphs</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public formParagraphs($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>stripFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public stripFootnotes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripFootnotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _stripFootnotes_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doFootnotes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>appendFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public appendFootnotes($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_appendFootnotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _appendFootnotes_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>stripAbbreviations</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public stripAbbreviations($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripAbbreviations_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _stripAbbreviations_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doAbbreviations</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public doAbbreviations($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAbbreviations_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited/><string>public _doAbbreviations_callback($matches)</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>Markdown_Parser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public Markdown_Parser() inherited from Markdown_Parser</string><docblock/><params/></method><method><name>stripLinkDefinitions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public stripLinkDefinitions($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripLinkDefinitions_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _stripLinkDefinitions_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_hashHTMLBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _hashHTMLBlocks_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>hashBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public hashBlock($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>hashSpan</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public hashSpan($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runBlockGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBasicBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runBasicBlockGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHorizontalRules</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doHorizontalRules($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runSpanGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runSpanGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHardBreaks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doHardBreaks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>escapeSpecialCharsWithinTagAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public escapeSpecialCharsWithinTagAttributes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAnchors</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doAnchors($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAnchors_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAnchors_reference_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAnchors_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAnchors_inline_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doImages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doImages($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doImages_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doImages_reference_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doImages_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doImages_inline_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doLists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doLists($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doLists_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doLists_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>processListItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public processListItems($list_str, $marker_any) inherited from Markdown_Parser</string><docblock/><params><param><name>list_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$list_str</string></param><param><name>marker_any</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$marker_any</string></param></params></method><method><name>_processListItems_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _processListItems_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doCodeBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doCodeBlocks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doCodeBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doCodeBlocks_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doCodeSpans</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doCodeSpans($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doCodeSpans_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doCodeSpans_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeCode($_) inherited from Markdown_Parser</string><docblock/><params><param><name>_</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$_</string></param></params></method><method><name>_doItalicAndBold_em_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doItalicAndBold_em_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doItalicAndBold_strong_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doItalicAndBold_strong_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doBlockQuotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doBlockQuotes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doBlockQuotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doBlockQuotes_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doBlockQuotes_callback2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doBlockQuotes_callback2($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeAmpsAndAngles</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeAmpsAndAngles($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>encodeBackslashEscapes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeBackslashEscapes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAutoLinks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doAutoLinks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAutoLinks_url_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAutoLinks_url_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAutoLinks_email_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAutoLinks_email_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeEmailAddress</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeEmailAddress($addr) inherited from Markdown_Parser</string><docblock/><params><param><name>addr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$addr</string></param></params></method><method><name>unescapeSpecialChars</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public unescapeSpecialChars($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>tokenizeHTML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public tokenizeHTML($str) inherited from Markdown_Parser</string><docblock/><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>outdent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public outdent($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>detab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public detab($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_initDetab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _initDetab() inherited from Markdown_Parser</string><docblock/><params/></method><method><name>unhash</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public unhash($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method></methods><properties><property><name>fn_id_prefix</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_id_prefix</string><docblock/></property><property><name>fn_link_title</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_link_title</string><docblock/></property><property><name>fn_backlink_title</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_backlink_title</string><docblock/></property><property><name>fn_link_class</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_link_class</string><docblock/></property><property><name>fn_backlink_class</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_backlink_class</string><docblock/></property><property><name>footnotes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $footnotes</string><docblock/></property><property><name>footnotes_ordered</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $footnotes_ordered</string><docblock/></property><property><name>abbr_desciptions</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $abbr_desciptions</string><docblock/></property><property><name>abbr_matches</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $abbr_matches</string><docblock/></property><property><name>html_cleans</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_cleans</string><docblock/></property><property><name>block_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $block_tags</string><docblock/></property><property><name>context_block_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $context_block_tags</string><docblock/></property><property><name>contain_span_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $contain_span_tags</string><docblock/></property><property><name>clean_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $clean_tags</string><docblock/></property><property><name>auto_close_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $auto_close_tags</string><docblock/></property><property><name>nested_brackets_depth</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets_depth</string><docblock/></property><property><name>nested_brackets</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets</string><docblock/></property><property><name>escape_chars</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_chars</string><docblock/></property><property><name>escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_table</string><docblock/></property><property><name>backslash_escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $backslash_escape_table</string><docblock/></property><property><name>empty_element_suffix</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $empty_element_suffix</string><docblock/></property><property><name>tab_width</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $tab_width</string><docblock/></property><property><name>urls</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $urls</string><docblock/></property><property><name>titles</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $titles</string><docblock/></property><property><name>html_blocks</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_blocks</string><docblock/></property><property><name>html_hashes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_hashes</string><docblock/></property><property><name>document_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $document_gamut</string><docblock/></property><property><name>block_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $block_gamut</string><docblock/></property><property><name>span_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $span_gamut</string><docblock/></property><property><name>list_level</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $list_level</string><docblock/></property><property><name>utf8_strlen</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $utf8_strlen</string><docblock/></property></properties></class><function><name>Markdown</name><internal/><reference/><string>Markdown($text)</string><docblock><description><![CDATA[<p>Markdown Extra  -  A text-to-HTML conversion tool for web writers</p>

<p>PHP Markdown &amp; Extra
Copyright (c) 2004-2007 Michel Fortin
<a href="http://www.michelf.com/projects/php-markdown/">http://www.michelf.com/projects/php-markdown/</a></p>

<p>Original Markdown
Copyright (c) 2004-2006 John Gruber
<a href="http://daringfireball.net/projects/markdown/">http://daringfireball.net/projects/markdown/</a></p>]]></description><author><![CDATA[Michel Fortin]]></author><author><![CDATA[John Gruber]]></author><copyright><![CDATA[2004-2007 Michel Fortin]]></copyright><copyright><![CDATA[2004-2006 John Gruber]]></copyright><package><![CDATA[Parser]]></package><subpackage><![CDATA[Markdown]]></subpackage></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></function><function><name>identify_modifier_markdown</name><internal/><reference/><string>identify_modifier_markdown()</string><docblock/><params/></function><function><name>smarty_modifier_markdown</name><internal/><reference/><string>smarty_modifier_markdown($text)</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></function></module></namespace><namespace name="Parser.Syntaxer" path="Parser/Syntaxer"><module><name>STXMarkdown.php</name><path>Parser/Syntaxer/STXMarkdown.php</path><namespace>Parser.Syntaxer</namespace><classpath>Parser.Syntaxer.STXMarkdown</classpath><docblock><description><![CDATA[<p>STXMarkdown extends the Markdown class to enable codeblocks to be
highlighted by the syntax highlighter class <a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a></p>

<p>NOTE! This is not a standalone class but depends on two other classes:</p>

<ul>
<li><p>PHP Markdown &amp; Extra by Michel Fortin
<a href="http://www.michelf.com/projects/php-markdown/">http://www.michelf.com/projects/php-markdown/</a></p></li>
<li><p>Syntaxer by Pontus Ãstlund
<a href="http://www.poppa.se/projects/syntaxer/">http://www.poppa.se/projects/syntaxer/</a></p></li>
</ul>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[1.1]]></version><package><![CDATA[Parser]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=MarkdownExtra_Parser#class-MarkdownExtra_Parser'>MarkdownExtra_Parser</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>STXMarkdown</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>MarkdownExtra_Parser</extends><string>class STXMarkdown extends MarkdownExtra_Parser</string><implements/><docblock><description><![CDATA[<p>The STXMarkdown class</p>

<ul>
<li><p>Either open up markdown.php and change the value of the constant
MARKDOWN_PARSER_CLASS to STXMarkdown</p></li>
<li><p>Or use this function instead:</p></li>
</ul>

<div class='code'><code>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>function</b></span>&#160;MyMarkdown<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$text</b></span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>static</b></span>&#160;<span style='color: #990000;'><b>$parser</b></span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>!</span><span style='color: #000099;'><b>isset</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$parser</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$parser</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;STXMarkdown<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>return</b></span>&#160;<span style='color: #990000;'><b>$parser</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>transform<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$text</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>}</span><br/>&#160;&#160;&#160;&#160;<br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Syntaxer]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>STXMarkdown</declaring-class><inherited/><string>public __construct([$stxpath [, $stxcachepath]])</string><docblock><description><![CDATA[<p>Constructor
Here we just initialize the parent class</p>]]></description></docblock><params><param><name>stxpath</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$stxpath</string></param><param><name>stxcachepath</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$stxcachepath</string></param></params></method><method><name>_doCodeBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>STXMarkdown</declaring-class><inherited/><string>public _doCodeBlocks_callback($matches)</string><docblock><description><![CDATA[<p>This method overrides the Markdown class that takes care of codeblocks.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=MarkdownExtra_Parser#method-_doCodeBlocks_callback'>MarkdownExtra_Parser::_doCodeBlocks_callback()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$matches]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>Hilite</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>STXMarkdown</declaring-class><inherited/><string>public Hilite($in)</string><docblock><description><![CDATA[<p>Do the actual highlighting.</p>

<p>Some added fetures is that we at the top of the codeblock can specify
what laguage we're highlighting. We can also specify wether the code
should be treated as HTML ebedded or not. The default behaviour of the
syntax highlighter is to first determine if the language at hand is
an HTML embedded language or not. If it is no highlighting will be done
until the processing instruction is found. For PHP the case would be
<code>&lt;?</code> or <code>&lt;?php</code>.</p>

<p>If the highlighter is used in a blog or something similar mostly snippets
of code will be highlighted and thus you might not want to add the
processing instructions but rather treat the code an non-html embedded.</p>

<p>To accomplish this the text to be parsed could be formatted like this:</p>

<div class='code'><code>This&#160;is&#160;just&#160;some&#160;silly&#160;text&#160;that&#160;preceeds&#160;some&#160;silly&#160;example&#160;code<span style='color: #0000FF;'>:</span><br/>&#160;<br/><span style='color: #0099CC;'>#lang=php&#160;embedded=n</span><br/><span style='color: #990000;'><b>$some_var</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #008800;'>&#39;This&#160;is&#160;a&#160;string&#39;</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>echo</b></span>&#160;call_some_func<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$some_var</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>And&#160;here<span style='color: #0000FF;'>&#39;</span>s&#160;some&#160;silly&#160;text&#160;after&#160;the&#160;silly&#160;codeblock<span style='color: #0000FF;'>.</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>MarkdownExtra_Parser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public MarkdownExtra_Parser() inherited from MarkdownExtra_Parser</string><docblock/><params/></method><method><name>transform</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public transform($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>hashHTMLBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public hashHTMLBlocks($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_hashHTMLBlocks_inMarkdown</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _hashHTMLBlocks_inMarkdown($text [, $indent [, $enclosing_tag [, $span]]]) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>indent</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$indent</string></param><param><name>enclosing_tag</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$enclosing_tag</string></param><param><name>span</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$span</string></param></params></method><method><name>_hashHTMLBlocks_inHTML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _hashHTMLBlocks_inHTML($text, $hash_method, $md_attr) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>hash_method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$hash_method</string></param><param><name>md_attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$md_attr</string></param></params></method><method><name>hashClean</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public hashClean($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHeaders</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doHeaders($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doHeaders_attr</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doHeaders_attr($attr) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>_doHeaders_callback_setext_h1</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doHeaders_callback_setext_h1($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_setext_h2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doHeaders_callback_setext_h2($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doHeaders_callback_atx</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doHeaders_callback_atx($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doTables</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doTables($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doTable_leadingPipe_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doTable_leadingPipe_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doTable_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doTable_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doDefLists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doDefLists($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doDefLists_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doDefLists_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>processDefListItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public processDefListItems($list_str) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>list_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$list_str</string></param></params></method><method><name>_processDefListItems_callback_dt</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _processDefListItems_callback_dt($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_processDefListItems_callback_dd</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _processDefListItems_callback_dd($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doItalicsAndBold</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doItalicsAndBold($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>formParagraphs</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public formParagraphs($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>stripFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public stripFootnotes($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripFootnotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _stripFootnotes_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doFootnotes($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>appendFootnotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public appendFootnotes($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_appendFootnotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _appendFootnotes_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>stripAbbreviations</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public stripAbbreviations($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripAbbreviations_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _stripAbbreviations_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doAbbreviations</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public doAbbreviations($text) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAbbreviations_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MarkdownExtra_Parser</declaring-class><inherited>1</inherited><string>public _doAbbreviations_callback($matches) inherited from MarkdownExtra_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>Markdown_Parser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public Markdown_Parser() inherited from Markdown_Parser</string><docblock/><params/></method><method><name>stripLinkDefinitions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public stripLinkDefinitions($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_stripLinkDefinitions_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _stripLinkDefinitions_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_hashHTMLBlocks_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _hashHTMLBlocks_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>hashBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public hashBlock($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>hashSpan</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public hashSpan($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runBlockGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runBasicBlockGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runBasicBlockGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHorizontalRules</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doHorizontalRules($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>runSpanGamut</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public runSpanGamut($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doHardBreaks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doHardBreaks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>escapeSpecialCharsWithinTagAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public escapeSpecialCharsWithinTagAttributes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAnchors</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doAnchors($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAnchors_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAnchors_reference_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAnchors_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAnchors_inline_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doImages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doImages($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doImages_reference_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doImages_reference_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doImages_inline_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doImages_inline_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doLists</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doLists($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doLists_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doLists_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>processListItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public processListItems($list_str, $marker_any) inherited from Markdown_Parser</string><docblock/><params><param><name>list_str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$list_str</string></param><param><name>marker_any</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$marker_any</string></param></params></method><method><name>_processListItems_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _processListItems_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doCodeBlocks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doCodeBlocks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doCodeSpans</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doCodeSpans($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doCodeSpans_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doCodeSpans_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeCode($_) inherited from Markdown_Parser</string><docblock/><params><param><name>_</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$_</string></param></params></method><method><name>_doItalicAndBold_em_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doItalicAndBold_em_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doItalicAndBold_strong_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doItalicAndBold_strong_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>doBlockQuotes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doBlockQuotes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doBlockQuotes_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doBlockQuotes_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doBlockQuotes_callback2</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doBlockQuotes_callback2($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeAmpsAndAngles</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeAmpsAndAngles($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>encodeBackslashEscapes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeBackslashEscapes($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>doAutoLinks</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public doAutoLinks($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_doAutoLinks_url_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAutoLinks_url_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>_doAutoLinks_email_callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _doAutoLinks_email_callback($matches) inherited from Markdown_Parser</string><docblock/><params><param><name>matches</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$matches</string></param></params></method><method><name>encodeEmailAddress</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public encodeEmailAddress($addr) inherited from Markdown_Parser</string><docblock/><params><param><name>addr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$addr</string></param></params></method><method><name>unescapeSpecialChars</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public unescapeSpecialChars($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>tokenizeHTML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public tokenizeHTML($str) inherited from Markdown_Parser</string><docblock/><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>outdent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public outdent($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>detab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public detab($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method><method><name>_initDetab</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public _initDetab() inherited from Markdown_Parser</string><docblock/><params/></method><method><name>unhash</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Markdown_Parser</declaring-class><inherited>1</inherited><string>public unhash($text) inherited from Markdown_Parser</string><docblock/><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method></methods><properties><property><name>cache_map</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $cache_map</string><docblock><description><![CDATA[<p>Cache map for Syntaxer objects.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>stxpath</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stxpath</string><docblock><description><![CDATA[<p>The path where to look for .stx files</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>stxcachepath</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stxcachepath</string><docblock><description><![CDATA[<p>The path where to save the generated syntax maps</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tabsize</name><value><![CDATA[4]]></value><default>1</default><visibility>public</visibility><static>1</static><type>int</type><string>public static int $tabsize</string><docblock><description><![CDATA[<p>Set the tabsize in the Syntaxer parser</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>fn_id_prefix</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_id_prefix</string><docblock/></property><property><name>fn_link_title</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_link_title</string><docblock/></property><property><name>fn_backlink_title</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_backlink_title</string><docblock/></property><property><name>fn_link_class</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_link_class</string><docblock/></property><property><name>fn_backlink_class</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $fn_backlink_class</string><docblock/></property><property><name>footnotes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $footnotes</string><docblock/></property><property><name>footnotes_ordered</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $footnotes_ordered</string><docblock/></property><property><name>abbr_desciptions</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $abbr_desciptions</string><docblock/></property><property><name>abbr_matches</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $abbr_matches</string><docblock/></property><property><name>html_cleans</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_cleans</string><docblock/></property><property><name>block_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $block_tags</string><docblock/></property><property><name>context_block_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $context_block_tags</string><docblock/></property><property><name>contain_span_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $contain_span_tags</string><docblock/></property><property><name>clean_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $clean_tags</string><docblock/></property><property><name>auto_close_tags</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $auto_close_tags</string><docblock/></property><property><name>nested_brackets_depth</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets_depth</string><docblock/></property><property><name>nested_brackets</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $nested_brackets</string><docblock/></property><property><name>escape_chars</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_chars</string><docblock/></property><property><name>escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $escape_table</string><docblock/></property><property><name>backslash_escape_table</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $backslash_escape_table</string><docblock/></property><property><name>empty_element_suffix</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $empty_element_suffix</string><docblock/></property><property><name>tab_width</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $tab_width</string><docblock/></property><property><name>urls</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $urls</string><docblock/></property><property><name>titles</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $titles</string><docblock/></property><property><name>html_blocks</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_blocks</string><docblock/></property><property><name>html_hashes</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $html_hashes</string><docblock/></property><property><name>document_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $document_gamut</string><docblock/></property><property><name>block_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $block_gamut</string><docblock/></property><property><name>span_gamut</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $span_gamut</string><docblock/></property><property><name>list_level</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $list_level</string><docblock/></property><property><name>utf8_strlen</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $utf8_strlen</string><docblock/></property></properties></class><function><name>STXMarkdown</name><internal/><reference/><string>STXMarkdown($text)</string><docblock><description><![CDATA[<p>Like {@see Markdown()} except this function creates an instance of
<a href='?__plibclass=STXMarkdown#class-STXMarkdown'>STXMarkdown</a> that syntax highlights source code.</p>]]></description><since><![CDATA[1.1]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></function></module><module><name>Syntaxer.php</name><path>Parser/Syntaxer/Syntaxer.php</path><namespace>Parser.Syntaxer</namespace><classpath>Parser.Syntaxer.Syntaxer</classpath><docblock><description><![CDATA[<p>This is a generic syntax highlighting script. The script highlights
virtually any language as long as there is a corresponding file
mapping the syntax. The mapping of a syntax is done by using a .stx
file originating from the brilliant text editor
<a href='http://www.editplus.com'>Edit+</a></p>

<p>So if you miss highlighting for a language, go to
<a href='http://editplus.com/files.html'>Edit+ files</a> and see if there is a
syntax file for your requested language and if so just drop that file
in the directory where the other .stx files are located.</p>

<p>NOTE! Some features in the Edit+ syntax files are discarted in this script
and some other features are added. Check out the bundled php.stx file as
reference.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[2.0.5]]></version><license><![CDATA[GPL License 2]]></license><package><![CDATA[Parser]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Syntaxer</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Syntaxer</string><implements/><docblock><description><![CDATA[<p>This is a generic syntax highlighting script.
The script highlights virtually any language as long as there is a
corresponding file mapping the syntax. The mapping of a syntax is done by
using a .stx file originating from the brilliant text editor
<a href='http://www.editplus.com'>Edit+</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Syntaxer]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public __construct($lang [, $path [, $cachepath]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$lang]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cachepath]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>lang</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$lang</string></param><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>cachepath</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cachepath</string></param></params></method><method><name>GetBuffer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetBuffer()</string><docblock><description><![CDATA[<p>Return the processed and highlighted code</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetLines</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetLines()</string><docblock><description><![CDATA[<p>Return the number of lines we processed</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetSize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetSize()</string><docblock><description><![CDATA[<p>Return the size of the code in bytes</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetLanguage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetLanguage()</string><docblock><description><![CDATA[<p>Get the laguage processed</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetLineWrapper</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public SetLineWrapper($prepend, $append)</string><docblock><description><![CDATA[<p>Set the line wrappers</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prepend]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$append]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>prepend</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$prepend</string></param><param><name>append</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$append</string></param></params></method><method><name>GetStxPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetStxPath()</string><docblock><description><![CDATA[<p>Returns the path to the syntax files</p>]]></description><since><![CDATA[2.0.5]]></since><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetStxCachePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public GetStxCachePath()</string><docblock><description><![CDATA[<p>Return the path to the PHP-ified .stx file</p>]]></description><since><![CDATA[2.0.5]]></since><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddAlias</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Syntaxer</declaring-class><inherited/><string>public static AddAlias($extension, $alias)</string><docblock><description><![CDATA[<p>Add an alias to the alias array</p>]]></description><since><![CDATA[2.0.3]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extension]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$alias]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>extension</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$extension</string></param><param><name>alias</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$alias</string></param></params></method><method><name>HTMLEmbedded</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public HTMLEmbedded($bool)</string><docblock><description><![CDATA[<p>Set wether we should treat the language as HTML embedded or not?
This value can be set in the .stx file but we want to override that
setting is some circumstances - like highlighting code snippets in a
forum or something like that.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$bool]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>bool</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$bool</string></param></params></method><method><name>Alias</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Syntaxer</declaring-class><inherited/><string>public static Alias($ext)</string><docblock><description><![CDATA[<p>Find what syntax file to use for an alias (extension).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$ext]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>ext</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$ext</string></param></params></method><method><name>AutoDetect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Syntaxer</declaring-class><inherited/><string>public static AutoDetect($file)</string><docblock><description><![CDATA[<p>Try to autodetect what syntax file to use from a file path
First whe check agains the the extension, if no match there or if there
simply is no extension we check for a shebang. If nothing is found we
just pass back what was passed in.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>public Parse($data)</string><docblock><description><![CDATA[<p>Parse the code</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>toWhite</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private toWhite($in)</string><docblock><description><![CDATA[<p>Convertes tabs to spaces and spaces to HTML entities</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>highlight</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private highlight($what, $key)</string><docblock><description><![CDATA[<p>Highlight a word or a delimiter or what ever.
We also check if the current $what should be styled in any other
way. And if so add the styling</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>The $key to look for in the color array.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>getStyle</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private getStyle($key)</string><docblock><description><![CDATA[<p>Collect the style to use., if anym for a specific keyword</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>getColorKey</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private getColorKey($word)</string><docblock><description><![CDATA[<p>Find what color key to use for a specific keyword.
The keywords array is a multidimentional associative array where the
key of the first level is the color key to use. The value of this key
is in turn an assoc array where the key is the first character of
the values. The reason for this is that we don't need to look through
the entire keywords array to find the color key for a keyword we only
need to look in the sub array that has a key the same as the first
character in the word.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$word]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>word</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$word</string></param></params></method><method><name>getArrayKey</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private getArrayKey($array, $value)</string><docblock><description><![CDATA[<p>Get the array key for an array that has a requested value in it.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>HTMLChars</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private HTMLChars($what)</string><docblock><description><![CDATA[<p>Turn a string into safe html</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>isQuoteChar</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private isQuoteChar($char, $offset)</string><docblock><description><![CDATA[<p>Check if $char is a quote character or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$char]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[<p>The offset in the data string for the $char</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>char</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$char</string></param><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param></params></method><method><name>isLineCmt</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private isLineCmt($data, $offset)</string><docblock><description><![CDATA[<p>Check if we've hit a line comment or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[<p>This is the entire data string</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[<p>See <a href='?__plibclass=Syntaxer#method-isQuoteChar'>Syntaxer::isQuoteChar()</a></p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param></params></method><method><name>isBlockComment</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private isBlockComment($data, $offset)</string><docblock><description><![CDATA[<p>Check if we've hit a block comment or not</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[<p>See <a href='?__plibclass=Syntaxer#method-isLineCmt'>Syntaxer::isLineCmt()</a></p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$offset]]></variable><description><![CDATA[<p>See <a href='?__plibclass=Syntaxer#method-isQuoteChar'>Syntaxer::isQuoteChar()</a></p>]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[<p>If we have indeed hit a block comment we return the array index
 of where we found the opening comment sequence. The closing comment
 sequence will be found at the same index in the
 {@link Syntaxer::comment_off} array. This is due to the fact that
 the opening and closing sequence of a block comment doesn't have
 to have the same length.</p>]]></description></return></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>offset</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$offset</string></param></params></method><method><name>appendLine</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Syntaxer</declaring-class><inherited/><string>private appendLine($what)</string><docblock><description><![CDATA[<p>Append a line of code to the buffer</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[<p>;</p>]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method></methods><properties><property><name>tabsize</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $tabsize</string><docblock><description><![CDATA[<p>Tabsize, how much to indent</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>newline</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $newline</string><docblock><description><![CDATA[<p>Line end. What character is a newline</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>space</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $space</string><docblock><description><![CDATA[<p>Space chacrater</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ampersand</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $ampersand</string><docblock><description><![CDATA[<p>Entity for &amp;</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>mode</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $mode</string><docblock><description><![CDATA[<p>How to encode HTML/XML entities</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>is_embedded</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $is_embedded</string><docblock><description><![CDATA[<p>Override the html_embedded instruction in the syntax file</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>lines</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $lines</string><docblock><description><![CDATA[<p>Number of lines</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>size</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $size</string><docblock><description><![CDATA[<p>The size of the code in bytes</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>_buffer</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_buffer</string><docblock><description><![CDATA[<p>Buffer string. This is where we append the processed data</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_lang</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_lang</string><docblock><description><![CDATA[<p>What syntax (or language rather) to parse</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_error</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_error</string><docblock><description><![CDATA[<p>Has any error occured?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>_map</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_map</string><docblock><description><![CDATA[<p>The syntax map</p>]]></description><var><![CDATA[SyntaxMap]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $data</string><docblock><description><![CDATA[<p>The data to parse</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tab</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $tab</string><docblock><description><![CDATA[<p>The space character (n) tab size times</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>colors</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $colors</string><docblock><description><![CDATA[<p>Array of colors</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>white</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $white</string><docblock><description><![CDATA[<p>Array of white space character</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>delimiters</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $delimiters</string><docblock><description><![CDATA[<p>Array of delimiter characters</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>stop_chars</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $stop_chars</string><docblock><description><![CDATA[<p>Whitespace and delimter arrays combined.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>keywords</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $keywords</string><docblock><description><![CDATA[<p>Array of keywords</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>line_comments</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $line_comments</string><docblock><description><![CDATA[<p>Array of line comment sequences</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>comment_on</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $comment_on</string><docblock><description><![CDATA[<p>Array of opening sequences for block comments</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>comment_off</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $comment_off</string><docblock><description><![CDATA[<p>Array of closing sequences for block comments</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>quotes</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $quotes</string><docblock><description><![CDATA[<p>Array of quote charcters</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>prefix</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $prefix</string><docblock><description><![CDATA[<p>Array of variable prefixes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>escape</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $escape</string><docblock><description><![CDATA[<p>Escape character</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>script_begin</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $script_begin</string><docblock><description><![CDATA[<p>Sequence for script start of HTML embedded languages.
For instance <? in PHP or <% in ASP</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>script_end</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $script_end</string><docblock><description><![CDATA[<p>Sequence for script end of HTML embedded languages
For instance ?> in PHP or %> in ASP</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>style_open</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $style_open</string><docblock><description><![CDATA[<p>Array of arbitrary opening styling instructions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>style_close</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $style_close</string><docblock><description><![CDATA[<p>Array of arbitrary closing styling instructions</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>html_chars</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $html_chars</string><docblock><description><![CDATA[<p>The characters to replace with $html_ent</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>html_ent</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $html_ent</string><docblock><description><![CDATA[<p>XML/HTML entites we should convert $html_chars into</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>has_prefix</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $has_prefix</string><docblock><description><![CDATA[<p>Shall we look for prefixed variables</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>line_wrap</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $line_wrap</string><docblock><description><![CDATA[<p>How to wrap the lines</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>alias</name><value><![CDATA[array (
  'ruby' => 
  array (
    0 => 'rb',
    1 => 'rbc',
  ),
  'php' => 
  array (
    0 => 'php3',
    1 => 'php4',
    2 => 'php5',
  ),
  'asp3' => 
  array (
    0 => 'asp',
  ),
  'shell' => 
  array (
    0 => 'bash',
    1 => 'sh',
  ),
  'as2' => 
  array (
    0 => 'as',
  ),
  'pike' => 
  array (
    0 => 'pike',
    1 => 'pmod',
  ),
  'python' => 
  array (
    0 => 'py',
  ),
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $alias</string><docblock><description><![CDATA[<p>The index is the name of the .stx file.
The values are arrays of extensions that goes with the .stx</p>]]></description><static><![CDATA[array]]></static></docblock></property></properties></class><class><name>SyntaxMap</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class SyntaxMap</string><implements/><docblock><description><![CDATA[<p>This class sets up the syntax maps.
We parse the Edit+ .stx files and turn them into PHP files
so that we don't have to do this process on every request.
If the .stx file has a newer timestamp than the corresponding
PHP file the PHP file will be regenerated</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Syntaxer]]></subpackage><usedby><used><types><type><![CDATA[<a href='?__plibclass=Syntaxer#class-Syntaxer'>Syntaxer</a>]]></type></types><description><![CDATA[]]></description></used></usedby></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public __construct([$path [, $cachepath]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[<p>Path to the .stx files</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cachepath]]></variable><description><![CDATA[<p>Path to the generated .php files</p>]]></description></param></params><throws><types><type><![CDATA[<a href='?__plibclass=SyntaxerIOError#class-SyntaxerIOError'>SyntaxerIOError</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>cachepath</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cachepath</string></param></params></method><method><name>GetStxPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public GetStxPath()</string><docblock><description><![CDATA[<p>Returns the path to the syntax files</p>]]></description><since><![CDATA[2.0.5]]></since><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetStxCachePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public GetStxCachePath()</string><docblock><description><![CDATA[<p>Return the path to the PHP-ified .stx file</p>]]></description><since><![CDATA[2.0.5]]></since><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>load</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public load($lang)</string><docblock><description><![CDATA[<p>Load and parse the .stx file.
If the timestamp of .stx is newer than .php we regenerate
the .php file.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$lang]]></variable><description><![CDATA[<p>The laguage to load</p>]]></description></param></params><throws><types><type><![CDATA[<a href='?__plibclass=SyntaxerIOError#class-SyntaxerIOError'>SyntaxerIOError</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>lang</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$lang</string></param></params></method><method><name>getMapValue</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public getMapValue($arr, $val)</string><docblock><description><![CDATA[<p>Look-up a key from one of the arrays</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$arr]]></variable><description><![CDATA[<p>What array too look in</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$val]]></variable><description><![CDATA[<p>What key to look for</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>arr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$arr</string></param><param><name>val</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$val</string></param></params></method><method><name>getMap</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public getMap($what)</string><docblock><description><![CDATA[<p>Return one of the arrays</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>collect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SyntaxMap</declaring-class><inherited/><string>public collect($begin [, $assoc [, $cut_begin=1]])</string><docblock><description><![CDATA[<p>Collect information about a group in the _PREFS array.
A group could look like:</p>

<div class='code'><code><span style='color: #990000;'><b>$_PREFS</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;linecomment&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$_PREFS</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;linecomment2&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$_PREFS</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;linecomment3&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>;</span><br/></code></div>

<p>So here we collect everything starting with linecomment
and put that into an array and return that array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$begin]]></variable><description><![CDATA[<p>What the key in _PREFS should match</p>]]></description></param><param><types><type><![CDATA[boolean]]></type></types><variable><![CDATA[$assoc]]></variable><description><![CDATA[<p>Should we return a flat array or an associative.</p>]]></description></param><param><types><type><![CDATA[boolean]]></type></types><variable><![CDATA[$cut_begin]]></variable><description><![CDATA[<p>Should we keep what we match or throw it away</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>begin</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$begin</string></param><param><name>assoc</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$assoc</string></param><param><name>cut_begin</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cut_begin=1</string></param></params></method></methods><properties><property><name>_path</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_path</string><docblock><description><![CDATA[<p>Default location of the .stx files</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_cachepath</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_cachepath</string><docblock><description><![CDATA[<p>Default location of the .php syntax files</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_lang</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_lang</string><docblock><description><![CDATA[<p>What syntax are we about to load</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>_KEYWORDS</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_KEYWORDS</string><docblock><description><![CDATA[<p>Where we keep the values when we generate or regenerate
a php syntax map</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>_PREFS</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_PREFS</string><docblock><description><![CDATA[<p>Where we keep the preferences</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>_COLOR</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_COLOR</string><docblock><description><![CDATA[<p>Where we keep the colors</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>_DELIMS</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_DELIMS</string><docblock><description><![CDATA[<p>Where we keep the delimiters</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>SyntaxerIOError</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class SyntaxerIOError extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Parser]]></package><subpackage><![CDATA[Exceptions]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace></namespace><namespace name="Protocols" path="Protocols"><module><name>IMAP.php</name><path>Protocols/IMAP.php</path><namespace>Protocols</namespace><classpath>Protocols.IMAP</classpath><docblock><description><![CDATA[<p>IMAP classes</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Mail]]></subpackage><uses><use><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></use></uses><depends><depend><types/><description><![CDATA[<p><a href='http://php.net/imap'>The PHP IMAP extension</a></p>]]></description></depend></depends></docblock><class><name>IMAP</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class IMAP</string><implements/><docblock><description><![CDATA[<p>IMAP class. See <a href='http://php.net/imap'>the IMAP pages at PHP.net</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public __construct($mailbox, $username, $password [, $options [, $retries]])</string><docblock><description><![CDATA[<p>Constructor</p>

<p>Takes the same params as <a href='http://php.net/imap_open'>imap_open</a>.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$mailbox]]></variable><description><![CDATA[<p>Ex: "{mail.domain.com:143}INBOX"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$username]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$password]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$flags]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$retries]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='?__plibclass=ImapException#class-ImapException'>ImapException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>mailbox</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$mailbox</string></param><param><name>username</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$username</string></param><param><name>password</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$password</string></param><param><name>options</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options</string></param><param><name>retries</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$retries</string></param></params></method><method><name>FetchOverview</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public FetchOverview($from, $to [, $options])</string><docblock><description><![CDATA[<p>Fetches messages from $from to $to</p>]]></description><link><![CDATA[<a href='http://php.net/imap_fetch_overview'>imap_fetch_overview()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$from]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$to]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$options]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=MailIterator#class-MailIterator'>MailIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>from</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$from</string></param><param><name>to</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$to</string></param><param><name>options</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options</string></param></params></method><method><name>FetchStructure</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public FetchStructure($msgno [, $options])</string><docblock><description><![CDATA[<p>Fetches the body structure of the message with number $msgno</p>]]></description><link><![CDATA[<a href='http://php.net/imap_fetchstructure'>imap_fetchstructure()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$options]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=MailStructure#class-MailStructure'>MailStructure</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param><param><name>options</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options</string></param></params></method><method><name>FetchBody</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public FetchBody($msgno, $partNumber)</string><docblock><description><![CDATA[<p>Fetch the body</p>]]></description><link><![CDATA[<a href='http://php.net/imap_fetchbody'>imap_fetchbody()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[]]></description></param></params><package><![CDATA[int $partNumber]]></package><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param><param><name>partNumber</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$partNumber</string></param></params></method><method><name>Header</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Header($msgno)</string><docblock><description><![CDATA[<p>Returns the header for a given message</p>]]></description><link><![CDATA[<a href='http://php.net/imap_header'>imap_header()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param></params></method><method><name>HeaderArrayToString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IMAP</declaring-class><inherited/><string>public static HeaderArrayToString($from [, $linkify=1])</string><docblock><description><![CDATA[<p>Takes an array from IMAP::Header['from'] and turns it into a string</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$from]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$linkify]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>from</name><value/><reference/><optional/><class/><array/><nullable/><string>$from</string></param><param><name>linkify</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$linkify=1</string></param></params></method><method><name>HTMLToPlainText</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IMAP</declaring-class><inherited/><string>public static HTMLToPlainText($text [, $allowTags])</string><docblock><description><![CDATA[<p>Turns a HTML formatted message into plain text</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$allowTags]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>allowTags</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$allowTags</string></param></params></method><method><name>GetText</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public GetText(MailStructure $struct [, $type=1 [, $prefix]])</string><docblock><description><![CDATA[<p>Returns the text part of the message</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=MailStructure#class-MailStructure'>MailStructure</a>]]></type></types><variable><![CDATA[$struct]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$parts]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[<p>Used when recursing through a structure.</p>]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[<p>The key is the subtype of the message, i.e. PLAIN or HTML</p>]]></description></return><todo><![CDATA[<p>Look into other types of text messages such as MESSAGE...</p>]]></todo></docblock><params><param><name>struct</name><value/><reference/><optional/><class>MailStructure</class><array/><nullable/><string>MailStructure $struct</string></param><param><name>type</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type=1</string></param><param><name>prefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>GetAttachments</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public GetAttachments(MailStructure $struct [, $prefix])</string><docblock><description><![CDATA[<p>Tries to find attachements if any</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=MailStructure#class-MailStructure'>MailStructure</a>]]></type></types><variable><![CDATA[$struct]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>struct</name><value/><reference/><optional/><class>MailStructure</class><array/><nullable/><string>MailStructure $struct</string></param><param><name>prefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>parseStructure</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>protected parseStructure(MailStructure $struct, $partNumber, $type)</string><docblock><description><![CDATA[<p>Pick out what ever...</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=MailStructure#class-MailStructure'>MailStructure</a>]]></type></types><variable><![CDATA[$struct]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$partNumber]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>See MailStructure type constants</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>struct</name><value/><reference/><optional/><class>MailStructure</class><array/><nullable/><string>MailStructure $struct</string></param><param><name>partNumber</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$partNumber</string></param><param><name>type</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$type</string></param></params></method><method><name>Body</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Body($msgno [, $options])</string><docblock><description><![CDATA[<p>Returns the message body of the message with number $msgno</p>]]></description><link><![CDATA[<a href='http://php.net/imap_body'>imap_body()</a>]]></link><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$options]]></variable><description><![CDATA[<ul>
<li>FT_UID      - The msg_number  is a UID</li>
<li>FT_PEEK     - Do not set the \Seen flag if not already set</li>
<li>FT_INTERNAL - The return string is in internal format, will not
            canonicalize to CRLF.</li>
</ul>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param><param><name>options</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options</string></param></params></method><method><name>Reopen</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Reopen($mailbox)</string><docblock><description><![CDATA[<p>Reopen/open a mailbox</p>]]></description><link><![CDATA[<a href='http://php.net/imap_reopen'>imap_reopen()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$mailbox]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>mailbox</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$mailbox</string></param></params></method><method><name>Info</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Info()</string><docblock><description><![CDATA[<p>Alias for <a href='http://php.net/imap_check'>imap_check()</a></p>]]></description><return><types><type><![CDATA[object]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Messages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Messages()</string><docblock><description><![CDATA[<p>Returns the number of messages in the current mailbox</p>]]></description><link><![CDATA[<a href='http://php.net/imap_num_msg'>imap_num_msg()</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RecentMessages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public RecentMessages()</string><docblock><description><![CDATA[<p>Returns the number of recent messages in the current mailbox</p>]]></description><link><![CDATA[<a href='http://php.net/imap_num_recent'>imap_num_recent()</a>]]></link><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ListMailbox</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public ListMailbox([$pattern=*])</string><docblock><description><![CDATA[<p>List the mailbox</p>]]></description><link><![CDATA[<a href='http://php.net/imap_list'>imap_list()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$pattern]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=MailIterator#class-MailIterator'>MailIterator</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=ImapException#class-ImapException'>ImapException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>pattern</name><value>*</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$pattern=*</string></param></params></method><method><name>GetMailboxes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public GetMailboxes($pattern)</string><docblock><description><![CDATA[<p>Return all mailboxes matching pattern $pattern</p>]]></description><link><![CDATA[<a href='http://php.net/imap_getmailboxes'>imap_getmailboxes()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$pattern]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=MailIterator#class-MailIterator'>MailIterator</a>]]></type></types><description><![CDATA[]]></description></return><throws><types><type><![CDATA[<a href='?__plibclass=ImapException#class-ImapException'>ImapException</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params><param><name>pattern</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pattern</string></param></params></method><method><name>DecodeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>IMAP</declaring-class><inherited/><string>public static DecodeString($str)</string><docblock><description><![CDATA[<p>Decodes a quoted printable encoded string</p>]]></description><link><![CDATA[<a href='http://php.net/iconv_mime_decode'>iconv_mime_decode()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>Status</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Status([$mailbox [, $options=31]])</string><docblock><description><![CDATA[<p>Returns status information on a mailbox</p>]]></description><link><![CDATA[<a href='http://php.net/imap_status'>imap_status()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$mailbox]]></variable><description><![CDATA[<p>Check status on mailbox other than the default set in the constructor</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$options]]></variable><description><![CDATA[<ul>
<li>SA_MESSAGES    - set status->messages to the number of messages in the
               mailbox</li>
<li>SA_RECENT      - set status->recent to the number of recent messages
               in the mailbox</li>
<li>SA_UNSEEN      - set status->unseen to the number of unseen (new)
               messages in the mailbox</li>
<li>SA_UIDNEXT     - set status->uidnext to the next uid to be used in the
               mailbox</li>
<li>SA_UIDVALIDITY - set status->uidvalidity to a constant that changes
               when uids for the mailbox may no longer be valid</li>
<li>SA_ALL         - set all of the above</li>
</ul>]]></description></param></params><return><types><type><![CDATA[object]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>mailbox</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mailbox</string></param><param><name>options</name><value>31</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options=31</string></param></params></method><method><name>Search</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Search($criteria [, $options [, $charset]])</string><docblock><description><![CDATA[<p>This function performs a search on the mailbox currently opened in the
given imap stream.</p>]]></description><link><![CDATA[<a href='http://php.net/imap_search'>imap_search()</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$criteria]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$options]]></variable><description><![CDATA[<p>A string, delimited by spaces, in which the following keywords are
allowed. Any multi-word arguments (e.g. FROM "joey smith") must be
quoted.</p>

<ul>
<li>ALL                - return all messages matching the rest of the
                     criteria</li>
<li>ANSWERED           - match messages with the \ANSWERED flag set</li>
<li>BCC "string"       - match messages with "string" in the Bcc: field</li>
<li>BEFORE "date"      - match messages with Date: before "date"</li>
<li>BODY "string"      - match messages with "string" in the body of the
                     message</li>
<li>CC "string"        - match messages with "string" in the Cc: field</li>
<li>DELETED            - match deleted messages</li>
<li>FLAGGED            - match messages with the \FLAGGED (sometimes
                     referred to as Important or Urgent) flag set</li>
<li>FROM "string"      - match messages with "string" in the From: field</li>
<li>KEYWORD "string"   - match messages with "string" as a keyword</li>
<li>NEW                - match new messages</li>
<li>OLD                - match old messages</li>
<li>ON "date"          - match messages with Date: matching "date"</li>
<li>RECENT             - match messages with the \RECENT flag set</li>
<li>SEEN               - match messages that have been read (the \SEEN
                     flag is set)</li>
<li>SINCE "date"       - match messages with Date: after "date"</li>
<li>SUBJECT "string"   - match messages with "string" in the Subject:</li>
<li>TEXT "string"      - match messages with text "string"</li>
<li>TO "string"        - match messages with "string" in the To:</li>
<li>UNANSWERED         - match messages that have not been answered</li>
<li>UNDELETED          - match messages that are not deleted</li>
<li>UNFLAGGED          - match messages that are not flagged</li>
<li>UNKEYWORD "string" - match messages that do not have the keyword
                     "string"</li>
<li>UNSEEN             - match messages which have not been read yet</li>
</ul>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$charset]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=MailIterator#class-MailIterator'>MailIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>criteria</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$criteria</string></param><param><name>options</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$options</string></param><param><name>charset</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$charset</string></param></params></method><method><name>Close</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public Close()</string><docblock><description><![CDATA[<p>Close the connection to the IMAP server</p>]]></description><link><![CDATA[<a href='http://php.net/imap_close'>imap_close()</a>]]></link></docblock><params/></method><method><name>__destruct</name><constructor/><destructor>1</destructor><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>IMAP</declaring-class><inherited/><string>public __destruct()</string><docblock><description><![CDATA[<p>Destructor. Alias of <a href='?__plibclass=IMAP#method-Close'>IMAP::Close()</a></p>]]></description></docblock><params/></method></methods><properties><property><name>mailbox</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $mailbox</string><docblock><description><![CDATA[<p>The mailbox. Ex. {mail.domain.com:143}INBOX</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>username</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $username</string><docblock><description><![CDATA[<p>The username</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>password</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $password</string><docblock><description><![CDATA[<p>The password</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>options</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $options</string><docblock><description><![CDATA[<p>Options. See <a href='http://php.net/imap/'>IMAP at php.net</a></p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>retries</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $retries</string><docblock><description><![CDATA[<p>Number of connections retries</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>mbox</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $mbox</string><docblock><description><![CDATA[<p>The actual mailbox part of <a href='?__plibclass=IMAP#property-mailbox'>IMAP::$mailbox</a></p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>ref</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ref</string><docblock><description><![CDATA[<p>The actual host and port part of <a href='?__plibclass=IMAP#property-mailbox'>IMAP::$mailbox</a></p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>resource</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $resource</string><docblock><description><![CDATA[<p>The IMAP connection resource</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>MailAttachment</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class MailAttachment</string><implements/><docblock><description><![CDATA[<p>A representation of an attachment</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Mail]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public __construct($filename, $data, $dispoition, $mimetype, $msgno, $partnum)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$filename]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dispoition]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$mimetype]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[<p>The message number of the message the attachment belongs to</p>]]></description></param><param><types><type><![CDATA[int]]></type><type><![CDATA[string]]></type></types><variable><![CDATA[$partnum]]></variable><description><![CDATA[<p>The part in the body structure the attachment belongs to</p>]]></description></param></params></docblock><params><param><name>filename</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$filename</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>dispoition</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dispoition</string></param><param><name>mimetype</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$mimetype</string></param><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param><param><name>partnum</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$partnum</string></param></params></method><method><name>MimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public MimeType([$set])</string><docblock><description><![CDATA[<p>Setter/getter for the mimetype</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$set]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>set</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$set</string></param></params></method><method><name>Filename</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public Filename([$set])</string><docblock><description><![CDATA[<p>Setter/getter for the filename</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$set]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>set</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$set</string></param></params></method><method><name>Disposition</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public Disposition([$set])</string><docblock><description><![CDATA[<p>Setter/getter for the content disposition</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$set]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>set</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$set</string></param></params></method><method><name>Data</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public Data([$set])</string><docblock><description><![CDATA[<p>Setter/getter for the file data</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$set]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>set</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$set</string></param></params></method><method><name>Size</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public Size()</string><docblock><description><![CDATA[<p>Returns the size of the data</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SaveToDisk</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailAttachment</declaring-class><inherited/><string>public SaveToDisk($path [, $owerwrite [, $mode=502]])</string><docblock><description><![CDATA[<p>Saves the file to disk</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$owerwrite]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$mode]]></variable><description><![CDATA[]]></description></param></params><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The path to the file</p>]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>owerwrite</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$owerwrite</string></param><param><name>mode</name><value>502</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$mode=502</string></param></params></method></methods><properties><property><name>mimetype</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $mimetype</string><docblock><description><![CDATA[<p>The mimetype</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>filename</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $filename</string><docblock><description><![CDATA[<p>The file name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>The actual content</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>disposition</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $disposition</string><docblock><description><![CDATA[<p>Content disposition (INLINE/ATTACHMENT)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>size</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $size</string><docblock><description><![CDATA[<p>The size of the data</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>msgno</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $msgno</string><docblock><description><![CDATA[<p>The message this attachment belongs to</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>partnum</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $partnum</string><docblock><description><![CDATA[<p>The part in the messages the attachment is at</p>]]></description><var><![CDATA[string|int]]></var></docblock></property></properties></class><class><name>MailStructure</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class MailStructure</string><implements/><docblock><description><![CDATA[<p>Representation of a structure object returned from
{@see imap_fetchstructure()} or <a href='?__plibclass=IMAP#method-FetchStructure'>IMAP::FetchStructure()</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Mail]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public __construct(stdClass $struct, $msgno)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><variable><![CDATA[$struct]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$msgno]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>struct</name><value/><reference/><optional/><class>stdClass</class><array/><nullable/><string>stdClass $struct</string></param><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param></params></method><method><name>GetMimeType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public GetMimeType()</string><docblock><description><![CDATA[<p>Returns the mimetype of the structure</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>CheckFlag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>MailStructure</declaring-class><inherited/><string>public static CheckFlag($which, $what)</string><docblock><description><![CDATA[<p>Check a flag against the main types</p>

<div class='code'><code><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span>MailStructure<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>CheckFlag<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;IMAGE&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$struct</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetType<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;It&#39;s&#160;an&#160;image!&#34;</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>GetStructureObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public GetStructureObject()</string><docblock><description><![CDATA[<p>Returns the structure object</p>]]></description><return><types><type><![CDATA[Object]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NumParts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public NumParts()</string><docblock><description><![CDATA[<p>Return the number of parts in the message</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Parts()</string><docblock><description><![CDATA[<p>Return the parts</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Encoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Encoding()</string><docblock><description><![CDATA[<p>Returns the messageï¿½s transfer encoding</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Type</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Type([$bitwise=1])</string><docblock><description><![CDATA[<p>Returns the body type of the message</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$bitwise]]></variable><description><![CDATA[<p>Since most type checking is done by bit wise comparison and the types
 (in the actual IMAP structure) we in most cases want the BIT
 representation of the type. But if you want the actual type number
 set this to false.</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bitwise</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bitwise=1</string></param></params></method><method><name>HasSubType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasSubType()</string><docblock><description><![CDATA[<p>Returns if the messages has an subtype or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SubType</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public SubType()</string><docblock><description><![CDATA[<p>Returns the subtype if any</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasDescription()</string><docblock><description><![CDATA[<p>Returns whether or not the message has an description</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Description()</string><docblock><description><![CDATA[<p>Returns the description if any</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasDisposition</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasDisposition()</string><docblock><description><![CDATA[<p>Returns whether or not the message has an disposition</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Disposition</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Disposition()</string><docblock><description><![CDATA[<p>Returns the messageï¿½s disposition if any.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasId</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasId()</string><docblock><description><![CDATA[<p>Returns whether or not the message has an id</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Id</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Id()</string><docblock><description><![CDATA[<p>Returns the messageï¿½s id if any.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasDParameters</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasDParameters()</string><docblock><description><![CDATA[<p>Returns whether or not the message has dparameters or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>DParameters</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public DParameters()</string><docblock><description><![CDATA[<p>Returns the messageï¿½s dparameters if any.</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasParameters</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public HasParameters()</string><docblock><description><![CDATA[<p>Returns whether or not the message has parameters or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parameters</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Parameters()</string><docblock><description><![CDATA[<p>Returns the messageï¿½s dparameters if any.</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetParameter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public GetParameter($which)</string><docblock><description><![CDATA[<p>Get a specific paramter from $this->struct->parameters</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetDParameter</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public GetDParameter($which)</string><docblock><description><![CDATA[<p>Get a specific paramter from $this->struct->dparameters</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>Lines</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Lines()</string><docblock><description><![CDATA[<p>Return the number of lines</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Bytes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public Bytes()</string><docblock><description><![CDATA[<p>Return the number of bytes</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public GetIterator()</string><docblock><description><![CDATA[<p>Returns an iterator for the message parts</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=StructIterator#class-StructIterator'>StructIterator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>MessageNumber</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public MessageNumber()</string><docblock><description><![CDATA[<p>Returns the message number</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>DecodeBody</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailStructure</declaring-class><inherited/><string>public DecodeBody($body)</string><docblock><description><![CDATA[<p>Decodes the body part of the message associated with this structure</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$body]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>body</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$body</string></param></params></method></methods><properties><property><name>SUBTYPES</name><value><![CDATA[array (
  'PLAIN' => 1,
  'HTML' => 2,
  'MIXED' => 4,
  'OCTET-STREAM' => 8,
  'RFC822' => 16,
  'ALTERNATIVE' => 32,
  'RICHTEXT' => 64,
  'GIF' => 128,
  'JPEG' => 256,
  'PNG' => 512,
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $SUBTYPES</string><docblock><description><![CDATA[<p>Subtypes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>TYPES</name><value><![CDATA[array (
  'TEXT' => 1,
  'MULTIPART' => 2,
  'MESSAGE' => 4,
  'APPLICATION' => 8,
  'AUDIO' => 16,
  'IMAGE' => 32,
  'VIDEO' => 64,
  'OTHER' => 128,
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $TYPES</string><docblock><description><![CDATA[<p>Primary body types</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>TRANSFER_ENCODINGS</name><value><![CDATA[array (
  0 => '7BIT',
  1 => '8BIT',
  2 => 'BINARY',
  3 => 'BASE64',
  4 => 'QUOTED-PRINTABLE',
  5 => 'OTHER',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $TRANSFER_ENCODINGS</string><docblock><description><![CDATA[<p>Transfer encodings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>msgno</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $msgno</string><docblock><description><![CDATA[<p>The message number</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>struct</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $struct</string><docblock><description><![CDATA[<p>Structure object returned from {@see imap_fetchstructure()} or
<a href='?__plibclass=IMAP#method-FetchStructure'>IMAP::FetchStructure()</a></p>]]></description><var><![CDATA[object]]></var></docblock></property></properties></class><class><name>MailIterator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class MailIterator extends PLibIterator</string><implements/><docblock><description><![CDATA[<p>A generic iterator</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Mail]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited/><string>public __construct($container)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$container]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>container</name><value/><reference/><optional/><class/><array/><nullable/><string>$container</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited/><string>public HasNext()</string><docblock><description><![CDATA[<p>Is there a next item in the iterator?</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Returns the next item in the iterator</p>]]></description><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Sort</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited/><string>public Sort($key)</string><docblock><description><![CDATA[<p>Sorting function.</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>The key to sort on. If you want the result sorted in descending order
  prefix the key with a -. Like  <code>$iter-&gt;Sort('-date')</code>.</p>]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>StructIterator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>MailIterator</extends><string>class StructIterator extends MailIterator</string><implements/><docblock><description><![CDATA[<p>An Iterator for the parts in a mail structure</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Mail]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StructIterator</declaring-class><inherited/><string>public __construct($parts, $msgno)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$parts]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parts</name><value/><reference/><optional/><class/><array/><nullable/><string>$parts</string></param><param><name>msgno</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$msgno</string></param></params></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StructIterator</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Returns the next object in the iterator</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=MailStructure#class-MailStructure'>MailStructure</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited>1</inherited><string>public HasNext() inherited from MailIterator</string><docblock><description><![CDATA[<p>Is there a next item in the iterator?</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Sort</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>MailIterator</declaring-class><inherited>1</inherited><string>public Sort($key) inherited from MailIterator</string><docblock><description><![CDATA[<p>Sorting function.</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[<p>The key to sort on. If you want the result sorted in descending order
  prefix the key with a -. Like  <code>$iter-&gt;Sort('-date')</code>.</p>]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>ImapException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class ImapException extends Exception</string><implements/><docblock><description><![CDATA[<p>Generic IMAP exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module><module><name>Net.php</name><path>Protocols/Net.php</path><namespace>Protocols</namespace><classpath>Protocols.Net</classpath><docblock><description><![CDATA[<p>Various net related classes.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.3]]></version><package><![CDATA[Protocols]]></package><example><![CDATA[Net.xmpl]]></example><uses><use><types><type><![CDATA[<a href='?__plibclass=StringReader#class-StringReader'>StringReader</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>HTTPRequest</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTTPRequest</string><implements/><docblock><description><![CDATA[<p>Class for handling HTTP Queries</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><since><![CDATA[0.3]]></since><package><![CDATA[Protocols]]></package><subpackage><![CDATA[HTTP]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public __construct([HTTPCookie $cookie [, $encoding=UTF-8 [, $version=1.1]]])</string><docblock><description><![CDATA[<p>Creates a HTTP-request object</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=HTTPCookie#class-HTTPCookie'>HTTPCookie</a>]]></type></types><variable><![CDATA[$cookie]]></variable><description><![CDATA[<p>If you want to enable cookies pass an instance of <a href='?__plibclass=HTTPCookie#class-HTTPCookie'>HTTPCookie</a>
 as first argument.</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$encoding]]></variable><description><![CDATA[<p>Transfer encoding</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>HTTP version to use</p>]]></description></param></params></docblock><params><param><name>cookie</name><value/><reference/><optional>1</optional><class>HTTPCookie</class><array/><nullable>1</nullable><string>HTTPCookie $cookie</string></param><param><name>encoding</name><value>UTF-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$encoding=UTF-8</string></param><param><name>version</name><value>1.1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version=1.1</string></param></params></method><method><name>KeepAlive</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public KeepAlive([$value])</string><docblock><description><![CDATA[<p>Getter/setter for persistent connection.</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetHeader</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public SetHeader($name, $value)</string><docblock><description><![CDATA[<p>Set a request header</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>The name of the header to set</p>]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The value to set</p>]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>Headers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public Headers()</string><docblock><description><![CDATA[<p>Returns the array of request headers</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Cache</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public Cache($seconds)</string><docblock><description><![CDATA[<p>Enable/disable cache.</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$seconds]]></variable><description><![CDATA[<p>Number of seconds to use a cached request.
 0 means don't use cache at all.</p>]]></description></param></params></docblock><params><param><name>seconds</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$seconds</string></param></params></method><method><name>MaxRedirects</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public MaxRedirects([$max])</string><docblock><description><![CDATA[<p>Getter/setter for how many redirects to follow</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$max]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>max</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$max</string></param></params></method><method><name>DoMethod</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public DoMethod($method, $uri [, $vars [, $headers [, $data]]])</string><docblock><description><![CDATA[<p>Do an arbitrary HTTP action</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[<p>What method to use: <code>GET</code>, <code>POST</code>, <code>PROPPATCH</code>...</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[<p>Where to send the request. A full URI: http://server.com/path/</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$vars]]></variable><description><![CDATA[<p>Query variables to send. An associative array with key/value pairs</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$headers]]></variable><description><![CDATA[<p>Additional request headers</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[<p>Data to send as raw data in a SOAP call for instance</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=HTTPResponse#class-HTTPResponse'>HTTPResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param><param><name>uri</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$uri</string></param><param><name>vars</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$vars</string></param><param><name>headers</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$headers</string></param><param><name>data</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public Get($url [, $vars [, $headers]])</string><docblock><description><![CDATA[<p>Shortcut for <a href='?__plibclass=HTTPRequest#method-DoMethod'>HTTPRequest::DoMethod()</a> with a GET method.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[<p>Remote URL</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$vars]]></variable><description><![CDATA[<p>Associative array with query variables</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=HTTPResponse#class-HTTPResponse'>HTTPResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>vars</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$vars</string></param><param><name>headers</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$headers</string></param></params></method><method><name>Post</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public Post($url [, $vars [, $headers]])</string><docblock><description><![CDATA[<p>Shortcut for <a href='?__plibclass=HTTPRequest#method-DoMethod'>HTTPRequest::DoMethod()</a> with a POST method</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[<p>Remote URL</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$vars]]></variable><description><![CDATA[<p>Assoc array with query variables</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>vars</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$vars</string></param><param><name>headers</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$headers</string></param></params></method><method><name>ClearCache</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>public ClearCache()</string><docblock><description><![CDATA[<p>Clear the current cache</p>]]></description></docblock><params/></method><method><name>createCacheKey</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>protected createCacheKey($in)</string><docblock><description><![CDATA[<p>Generates an MD5 string out of the request header that will be used as
the name of the cache file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$in]]></variable><description><![CDATA[<p>This should be the entire request header</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>in</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$in</string></param></params></method><method><name>writeCache</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>protected writeCache($header, $response, $code)</string><docblock><description><![CDATA[<p>Write the cache to the tmp directory</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$header]]></variable><description><![CDATA[<p>The raw header for the request</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$response]]></variable><description><![CDATA[<p>the entire response</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[<p>The request status code</p>]]></description></param></params></docblock><params><param><name>header</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$header</string></param><param><name>response</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$response</string></param><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param></params></method><method><name>getCache</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPRequest</declaring-class><inherited/><string>protected getCache($header)</string><docblock><description><![CDATA[<p>Look up the cache file and if it exists and hasn't expired return the
path to the cache file.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$header]]></variable><description><![CDATA[<p>The raw request header</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>header</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$header</string></param></params></method></methods><properties><property><name>timeout</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $timeout</string><docblock><description><![CDATA[<p>Timeout in seconds</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $encoding</string><docblock><description><![CDATA[<p>Default transfer encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>requestHeaders</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $requestHeaders</string><docblock><description><![CDATA[<p>Request headers.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>httpVersion</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $httpVersion</string><docblock><description><![CDATA[<p>HTTP version to use for the request</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>keepAlive</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $keepAlive</string><docblock><description><![CDATA[<p>Use persistent connection or not.</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>maxRedirects</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $maxRedirects</string><docblock><description><![CDATA[<p>How many redirects to follow.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>cookie</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cookie</string><docblock><description><![CDATA[<p>A cookie jar, if we wan't to keep cookie information</p>]]></description><var><![CDATA[HTTPCookie]]></var></docblock></property><property><name>cache</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cache</string><docblock><description><![CDATA[<p>Number of seconds to use a cached version of the request.
0 means don't use cache at all</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>cachekey</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cachekey</string><docblock><description><![CDATA[<p>Key for a request's cache (MD5 sum of the request header)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>recursions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $recursions</string><docblock><description><![CDATA[<p>Keeps track of the number of redirects</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>HTTPResponse</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTTPResponse</string><implements/><docblock><description><![CDATA[<p>Class that parses a raw HTTP response.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><since><![CDATA[0.3]]></since><package><![CDATA[Protocols]]></package><subpackage><![CDATA[HTTP]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public __construct($data)</string><docblock><description><![CDATA[<p>Creates a new HTTPResponse object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[<p>A raw HTTP response.</p>]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>Headers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public Headers()</string><docblock><description><![CDATA[<p>Returns the HTTP headers</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Data</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public Data()</string><docblock><description><![CDATA[<p>Returns the content of the response.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Status</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public Status()</string><docblock><description><![CDATA[<p>Returns the status code of the response</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public Version()</string><docblock><description><![CDATA[<p>Returns the HTTP version used for the response</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RawData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public RawData()</string><docblock><description><![CDATA[<p>Returns the raw, unparsed, response</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RawHeader</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public RawHeader()</string><docblock><description><![CDATA[<p>Returns the raw, unparsed, HTTP header of the response</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetHeader</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public GetHeader($which)</string><docblock><description><![CDATA[<p>Returns a specific HTTP header.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>The header to fetch.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[<p>Returns false if the wanted header isn't set.</p>]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast the object to a string, returns the data part of the resopnse.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>protected parse($data)</string><docblock><description><![CDATA[<p>Parses the raw response</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=HTTPResponseException#class-HTTPResponseException'>HTTPResponseException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>parseHeader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>protected parseHeader($header)</string><docblock><description><![CDATA[<p>Parse the response header</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$header]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>header</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$header</string></param></params></method><method><name>decode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>HTTPResponse</declaring-class><inherited/><string>protected decode($data, $how)</string><docblock><description><![CDATA[<p>Decode a body part</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$how]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param><param><name>how</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$how</string></param></params></method></methods><properties><property><name>rawData</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $rawData</string><docblock><description><![CDATA[<p>The raw response, unparsed</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>rawHeader</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $rawHeader</string><docblock><description><![CDATA[<p>The raw header part of the raw response</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>headers</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $headers</string><docblock><description><![CDATA[<p>The parsed headers</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>The parsed data part of the response</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>status</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $status</string><docblock><description><![CDATA[<p>The HTTP status code of the response</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The HTTP version used for the reponse</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>HTTPCookie</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class HTTPCookie</string><implements/><docblock><description><![CDATA[<p>Class fo handling cookies in HTTP requests.</p>]]></description><usedby><used><types><type><![CDATA[<a href='?__plibclass=HTTPRequest#method-__construct'>HTTPRequest::__construct()</a>]]></type></types><description><![CDATA[]]></description></used></usedby><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[HTTP]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>public __construct($name [, $path])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>The name of the cookie file to use</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[<p>The path where to save the cookie file</p>]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>public Set($domain, $cookie)</string><docblock><description><![CDATA[<p>Saves a cookie to the cookie file.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$domain]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cookie]]></variable><description><![CDATA[<p>The raw unparsed cookie</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>domain</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$domain</string></param><param><name>cookie</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cookie</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>public Get($_domain, $_path [, $_name])</string><docblock><description><![CDATA[<p>Lookup cookies in the cookie file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$_domain]]></variable><description><![CDATA[<p>The domain the cookie applies to</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$_path]]></variable><description><![CDATA[<p>The path the cookie applies to</p>]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><variable><![CDATA[$_name]]></variable><description><![CDATA[<p>A name of a value key</p>]]></description></param></params><return><types><type><![CDATA[array]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>_domain</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$_domain</string></param><param><name>_path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$_path</string></param><param><name>_name</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$_name</string></param></params></method><method><name>CreateHeader</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>public CreateHeader([$secure [, $domain [, $path [, $name]]]])</string><docblock><description><![CDATA[<p>Creates a cookie request header.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=HTTPCookie#method-Get'>HTTPCookie::Get()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$secure]]></variable><description><![CDATA[<p>If the cookie is marked as secure it should only be passed on if the
 connection is secure. So if a secure connection is used for the request
 set this to true</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$domain]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>secure</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$secure</string></param><param><name>domain</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$domain</string></param><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param><param><name>name</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>pathInPath</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>private pathInPath($cookie, $request)</string><docblock><description><![CDATA[<p>See if the cookie path is valid for the request path</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cookie]]></variable><description><![CDATA[<p>The path in the cookie</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$request]]></variable><description><![CDATA[<p>The request path</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cookie</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$cookie</string></param><param><name>request</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$request</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>HTTPCookie</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $name</string><docblock><description><![CDATA[<p>The name of the cookie file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $path</string><docblock><description><![CDATA[<p>The path where to store the cookie files</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cookiejar</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $cookiejar</string><docblock><description><![CDATA[<p>The full path to the cookie file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cookies</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $cookies</string><docblock><description><![CDATA[<p>Container for found cookies</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><class><name>Net</name><type>class</type><abstract/><final/><instantiable/><extends/><string>[class Net]</string><implements/><docblock><description><![CDATA[<p>Helper class for network stuff</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.2.1]]></version><package><![CDATA[Protocols]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Net</declaring-class><inherited/><string>protected __construct()</string><docblock><description><![CDATA[<p>Hidden constructor. This class can not be instantiated</p>]]></description></docblock><params/></method><method><name>TMPDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Net</declaring-class><inherited/><string>public static TMPDir([$dir])</string><docblock><description><![CDATA[<p>Getter/setter for the tmp dir</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[]]></variable><description><![CDATA[<p>dir</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dir</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$dir</string></param></params></method><method><name>ServerExit</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Net</declaring-class><inherited/><string>public static ServerExit($code)</string><docblock><description><![CDATA[<p>Exit with status code $code</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If headers are already sent</p>]]></description></throws><since><![CDATA[0.2.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param></params></method><method><name>StatusDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Net</declaring-class><inherited/><string>public static StatusDescription($code)</string><docblock><description><![CDATA[<p>Returns the description of a HTTP status code</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param></params></method><method><name>QueryToArray</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Net</declaring-class><inherited/><string>public static QueryToArray($querystring)</string><docblock><description><![CDATA[<p>Converts a query string into an associativ array</p>]]></description><since><![CDATA[0.2.1]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$querystring]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>querystring</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$querystring</string></param></params></method></methods><properties><property><name>HTTP_STATUS_CODES</name><value><![CDATA[array (
  100 => 'Continue',
  101 => 'Switching Protocols',
  102 => 'Processing',
  200 => 'OK',
  201 => 'Created',
  202 => 'Accepted',
  203 => 'Non-Authoritative Information',
  204 => 'No content',
  205 => 'Reset Content',
  206 => 'Partial Content',
  207 => 'Multistatus',
  300 => 'Multiple Choise',
  301 => 'Moved Permanently',
  302 => 'Found',
  303 => 'See Other',
  304 => 'Not Modified',
  305 => 'Use Proxy',
  306 => 'Switch Proxy',
  307 => 'Temporary Redirect',
  400 => 'Bad Request',
  401 => 'Unauthorized',
  402 => 'Payment Required',
  403 => 'Forbidden',
  404 => 'Not Found',
  405 => 'Method Not Allowed',
  406 => 'Not Acceptable',
  407 => 'Proxy Authentication Required',
  408 => 'Request Timeout',
  409 => 'Conflict',
  410 => 'Gone',
  411 => 'Length Required',
  412 => 'Precondition Failed',
  413 => 'Request Entity Too Large',
  414 => 'Request-URI Too Long',
  415 => 'Unsupported Media Type',
  416 => 'Requested Range Not Satisfiable',
  417 => 'Expectation Failed',
  422 => 'Unprocessable Entity',
  423 => 'Locked',
  424 => 'Failed Dependency',
  425 => 'Unordered Collection',
  426 => 'Upgrade Required',
  449 => 'Retry With',
  500 => 'Internal Server Error',
  501 => 'Not Implemented',
  502 => 'Bad Gateway',
  503 => 'Service Unavailable',
  504 => 'Gateway Timeout',
  505 => 'HTTP Version Not Supported',
  506 => 'Variant Also Negotiates',
  507 => 'Insufficient Storage',
  509 => 'Bandwidth Limit Exceeded',
  510 => 'Not Extended',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $HTTP_STATUS_CODES</string><docblock><description><![CDATA[<p>HTTP status code descriptions
From <a href='http://en.wikipedia.org/wiki/List_of_HTTP_status_codes'>Wikipedia</a></p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>TMP_DIR</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static>1</static><type>null</type><string>private static $TMP_DIR</string><docblock><description><![CDATA[<p>Where to put temporary stuff related to net operations.</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>HTTPMaxRedirectException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class HTTPMaxRedirectException extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for the HTTPClient class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>HTTPRequestException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class HTTPRequestException extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for the HTTPClient class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><class><name>HTTPResponseException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class HTTPResponseException extends Exception</string><implements/><docblock><description><![CDATA[<p>Exception class for the HTTPClient class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[Protocols]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace><namespace name="RC" path="RC"><module><name>SVN.php</name><path>RC/SVN.php</path><namespace>RC</namespace><classpath>RC.SVN</classpath><docblock><description><![CDATA[<p>A set of classes to work with SVN repositories.</p>

<p><strong>NOTE!</strong> Many of the SVN classes uses hidden members. In order to find out what
members is available for each class you will have to inspect the SVN XML
files associated with each class. Since the XML files can look a bit
different some members are created and set dynamically.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.2]]></version><package><![CDATA[Revision Control]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=ADT#class-ADT'>ADT</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=XMLDocument#class-XMLDocument'>XMLDocument</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>SVN</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class SVN]</string><implements/><docblock><description><![CDATA[<p>SVN main abstract class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=ADT#class-ADT'>ADT</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>protected __construct()</string><docblock><description><![CDATA[<p>Hidden constructor</p>]]></description></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>public GetRevision($number)</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>public GetRevisions()</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited/><string>public final static SetBase($path)</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>public __get($index)</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>protected __set($key, $value)</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>protected getPath($path)</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>protected createParser(SVN $object)</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited/><string>protected parseXML($xml)</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>counter</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $counter</string><docblock><description><![CDATA[<p>Counter used when looping through the revisions array through
<a href='?__plibclass=SVN#method-Next'>SVN::Next()</a></p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNEntry</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends>SVN</extends><string>[abstract class SVNEntry extends SVN]</string><implements/><docblock><description><![CDATA[<p>Abstract meta class representing a commit entry</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNEntry</declaring-class><inherited/><string>protected __construct()</string><docblock/><params/></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNEntry</declaring-class><inherited/><string>public __get($index)</string><docblock><description><![CDATA[]]></description><see><types><type><![CDATA[<a href='?__plibclass=SVN#method-__get'>SVN::__get()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public Next() inherited from SVN</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevision($number) inherited from SVN</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevisions() inherited from SVN</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public final static SetBase($path) inherited from SVN</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected __set($key, $value) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __toString() inherited from SVN</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected getPath($path) inherited from SVN</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected createParser(SVN $object) inherited from SVN</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected parseXML($xml) inherited from SVN</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>author</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $author</string><docblock><description><![CDATA[<p>The author of the commit</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>date</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $date</string><docblock><description><![CDATA[<p>The date of the commit</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNLogEntry</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>SVNEntry</extends><string>class SVNLogEntry extends SVNEntry</string><implements/><docblock><description><![CDATA[<p>Represents an entry in a SVN log file</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNLogEntry</declaring-class><inherited/><string>public __construct($revision)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$revision]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>revision</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$revision</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNEntry</declaring-class><inherited>1</inherited><string>public __get($index) inherited from SVNEntry</string><docblock><description><![CDATA[]]></description><see><types><type><![CDATA[<a href='?__plibclass=SVN#method-__get'>SVN::__get()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public Next() inherited from SVN</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevision($number) inherited from SVN</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevisions() inherited from SVN</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public final static SetBase($path) inherited from SVN</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected __set($key, $value) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __toString() inherited from SVN</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected getPath($path) inherited from SVN</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected createParser(SVN $object) inherited from SVN</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected parseXML($xml) inherited from SVN</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $message</string><docblock><description><![CDATA[<p>The actual log message</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>author</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $author</string><docblock><description><![CDATA[<p>The author of the commit</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>date</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $date</string><docblock><description><![CDATA[<p>The date of the commit</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNLog</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>SVN</extends><string>class SVNLog extends SVN</string><implements/><docblock><description><![CDATA[<p>SVNLog parses a repository log file generated with the <code>--xml</code> flag, i.e:
<code>svn log --xml &gt; mylog.xml</code></p>

<p><strong>Programmatical note!</strong><br/>
This class uses a SAX parser since these log files tend to become rather
extensive. The SAX parser uses way, way less memory than a DOM parser
for instance.</p>

<ul>
<li><a href='http://en.wikipedia.org/wiki/SAX'>Basic description of SAX</a></li>
<li><a href='http://php.net/manual/en/function.xml-parser-create.php'>PHP SAX</a></li>
<li><a href='http://en.wikipedia.org/wiki/Document_Object_Model'>Basics of DOM</a></li>
<li><a href='http://php.net/manual/en/ref.dom.php'>PHP DOM</a></li>
</ul>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNLog</declaring-class><inherited/><string>public __construct($file [, $revision])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The full path to the log file</p>]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param><param><name>revision</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$revision</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNLog</declaring-class><inherited/><string>public Parse([$revision])</string><docblock><description><![CDATA[<p>Parse the log file...</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$revision]]></variable><description><![CDATA[<p>Only get this revision. 0 means get all revisions</p>]]></description></param></params></docblock><params><param><name>revision</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$revision</string></param></params></method><method><name>tagCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNLog</declaring-class><inherited/><string>protected tagCallback($parser, $name, $attr)</string><docblock><description><![CDATA[<p>Callback for opening XML tags</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>dataCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNLog</declaring-class><inherited/><string>protected dataCallback($parser, $data)</string><docblock><description><![CDATA[<p>Callback for tag data</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>tagEndCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNLog</declaring-class><inherited/><string>protected tagEndCallback($parser, $name)</string><docblock><description><![CDATA[<p>Callback for closing tags</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public Next() inherited from SVN</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevision($number) inherited from SVN</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevisions() inherited from SVN</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public final static SetBase($path) inherited from SVN</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __get($index) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected __set($key, $value) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __toString() inherited from SVN</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected getPath($path) inherited from SVN</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected createParser(SVN $object) inherited from SVN</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected parseXML($xml) inherited from SVN</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>logfile</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $logfile</string><docblock><description><![CDATA[<p>The SVN log file to parse</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>inEntry</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $inEntry</string><docblock><description><![CDATA[<p>Flag for telling if we're inside a LOGENTRY or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>currRev</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $currRev</string><docblock><description><![CDATA[<p>The current revision we're in</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>currIndex</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $currIndex</string><docblock><description><![CDATA[<p>Current node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>getRevision</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $getRevision</string><docblock><description><![CDATA[<p>If set only find this revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>i</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $i</string><docblock><description><![CDATA[<p>Counter to track the current array index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNInfo</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>SVN</extends><string>class SVNInfo extends SVN</string><implements/><docblock><description><![CDATA[<p>Parses an XML file generated through "svn info --xml" and turns that into
an object reprsentation of the XML file.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNInfo</declaring-class><inherited/><string>public __construct($logfile [, $path])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$logfile]]></variable><description><![CDATA[<p>The log file to parse</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>logfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$logfile</string></param><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNInfo</declaring-class><inherited/><string>protected parse()</string><docblock><description><![CDATA[<p>Parse the XML file</p>]]></description></docblock><params/></method><method><name>tagCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNInfo</declaring-class><inherited/><string>protected tagCallback($parser, $tag, $attr)</string><docblock><description><![CDATA[<p>Tag callback.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=SVN#method-createParser'>SVN::createParser()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>dataCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNInfo</declaring-class><inherited/><string>protected dataCallback($parser, $data)</string><docblock><description><![CDATA[<p>Data callback</p>]]></description><link><![CDATA[<a href='?__plibclass=SVN#method-createParser'>SVN::createParser()</a>]]></link><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>tagEndCallback</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVNInfo</declaring-class><inherited/><string>protected tagEndCallback($parser, $tag)</string><docblock><description><![CDATA[<p>Closing tag callback</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param></params></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public Next() inherited from SVN</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevision($number) inherited from SVN</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevisions() inherited from SVN</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public final static SetBase($path) inherited from SVN</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __get($index) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected __set($key, $value) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __toString() inherited from SVN</string><docblock><description><![CDATA[<p>Converts the object to a string</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-__toString'>PLib::__toString()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected getPath($path) inherited from SVN</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected createParser(SVN $object) inherited from SVN</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected parseXML($xml) inherited from SVN</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>logfile</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $logfile</string><docblock><description><![CDATA[<p>The file to parse</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>kind</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $kind</string><docblock><description><![CDATA[<p>Kind of file (dir, file)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The internal repository path to the file given info about</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>url</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $url</string><docblock><description><![CDATA[<p>The URL to the file given info about.
I.e http://server.com/svn/app/trunk/lib/File.ext</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>repository</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $repository</string><docblock><description><![CDATA[<p>The repository node. Contains "root" and "uuid".</p>]]></description><var><![CDATA[SVNMetaClass]]></var></docblock></property><property><name>commit</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $commit</string><docblock><description><![CDATA[<p>Commit info about the file given info about. Contains "revision",
"author" and "date"</p>]]></description><var><![CDATA[SVNMetaClass]]></var></docblock></property><property><name>level</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $level</string><docblock><description><![CDATA[<p>The current node level the parser's at.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>currentIndex</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $currentIndex</string><docblock><description><![CDATA[<p>The current node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>currentAttr</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $currentAttr</string><docblock><description><![CDATA[<p>The current node attributes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>currentObject</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $currentObject</string><docblock><description><![CDATA[<p>The current SVNMetaClass object</p>]]></description><var><![CDATA[SVNMetaClass]]></var></docblock></property><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNMetaClass</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>SVN</extends><string>class SVNMetaClass extends SVN</string><implements/><docblock><description><![CDATA[<p>Generic SVN meta class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Subversion]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNMetaClass</declaring-class><inherited/><string>public __construct([$name [, $attr]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>Populate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNMetaClass</declaring-class><inherited/><string>public Populate($array)</string><docblock><description><![CDATA[<p>Converts an assoc array into members of this object</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$array</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVNMetaClass</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Magic PHP method (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public Next() inherited from SVN</string><docblock><description><![CDATA[<p>Get the next item in the revisions array</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetRevision</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevision($number) inherited from SVN</string><docblock><description><![CDATA[<p>Get the specified revision</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$number]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SVNEntry#class-SVNEntry'>SVNEntry</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>number</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$number</string></param></params></method><method><name>GetRevisions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public GetRevisions() inherited from SVN</string><docblock><description><![CDATA[<p>Returns the revisions array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetBase</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public final static SetBase($path) inherited from SVN</string><docblock><description><![CDATA[<p>Set the base path for where to look for the XML files</p>

<div class='code'><code>SVN<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>SetBase<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;/home/poppa/svn/app/&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$log</b></span>&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNLog<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;logfile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$info</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SVNInfo<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;infofile.xml&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>public __get($index) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected __set($key, $value) inherited from SVN</string><docblock><description><![CDATA[<p>Magic PHP setter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>getPath</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected getPath($path) inherited from SVN</string><docblock><description><![CDATA[<p>Returns the full path to the XML file passed to one of the constructors</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>createParser</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected createParser(SVN $object) inherited from SVN</string><docblock><description><![CDATA[<p>Creates a parser resource to use for parsing the XML files.</p>

<p>The object calling this method must have the methods "tagCallback",
"tagEndCallback" and "dataCallback" defined or else an exception will
be thrown.</p>]]></description><uses><use><types><type><![CDATA[<a href='?__plibclass=SVN#property-parser'>SVN::$parser</a>]]></type></types><description><![CDATA[<p>$parser</p>]]></description></use></uses><throws><types><type><![CDATA[<a href='?__plibclass=SVNException#class-SVNException'>SVNException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='?__plibclass=SVN#class-SVN'>SVN</a>]]></type></types><variable><![CDATA[$object]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>object</name><value/><reference/><optional/><class>SVN</class><array/><nullable/><string>SVN $object</string></param></params></method><method><name>parseXML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SVN</declaring-class><inherited>1</inherited><string>protected parseXML($xml) inherited from SVN</string><docblock><description><![CDATA[<p>Run the <a href='?__plibclass=SVN#property-parser'>SVN::$parser</a> parser.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the class</p>]]></description><var><![CDATA[unknown_type]]></var></docblock></property><property><name>BASE_PATH</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $BASE_PATH</string><docblock><description><![CDATA[<p>Base path to the SVN XML files</p>]]></description><var><![CDATA[$string]]></var></docblock></property><property><name>revision</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revision</string><docblock><description><![CDATA[<p>The current revision</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>revisions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $revisions</string><docblock><description><![CDATA[<p>Array for storing revision entries</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>dateKeys</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dateKeys</string><docblock><description><![CDATA[<p>These members shall be converted into a <a href='?__plibclass=Date#class-Date'>Date</a> object</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parser</string><docblock><description><![CDATA[<p>The SAX parser object for parsing the SVN XML files</p>]]></description><var><![CDATA[resource]]></var></docblock></property></properties></class><class><name>SVNException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class SVNException extends Exception</string><implements/><docblock><description><![CDATA[<p>Generic SVN exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Revision Control]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module></namespace><namespace name="Reflection" path="Reflection"><module><name>PLibReflection.php</name><path>Reflection/PLibReflection.php</path><namespace>Reflection</namespace><classpath>Reflection.PLibReflection</classpath><docblock><description><![CDATA[<p>PLibReflection is mainly used to generate the short documentation of
the PLib library but the classes can be used to Reflect any object, member,
method and so on.</p>]]></description><todo><![CDATA[<ul>
<li>Need to implement support for constants and class constants.</li>
<li>Implement support for @inheritdoc in docblocks.</li>
<li>If a module with more than one class has shared method names the anchor
links to the methods will always lead to the first occuring method.
Thus the method anchors needs to be made unique. The same goes for
class members.</li>
</ul>]]></todo><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage><uses><use><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=XMLDocument#class-XMLDocument'>XMLDocument</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>PLibReflection</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class PLibReflection]</string><implements/><docblock><description><![CDATA[<p>An abstract meta class that the other PLibReflection* classes inherit.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>private __construct()</string><docblock><description><![CDATA[<p>Hidden constructor.</p>]]></description></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited/><string>public static EscapeString($s)</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>protected _docBlock($block)</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public __get($index)</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Inject($key, $value)</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public ReflectionObject()</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Docblock([$index])</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited/><string>public static BasePath([$path])</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Name()</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Description()</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Version()</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Author()</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>public Parent()</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>protected final docblockToXml(XMLNode $node)</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>protected addShallowArray($elements, $nodeName, XMLNode $node)</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node)</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>protected final arbitraryToXml(XMLNode $node)</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>abstract public Xml()</string><docblock><description><![CDATA[<p>Convert the object into an XML tree</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited/><string>abstract public __toString()</string><docblock><description><![CDATA[<p>A PHP "magic" method. Gives the opportunity to create an abritray string
of the object. (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionModule</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibReflection</extends><string>class PLibReflectionModule extends PLibReflection</string><implements/><docblock><description><![CDATA[<p>This class represents a file. Since the Reflection classes don't have any
methods for grabbing top level information we do it manually here.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public __construct($file)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>private parse()</string><docblock><description><![CDATA[<p>Parse the file. Look for all classes and functions in the current file.</p>

<p></p>]]></description><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddClass</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public AddClass(PLibReflectionClass $class)</string><docblock><description><![CDATA[<p>Add a class to the classes array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionClass#class-PLibReflectionClass'>PLibReflectionClass</a>]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>class</name><value/><reference/><optional/><class>PLibReflectionClass</class><array/><nullable/><string>PLibReflectionClass $class</string></param></params></method><method><name>AddFunction</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public AddFunction(PLibReflectionFunction $func)</string><docblock><description><![CDATA[<p>Add a function to the functions array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionFunction#class-PLibReflectionFunction'>PLibReflectionFunction</a>]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>func</name><value/><reference/><optional/><class>PLibReflectionFunction</class><array/><nullable/><string>PLibReflectionFunction $func</string></param></params></method><method><name>GetFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public GetFile()</string><docblock><description><![CDATA[<p>Returns the internal file path, relative from PLib's root</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionModule</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock><description><![CDATA[<p>The path to the file</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>classes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $classes</string><docblock><description><![CDATA[<p>Container for all classes in this file</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>functions</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $functions</string><docblock><description><![CDATA[<p>Container for all functions in this file</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>includes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $includes</string><docblock><description><![CDATA[<p>Container for included files</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>constants</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $constants</string><docblock><description><![CDATA[<p>Container for constants</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>AbstractPLibReflectionFunction</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends>PLibReflection</extends><string>[abstract class AbstractPLibReflectionFunction extends PLibReflection]</string><implements/><docblock><description><![CDATA[<p>Abstract meta class for <a href='?__plibclass=PLibReflectionFunction#class-PLibReflectionFunction'>PLibReflectionFunction</a> and
<a href='?__plibclass=PLibReflectionMethod#class-PLibReflectionMethod'>PLibReflectionMethod</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>AddParam</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited/><string>public AddParam(PLibReflectionParam $param)</string><docblock><description><![CDATA[<p>Add a param to the params array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionParam#class-PLibReflectionParam'>PLibReflectionParam</a>]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>param</name><value/><reference/><optional/><class>PLibReflectionParam</class><array/><nullable/><string>PLibReflectionParam $param</string></param></params></method><method><name>ParamsToString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited/><string>public ParamsToString()</string><docblock><description><![CDATA[<p>Turns the params array into a readable string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>paramsToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited/><string>protected paramsToXml(XMLNode $n)</string><docblock><description><![CDATA[<p>Converts the params to an XML tree and appends that to node $n</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $n</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>private __construct() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Hidden constructor.</p>]]></description></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>abstract public Xml() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Convert the object into an XML tree</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>abstract public __toString() inherited from PLibReflection</string><docblock><description><![CDATA[<p>A PHP "magic" method. Gives the opportunity to create an abritray string
of the object. (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>params</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $params</string><docblock><description><![CDATA[<p>Container for the params to the method</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionFunction</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractPLibReflectionFunction</extends><string>class PLibReflectionFunction extends AbstractPLibReflectionFunction</string><implements/><docblock><description><![CDATA[<p>This class represents a <a href='http://php.net/manual-lookup.php?pattern=ReflectionFunction&amp;lang=en'>ReflectionFunction</a></p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionFunction</declaring-class><inherited/><string>public __construct(ReflectionFunction $ref)</string><docblock><description><![CDATA[<p>Constrcutor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionFunction&amp;lang=en'>ReflectionFunction</a>]]></type></types><variable><![CDATA[$ref]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>ref</name><value/><reference/><optional/><class>ReflectionFunction</class><array/><nullable/><string>ReflectionFunction $ref</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionFunction</declaring-class><inherited/><string>protected parse(ReflectionFunction $func)</string><docblock><description><![CDATA[<p>Pull out info from the Reflection object and populate this object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionFunction&amp;lang=en'>ReflectionFunction</a>]]></type></types><variable><![CDATA[$func]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>func</name><value/><reference/><optional/><class>ReflectionFunction</class><array/><nullable/><string>ReflectionFunction $func</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionFunction</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionFunction</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddParam</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>public AddParam(PLibReflectionParam $param) inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Add a param to the params array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionParam#class-PLibReflectionParam'>PLibReflectionParam</a>]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>param</name><value/><reference/><optional/><class>PLibReflectionParam</class><array/><nullable/><string>PLibReflectionParam $param</string></param></params></method><method><name>ParamsToString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>public ParamsToString() inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Turns the params array into a readable string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>paramsToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>protected paramsToXml(XMLNode $n) inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Converts the params to an XML tree and appends that to node $n</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $n</string></param></params></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>internal</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $internal</string><docblock><description><![CDATA[<p>Is the function internal (built-in) or user defined</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>reference</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reference</string><docblock><description><![CDATA[<p>Does the function return a reference or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>params</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $params</string><docblock><description><![CDATA[<p>Container for the params to the method</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionClass</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibReflection</extends><string>class PLibReflectionClass extends PLibReflection</string><implements/><docblock><description><![CDATA[<p>Represents a reflection class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>public __construct(ReflectionClass $class [, PLibReflection $parent])</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionClass&amp;lang=en'>ReflectionClass</a>]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>class</name><value/><reference/><optional/><class>ReflectionClass</class><array/><nullable/><string>ReflectionClass $class</string></param><param><name>parent</name><value/><reference/><optional>1</optional><class>PLibReflection</class><array/><nullable>1</nullable><string>PLibReflection $parent</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>protected parse(ReflectionClass $class)</string><docblock><description><![CDATA[<p>Parses the reflection class and populates this object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionClass&amp;lang=en'>ReflectionClass</a>]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>class</name><value/><reference/><optional/><class>ReflectionClass</class><array/><nullable/><string>ReflectionClass $class</string></param></params></method><method><name>AddMethod</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>public AddMethod(PLibReflectionMethod $method)</string><docblock><description><![CDATA[<p>Add a method to the methods array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionMethod#class-PLibReflectionMethod'>PLibReflectionMethod</a>]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>method</name><value/><reference/><optional/><class>PLibReflectionMethod</class><array/><nullable/><string>PLibReflectionMethod $method</string></param></params></method><method><name>AddPropery</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>public AddPropery(PLibReflectionProperty $prop)</string><docblock><description><![CDATA[<p>Add a memeber to the members array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionProperty#class-PLibReflectionProperty'>PLibReflectionProperty</a>]]></type></types><variable><![CDATA[$prop]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>prop</name><value/><reference/><optional/><class>PLibReflectionProperty</class><array/><nullable/><string>PLibReflectionProperty $prop</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionClass</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type of class, either class or interface</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>abstract</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $abstract</string><docblock><description><![CDATA[<p>Is the class abstract or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>final</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $final</string><docblock><description><![CDATA[<p>Is the class final or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>extends</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $extends</string><docblock><description><![CDATA[<p>Name of the class this class extends, if any</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>instantiable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $instantiable</string><docblock><description><![CDATA[<p>Is the class instantiable or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>ifaces</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ifaces</string><docblock><description><![CDATA[<p>Container for interfaces this class implements, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>constants</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $constants</string><docblock><description><![CDATA[<p>Container for class constants</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>properties</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $properties</string><docblock><description><![CDATA[<p>Container for class members</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>methods</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $methods</string><docblock><description><![CDATA[<p>Container for class methods</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionMethod</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractPLibReflectionFunction</extends><string>class PLibReflectionMethod extends AbstractPLibReflectionFunction</string><implements/><docblock><description><![CDATA[<p>Represents a reflection class method</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionMethod</declaring-class><inherited/><string>public __construct(ReflectionMethod $method [, $className])</string><docblock><description><![CDATA[<p>Constrcutor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionMethod&amp;lang=en'>ReflectionMethod</a>]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$className]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>method</name><value/><reference/><optional/><class>ReflectionMethod</class><array/><nullable/><string>ReflectionMethod $method</string></param><param><name>className</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$className</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionMethod</declaring-class><inherited/><string>protected parse(ReflectionMethod $method [, $className])</string><docblock><description><![CDATA[<p>Pull out info from the Reflection object and populate this object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionMethod&amp;lang=en'>ReflectionMethod</a>]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$className]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>method</name><value/><reference/><optional/><class>ReflectionMethod</class><array/><nullable/><string>ReflectionMethod $method</string></param><param><name>className</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$className</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionMethod</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionMethod</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddParam</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>public AddParam(PLibReflectionParam $param) inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Add a param to the params array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=PLibReflectionParam#class-PLibReflectionParam'>PLibReflectionParam</a>]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>param</name><value/><reference/><optional/><class>PLibReflectionParam</class><array/><nullable/><string>PLibReflectionParam $param</string></param></params></method><method><name>ParamsToString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>public ParamsToString() inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Turns the params array into a readable string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>paramsToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractPLibReflectionFunction</declaring-class><inherited>1</inherited><string>protected paramsToXml(XMLNode $n) inherited from AbstractPLibReflectionFunction</string><docblock><description><![CDATA[<p>Converts the params to an XML tree and appends that to node $n</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $n</string></param></params></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>className</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $className</string><docblock><description><![CDATA[<p>The name of the class this method exists in.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>constructor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $constructor</string><docblock><description><![CDATA[<p>Is the method a constructor</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>destructor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $destructor</string><docblock><description><![CDATA[<p>Is the method a destructor</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>visibility</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $visibility</string><docblock><description><![CDATA[<p>Visibility of the method: private, protected, public</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>abstract</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $abstract</string><docblock><description><![CDATA[<p>Is the method abstract</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>final</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $final</string><docblock><description><![CDATA[<p>Is the method final or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>static</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $static</string><docblock><description><![CDATA[<p>Is the method static or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>reference</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reference</string><docblock><description><![CDATA[<p>Does this method return a reference</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>declaringClass</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $declaringClass</string><docblock><description><![CDATA[<p>The class in which this method is declared</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>inherited</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $inherited</string><docblock><description><![CDATA[<p>Is the method inherited or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>params</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $params</string><docblock><description><![CDATA[<p>Container for the params to the method</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionConstant</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibReflection</extends><string>class PLibReflectionConstant extends PLibReflection</string><implements/><docblock/><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionConstant</declaring-class><inherited/><string>public __construct($name, $value, PLibReflectionClass $parent)</string><docblock/><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>parent</name><value/><reference/><optional/><class>PLibReflectionClass</class><array/><nullable/><string>PLibReflectionClass $parent</string></param></params></method><method><name>resolvType</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionConstant</declaring-class><inherited/><string>protected resolvType()</string><docblock/><params/></method><method><name>Value</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionConstant</declaring-class><inherited/><string>public Value()</string><docblock/><params/></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionConstant</declaring-class><inherited/><string>public Xml()</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionConstant</declaring-class><inherited/><string>public __toString()</string><docblock/><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock/></property><property><name>value</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $value</string><docblock/></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock/></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionProperty</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibReflection</extends><string>class PLibReflectionProperty extends PLibReflection</string><implements/><docblock><description><![CDATA[<p>Represents a reflection class member</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionProperty</declaring-class><inherited/><string>public __construct(ReflectionProperty $prop)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionProperty&amp;lang=en'>ReflectionProperty</a>]]></type></types><variable><![CDATA[$prop]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>prop</name><value/><reference/><optional/><class>ReflectionProperty</class><array/><nullable/><string>ReflectionProperty $prop</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionProperty</declaring-class><inherited/><string>protected parse(ReflectionProperty $p)</string><docblock><description><![CDATA[<p>Parse the property</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionProperty&amp;lang=en'>ReflectionProperty</a>]]></type></types><variable><![CDATA[$p]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>p</name><value/><reference/><optional/><class>ReflectionProperty</class><array/><nullable/><string>ReflectionProperty $p</string></param></params></method><method><name>GetVisibility</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionProperty</declaring-class><inherited/><string>public GetVisibility()</string><docblock><description><![CDATA[<p>Returns the "visibility of the property, i.e. private, protected or
public</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>private|protected|public</p>]]></description></return></docblock><params/></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionProperty</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionProperty</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>defaultValue</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $defaultValue</string><docblock><description><![CDATA[<p>Default property value</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>isDefault</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isDefault</string><docblock><description><![CDATA[<p>Has a default value or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>isStatic</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isStatic</string><docblock><description><![CDATA[<p>Is the property static or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>isPrivate</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isPrivate</string><docblock><description><![CDATA[<p>Is the property private or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>isProtected</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isProtected</string><docblock><description><![CDATA[<p>Is the property protected or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>isPublic</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isPublic</string><docblock><description><![CDATA[<p>Is the property public or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>datatype</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $datatype</string><docblock><description><![CDATA[<p>Datatype of the property</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class><class><name>PLibReflectionParam</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibReflection</extends><string>class PLibReflectionParam extends PLibReflection</string><implements/><docblock><description><![CDATA[<p>Represents a reflection class method argument</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Reflection]]></package><subpackage><![CDATA[PLibReflection]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionParam</declaring-class><inherited/><string>public __construct(ReflectionParameter $param)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionParameter&amp;lang=en'>ReflectionParameter</a>]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>param</name><value/><reference/><optional/><class>ReflectionParameter</class><array/><nullable/><string>ReflectionParameter $param</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflectionParam</declaring-class><inherited/><string>protected parse(ReflectionParameter $param)</string><docblock><description><![CDATA[<p>Parse the reflection object and populate this object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=ReflectionParameter&amp;lang=en'>ReflectionParameter</a>]]></type></types><variable><![CDATA[$param]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>param</name><value/><reference/><optional/><class>ReflectionParameter</class><array/><nullable/><string>ReflectionParameter $param</string></param></params></method><method><name>Xml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionParam</declaring-class><inherited/><string>public Xml()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflectionParam</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>{@inheritdoc}</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>EscapeString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static EscapeString($s) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Escapes control chars</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$s]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>s</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$s</string></param></params></method><method><name>_docBlock</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected _docBlock($block) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Creates an <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> instance</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$block]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>block</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$block</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public __get($index) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Magic PHP getter (see
<a href='http://php.net/manual/en/language.oop5.magic.php'>Magic methods</a>).</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>Inject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Inject($key, $value) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add info to the $arbitrary array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>ReflectionObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public ReflectionObject() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the reflection object of the instance</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Reflection&amp;lang=en'>Reflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Docblock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Docblock([$index]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Method to retreive a memeber from the docblock object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$index]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>index</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$index</string></param></params></method><method><name>BasePath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public static BasePath([$path]) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Set/get the base path. The base path will be stripped off of the file path
whenever appropriate.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>path</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Name() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the name of this instance</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Description</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Description() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the description for the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Version() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the version of the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Author</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Author() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the author|s ofr the current instance if set in the
docblock object</p>]]></description><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Parent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>public Parent() inherited from PLibReflection</string><docblock><description><![CDATA[<p>Returns the parent object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=PLibReflection#class-PLibReflection'>PLibReflection</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>docblockToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final docblockToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=DocblockParser#class-DocblockParser'>DocblockParser</a> object to an XML tree</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addShallowArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addShallowArray($elements, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has no parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedReader<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>example<span style='color: #0000FF;'>&#62;</span>FeedWriter<span style='color: #0000FF;'>.</span>xmpl<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>example<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>addDeepArray</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected addDeepArray($elements, $parentNodeName, $nodeName, XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Add an array of docbloc tags that has a parent node</p>

<div class='code'><code>&#160;&#160;<span style='color: #0000FF;'>&#60;</span>params<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;&#160;&#160;<span style='color: #0000FF;'>&#60;</span>param<span style='color: #0000FF;'>&#62;</span>Some&#160;other&#160;param<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/>&#160;&#160;<span style='color: #0000FF;'>&#60;</span><span style='color: #0000FF;'>/</span>param<span style='color: #0000FF;'>&#62;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$elements]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$parentNodeName]]></variable><description><![CDATA[<p>Given the example above this would be "params"</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$nodeName]]></variable><description><![CDATA[<p>Given the example above this would be "param"</p>]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>elements</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$elements</string></param><param><name>parentNodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parentNodeName</string></param><param><name>nodeName</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$nodeName</string></param><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method><method><name>arbitraryToXml</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>PLibReflection</declaring-class><inherited>1</inherited><string>protected final arbitraryToXml(XMLNode $node) inherited from PLibReflection</string><docblock><description><![CDATA[<p>Converts the <a href='?__plibclass=PLibReflection#property-arbitrary'>PLibReflection::$arbitrary</a> array to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>XMLNode</class><array/><nullable/><string>XMLNode $node</string></param></params></method></methods><properties><property><name>defaultValue</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $defaultValue</string><docblock><description><![CDATA[<p>The default value of the param</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>reference</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reference</string><docblock><description><![CDATA[<p>Is the param passed as reference</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>array</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $array</string><docblock><description><![CDATA[<p>Is the param an array?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>optional</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $optional</string><docblock><description><![CDATA[<p>Is the param optional</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>class</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $class</string><docblock><description><![CDATA[<p>Does the param need to be an instance of some kind</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>nullable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nullable</string><docblock><description><![CDATA[<p>Can the param be null</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the instance (class name, method name, param name...)</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>docblock</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $docblock</string><docblock><description><![CDATA[<p>Docblock object</p>]]></description><var><![CDATA[DocblockParser]]></var></docblock></property><property><name>reflectionObject</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reflectionObject</string><docblock><description><![CDATA[<p>The internal reflection object of the instance</p>]]></description><var><![CDATA[Reflection]]></var></docblock></property><property><name>errwarn</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $errwarn</string><docblock><description><![CDATA[<p>Where we keep errors and/or warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>arbitrary</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $arbitrary</string><docblock><description><![CDATA[<p>Where we can inject arbitrary info</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>parent</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $parent</string><docblock><description><![CDATA[<p>Parent instance</p>]]></description><var><![CDATA[PLibReflection]]></var></docblock></property><property><name>basepath</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $basepath</string><docblock><description><![CDATA[<p>Base path to calulate file paths from.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLibReflection#method-BasePath'>PLibReflection::BasePath()</a>]]></type></types><description><![CDATA[]]></description></see><staticvar><![CDATA[string]]></staticvar></docblock></property></properties></class></module></namespace><namespace name="Security" path="Security"><module><name>SimpleAuth.php</name><path>Security/SimpleAuth.php</path><namespace>Security</namespace><classpath>Security.SimpleAuth</classpath><docblock><description><![CDATA[<p>Simple authentication module</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Security]]></package><version><![CDATA[0.1]]></version></docblock><class><name>SimpleAuth</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class SimpleAuth</string><implements/><docblock><description><![CDATA[<p>SimpleAuth authentication class</p>

<p>This class provides a simple authentication mechanism. It uses either a
SQLite or MySQL database table to store the users and it can use an already
existing <a href='?__plibclass=DB#class-DB'>DB</a> object or create one. It can either do a "basic
authentication" or you can create a web form and tell SimpleAuth to store
the authentication in a cookie instead.</p>

<p><strong>Here's how to use a basic authentication</strong></p>

<div class='code'><code><span style='color: #990000;'><b>$auth</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SimpleAuth<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;sqlite:///path/to/db.sqlite&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;myapp&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>!</span><span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>IsAuthenticated<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>BasicAuth<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;h1&#62;401&#160;Unauthorized&#60;/h1&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>die</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Hi&#160;there&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;realname&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>

<p><strong>And this is how a cookie authentication could look like</strong></p>

<div class='code'><code><span style='color: #990000;'><b>$auth</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SimpleAuth<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;sqlite:///path/to/db.sqlite&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;myapp&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>SetAuthMethod<span style='color: #0000FF;'>(</span>SimpleAuth<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>AUTH_COOKIE<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>!</span><span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>IsAuthenticated<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>isset</b></span><span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;login&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Authenticate<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;username&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #990000;'><b>$_POST</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;password&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>)</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;Redirect<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$_SERVER</b></span><span style='color: #0000FF;'>[</span><span style='color: #008800;'>&#39;PHP_SELF&#39;</span><span style='color: #0000FF;'>]</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;p&#62;Bad&#160;username&#160;or&#160;password.&#160;Try&#160;again!&#60;/p&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #0000FF;'>}</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>require_once</b></span>&#160;<span style='color: #008800;'>&#39;login-form.php&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>die</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;Hi&#160;there&#160;&#34;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Get<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;realname&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Security]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public __construct($dbcon, $appname [, $reqLevel [, $reqLevelRule=1]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dbcon]]></variable><description><![CDATA[<p>This can already be an existing database object derived from <a href='?__plibclass=DB#class-DB'>DB</a>
 or a connection string according to <a href='?__plibclass=DB#method-Create'>DB::Create()</a>.</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$appname]]></variable><description><![CDATA[<p>Is used to separate users of different sites/applications. The same
 database and table can be used for multiple sites/application if the
 $appname is set.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$reqLevel]]></variable><description><![CDATA[<p>A level to match a user's level against. How to match it is determined
 by $reqLevelRule.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$reqLevelRule]]></variable><description><![CDATA[<p>Sets the rule for how to match user's levels againt $reqLevel.
 Use the class constants <code>LEVEL_*</code> (bit flags) to set the rule.</p>

<ul>
<li><p>SimpleAuth::LEVEL_VOID<br/>
Means I don't give a crap about levels</p></li>
<li><p>SimpleAuth::LEVEL_EQ<br/>
Means the user's level must match the given level.</p></li>
<li><p>SimpleAuth::LEVEL_GT<br/>
The user's level must be greater than the given level.</p></li>
<li><p>SimpleAuth::LEVEL_LT<br/>
The user's level must be less than the given level.</p>

<p>Since the constants are bitflags you can combine <code>LEVEL_EQ</code> with
<code>LEVEL_GT</code> or <code>LEVEL_LT</code> if a user's level must be equal to OR greater
than, or equal to OR less than.</p></li>
</ul>]]></description></param></params></docblock><params><param><name>dbcon</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$dbcon</string></param><param><name>appname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$appname</string></param><param><name>reqLevel</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$reqLevel</string></param><param><name>reqLevelRule</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$reqLevelRule=1</string></param></params></method><method><name>SetAuthMethod</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public SetAuthMethod($mode)</string><docblock><description><![CDATA[<p>Set the authentication mode</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$mode]]></variable><description><![CDATA[<p>Either SimpleAuth::AUTH_BASIC or SimpleAuth::AUTH_COOKIE</p>]]></description></param></params></docblock><params><param><name>mode</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$mode</string></param></params></method><method><name>TableName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>SimpleAuth</declaring-class><inherited/><string>public static TableName([$tablename])</string><docblock><description><![CDATA[<p>Setter/getter for the table name</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tablename]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tablename</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$tablename</string></param></params></method><method><name>SetupTable</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public SetupTable()</string><docblock><description><![CDATA[<p>Set up the table</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws></docblock><params/></method><method><name>SetRealm</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public SetRealm($realm)</string><docblock><description><![CDATA[<p>Set the realm for a basic authentication.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$realm]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>realm</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$realm</string></param></params></method><method><name>SetSalt</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>SimpleAuth</declaring-class><inherited/><string>public static SetSalt($salt)</string><docblock><description><![CDATA[<p>Set the password salt to use when storing passwords in the database.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$salt]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>salt</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$salt</string></param></params></method><method><name>GetSalt</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public GetSalt()</string><docblock><description><![CDATA[<p>Returns the password salt</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsAuthenticated</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public IsAuthenticated()</string><docblock><description><![CDATA[<p>Check if we've got an authentication or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>BasicAuth</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public BasicAuth()</string><docblock><description><![CDATA[<p>Invoke a basic authentication</p>

<p>You can take care of the logic behind an aborted authentication:</p>

<div class='code'><code><span style='color: #990000;'><b>$auth</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;SimpleAuth<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;sqlite:///path/to/db.sqlite&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;myapp&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #000099;'><b>if</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>!</span><span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>IsAuthenticated<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;<span style='color: #990000;'><b>$auth</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>BasicAuth<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;&#60;h1&#62;401&#160;Unauthorized!&#60;/h1&#62;&#34;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>die</b></span><span style='color: #0000FF;'>;</span><br/><span style='color: #0000FF;'>}</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#34;You&#39;r&#160;in&#34;</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description></docblock><params/></method><method><name>Authenticate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public Authenticate($username, $password)</string><docblock><description><![CDATA[<p>Authenticate a user</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$username]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$password]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>username</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$username</string></param><param><name>password</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$password</string></param></params></method><method><name>UnAuthenticate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public UnAuthenticate()</string><docblock><description><![CDATA[<p>Drop the authentication.
Only works for cookie authentication.</p>]]></description></docblock><params/></method><method><name>AddUser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public AddUser($username, $password, $realname, $email [, $level [, $appname]])</string><docblock><description><![CDATA[<p>Add a user to the database</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$username]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$password]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$realname]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$email]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$level]]></variable><description><![CDATA[<p>Authentication level. This has no meaning if you don't give it one</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>username</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$username</string></param><param><name>password</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$password</string></param><param><name>realname</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$realname</string></param><param><name>email</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$email</string></param><param><name>level</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$level</string></param><param><name>appname</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$appname</string></param></params></method><method><name>DropUser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public DropUser($userId)</string><docblock><description><![CDATA[<p>Delete a user</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$userId]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>userId</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$userId</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public Get($which)</string><docblock><description><![CDATA[<p>Getter for user fields</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>The field to get.</p>]]></description></param></params></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>Set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public Set($which, $what)</string><docblock><description><![CDATA[<p>Set any of the user database fields</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>GetUser</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public GetUser($handle [, $tieToAppname=1])</string><docblock><description><![CDATA[<p>Returns a</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=DBQueryFail#class-DBQueryFail'>DBQueryFail</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$handle]]></variable><description><![CDATA[<p>Can either be the username or the user id.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$tieToAppname]]></variable><description><![CDATA[<p>Only allow users of the current appname</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=SimpleAuthUser#class-SimpleAuthUser'>SimpleAuthUser</a>]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>handle</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$handle</string></param><param><name>tieToAppname</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$tieToAppname=1</string></param></params></method><method><name>Inspect</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public Inspect([$tieToAppname=1])</string><docblock><description><![CDATA[<p>Just prints out the contents of the database table</p>]]></description></docblock><params><param><name>tieToAppname</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$tieToAppname=1</string></param></params></method><method><name>Iterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public Iterator([$tieToAppname=1])</string><docblock><description><![CDATA[<p>Returns a result set of the entire table</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$tieToAppName]]></variable><description><![CDATA[<p>Only list users belongs to the current appname</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tieToAppname</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$tieToAppname=1</string></param></params></method><method><name>NumberOfUsers</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public NumberOfUsers([$tieToAppName=1])</string><docblock><description><![CDATA[<p>Returns the number of users in the table</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$tieToAppName]]></variable><description><![CDATA[<p>If "false" all users will be counted. Default is to count only the users
  beloning to the current appname</p>]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tieToAppName</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$tieToAppName=1</string></param></params></method><method><name>GetDbPath</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuth</declaring-class><inherited/><string>public GetDbPath()</string><docblock><description><![CDATA[<p>Returns the full path to the DB file</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>salt</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $salt</string><docblock><description><![CDATA[<p>Salt that's used when creating a password and logging on</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>db</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $db</string><docblock><description><![CDATA[<p>The DB object</p>]]></description><var><![CDATA[DB]]></var></docblock></property><property><name>dbmode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dbmode</string><docblock><description><![CDATA[<p>Database mode. MySQL or SQLite</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>sqliteTableLayout</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $sqliteTableLayout</string><docblock><description><![CDATA[<p>The table layout for SQLite</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>mysqlTableLayout</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $mysqlTableLayout</string><docblock><description><![CDATA[<p>The table layout for MySQL</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>tableName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $tableName</string><docblock><description><![CDATA[<p>The name of the DB table</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>authCookieName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $authCookieName</string><docblock><description><![CDATA[<p>The name of the authentication cookie</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>isAuthenticated</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $isAuthenticated</string><docblock><description><![CDATA[<p>Are we authenticated or not?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>user</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $user</string><docblock><description><![CDATA[<p>The user object when authenticated</p>]]></description><var><![CDATA[SimpleAuthUser]]></var></docblock></property><property><name>authmode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $authmode</string><docblock><description><![CDATA[<p>Authentication mode.
Default is SimpleAuth::AUTH_BASIC</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>realm</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $realm</string><docblock><description><![CDATA[<p>Realm of the authentication if basic authentication is being used</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>appname</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $appname</string><docblock><description><![CDATA[<p>Name of the application the authentication is valid for.
Useful if the same table should act as authentication resource for more
than one site/application</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>reqLevelRule</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $reqLevelRule</string><docblock><description><![CDATA[<p>How to compare a userï¿½s level agains required level.</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>requiredLevel</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $requiredLevel</string><docblock><description><![CDATA[<p>Required level to authenticate.</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>SimpleAuthUser</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class SimpleAuthUser</string><implements/><docblock><description><![CDATA[<p>A class representing a user in <a href='?__plibclass=SimpleAuth#class-SimpleAuth'>SimpleAuth</a>.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Security]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public __construct(DBResult $res, DB $db)</string><docblock><description><![CDATA[<p>Creates a new <a href='?__plibclass=SimpleAuth#class-SimpleAuth'>SimpleAuth</a> user object.
This class should not be instatiated directly. Call
<a href='?__plibclass=SimpleAuth#method-GetUser'>SimpleAuth::GetUser()</a> instead.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=DBResult#class-DBResult'>DBResult</a>]]></type></types><variable><![CDATA[$res]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><variable><![CDATA[$db]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>res</name><value/><reference/><optional/><class>DBResult</class><array/><nullable/><string>DBResult $res</string></param><param><name>db</name><value/><reference/><optional/><class>DB</class><array/><nullable/><string>DB $db</string></param></params></method><method><name>SetDB</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public SetDB(DB $db)</string><docblock><description><![CDATA[<p>Set the DB object</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=DB#class-DB'>DB</a>]]></type></types><variable><![CDATA[$db]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>db</name><value/><reference/><optional/><class>DB</class><array/><nullable/><string>DB $db</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public Get($which)</string><docblock><description><![CDATA[<p>Getter for user fields</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[<p>The field to get.</p>]]></description></param></params></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>Set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public Set($which, $what)</string><docblock><description><![CDATA[<p>Set any of the user database fields</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public __get($key)</string><docblock><description><![CDATA[<p>Getter.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public __set($key, $value)</string><docblock><description><![CDATA[<p>Setter</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>updateField</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>protected updateField($which, $what)</string><docblock><description><![CDATA[<p>Update field $which with the value of $what</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$what]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param><param><name>what</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$what</string></param></params></method><method><name>__sleep</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>SimpleAuthUser</declaring-class><inherited/><string>public __sleep()</string><docblock><description><![CDATA[<p>For the serialization of this object to work properly</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>unsettable</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $unsettable</string><docblock><description><![CDATA[<p>Keys in this array is not settable</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>unique</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $unique</string><docblock><description><![CDATA[<p>Keys in this array must be unique</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>nonempty</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nonempty</string><docblock><description><![CDATA[<p>Keys in this array must not be empty.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>db</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $db</string><docblock><description><![CDATA[<p>The DB object</p>]]></description><var><![CDATA[DB]]></var></docblock></property><property><name>members</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $members</string><docblock><description><![CDATA[<p>Container for the object members connected to the user</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class></module></namespace><namespace name="String" path="String"><module><name>String.php</name><path>String/String.php</path><namespace>String</namespace><classpath>String.String</classpath><docblock><description><![CDATA[<p>Misc string classes</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[String]]></package><version><![CDATA[0.2]]></version></docblock><class><name>String</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class String</string><implements/><docblock><description><![CDATA[<p>General string class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[String]]></package></docblock><methods><method><name>ImplodeNicely</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>String</declaring-class><inherited/><string>public static ImplodeNicely($a [, $glue=and])</string><docblock><description><![CDATA[<p>Implodes an array by joining with <code>$glue</code></p>

<div class='code'><code><span style='color: #990000;'><b>$list</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;One&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;Two&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;Three&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;Four&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #000099;'><b>echo</b></span>&#160;String<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>ImplodeNicely<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$list</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>//&#160;One,&#160;Two,&#160;Three&#160;and&#160;Four</span><br/>&#160;<br/><span style='color: #000099;'><b>echo</b></span>&#160;String<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>ImplodeNicely<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$list</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;or&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #0099CC;'>//&#160;One,&#160;Two,&#160;Three&#160;or&#160;Four</span><br/></code></div>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$a]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$glue]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>a</name><value/><reference/><optional/><class/><array/><nullable/><string>$a</string></param><param><name>glue</name><value>and</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$glue=and</string></param></params></method><method><name>EndsWith</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>String</declaring-class><inherited/><string>public static EndsWith($str, $tail)</string><docblock><description><![CDATA[<p>Checks if <code>$str</code> ends with <code>$tail</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tail]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>tail</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tail</string></param></params></method><method><name>StartsWith</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>String</declaring-class><inherited/><string>public static StartsWith($str, $head)</string><docblock><description><![CDATA[<p>Checks if <code>$str</code> starts with <code>$head</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$head]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param><param><name>head</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$head</string></param></params></method></methods><properties/></class><class><name>StringReader</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class StringReader</string><implements/><docblock><description><![CDATA[<p>String reader that mimics the <a href='?__plibclass=StreamReader#class-StreamReader'>StreamReader</a> class.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[String]]></package><version><![CDATA[0.2]]></version><since><![CDATA[0.2]]></since></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public __construct($str)</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>Read</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Read([$bytes=1])</string><docblock><description><![CDATA[<p>Read <code>$bytes</code> number of bytes from the current position</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If trying to read beyond the string length</p>]]></description></throws><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bytes</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bytes=1</string></param></params></method><method><name>Unread</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Unread([$bytes=1])</string><docblock><description><![CDATA[<p>Rewinds the stream <code>$bytes</code> number of bytes</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$bytes]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>bytes</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$bytes=1</string></param></params></method><method><name>ReadBlock</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public ReadBlock($start, $len [, $whence])</string><docblock><description><![CDATA[<p>Read a block of bytes from the string</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$start]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$len]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>start</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$start</string></param><param><name>len</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$len</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>Seek</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Seek($pos [, $whence])</string><docblock><description><![CDATA[<p>Seek to position <code>$pos</code></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$pos]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$whence]]></variable><description><![CDATA[<p><code>SEEK_SET</code>, <code>SEEK_CUR</code> or <code>SEEK_END</code>. See {@link fseek fseek()}.</p>]]></description></param></params></docblock><params><param><name>pos</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$pos</string></param><param><name>whence</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$whence</string></param></params></method><method><name>ReadLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public ReadLine()</string><docblock><description><![CDATA[<p>Read one line at a time</p>]]></description><since><![CDATA[0.2]]></since></docblock><params/></method><method><name>ReadToChar</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public ReadToChar($char)</string><docblock><description><![CDATA[<p>Reads upto the first occurance of <code>$char</code> or reads to the end if <code>$char</code>
is not found</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$char]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>char</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$char</string></param></params></method><method><name>ReadToEnd</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public ReadToEnd()</string><docblock><description><![CDATA[<p>Reads to the end of the string from the current position</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Position</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Position()</string><docblock><description><![CDATA[<p>Returns the current position within the string</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Length()</string><docblock><description><![CDATA[<p>Returns the length of the string</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>End</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public End()</string><docblock><description><![CDATA[<p>Has the pointer reached the end of the file?</p>]]></description><since><![CDATA[0.2]]></since></docblock><params/></method><method><name>Dispose</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringReader</declaring-class><inherited/><string>public Dispose()</string><docblock><description><![CDATA[<p>Clears the string.</p>]]></description></docblock><params/></method></methods><properties><property><name>string</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $string</string><docblock><description><![CDATA[<p>The internal string</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cursor</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cursor</string><docblock><description><![CDATA[<p>The current position within the string</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The length of the string</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>StringBuffer.php</name><path>String/StringBuffer.php</path><namespace>String</namespace><classpath>String.StringBuffer</classpath><docblock><description><![CDATA[<p>StringBuffer</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[String]]></package></docblock><class><name>StringBuffer</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class StringBuffer</string><implements/><docblock><description><![CDATA[]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[String]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public __construct()</string><docblock><description><![CDATA[<p>Constructor.</p>]]></description></docblock><params/></method><method><name>Add</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public Add($args)</string><docblock/><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Addf</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public Addf($format, $args)</string><docblock/><params><param><name>format</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$format</string></param><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public Length()</string><docblock/><params/></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public Get()</string><docblock/><params/></method><method><name>GetLineIterator</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public GetLineIterator()</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringBuffer</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Magic method that converts the object into a string</p>]]></description></docblock><params/></method></methods><properties><property><name>string</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $string</string><docblock><description><![CDATA[<p>The file currently being used</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>StringSpliterator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class StringSpliterator extends PLibIterator</string><implements/><docblock/><methods><method><name>__constuct</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringSpliterator</declaring-class><inherited/><string>public __constuct($string, $split)</string><docblock/><params><param><name>string</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$string</string></param><param><name>split</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$split</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringSpliterator</declaring-class><inherited/><string>public HasNext()</string><docblock/><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringSpliterator</declaring-class><inherited/><string>public Next()</string><docblock/><params/></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>StringLineIterator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class StringLineIterator extends PLibIterator</string><implements/><docblock/><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringLineIterator</declaring-class><inherited/><string>public __construct($string)</string><docblock/><params><param><name>string</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$string</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringLineIterator</declaring-class><inherited/><string>public HasNext()</string><docblock/><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>StringLineIterator</declaring-class><inherited/><string>public Next()</string><docblock/><params/></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module></namespace><namespace name="Tools" path="Tools"><module><name>Logger.php</name><path>Tools/Logger.php</path><namespace>Tools</namespace><classpath>Tools.Logger</classpath><docblock><description><![CDATA[<p>A log writer utility</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[IO]]></package><version><![CDATA[0.1]]></version></docblock><class><name>Logger</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Logger</string><implements/><docblock><description><![CDATA[<p>A simple log writer.</p>

<div class='code'><code><span style='color: #0099CC;'>//&#160;Write&#160;to&#160;the&#160;default&#160;system&#160;log</span><br/><span style='color: #990000;'><b>$logger</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Logger<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$logger</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Log<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Some&#160;message&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #990000;'><b>$logger</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Notice<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Some&#160;notice&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span>&#160;&#160;&#160;<span style='color: #0099CC;'>//&#160;Message&#160;prefixed&#160;with&#160;[notice]</span><br/><span style='color: #990000;'><b>$logger</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Warning<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Some&#160;warning&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span>&#160;<span style='color: #0099CC;'>//&#160;Message&#160;prefixed&#160;with&#160;[warning]</span><br/><span style='color: #990000;'><b>$logger</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Error<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Some&#160;error&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span>&#160;&#160;&#160;&#160;&#160;<span style='color: #0099CC;'>//&#160;Message&#160;prefixed&#160;with&#160;[error]</span><br/><span style='color: #990000;'><b>$logger</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>Debug<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Some&#160;warning&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span>&#160;&#160;&#160;<span style='color: #0099CC;'>//&#160;Only&#160;output&#160;if&#160;PLib&#160;is&#160;in&#160;debug&#160;mode</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;Write&#160;to&#160;user&#160;defined&#160;log&#160;file</span><br/><span style='color: #990000;'><b>$logger</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Logger<span style='color: #0000FF;'>(</span>Logger<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>LOG_FILE<span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;/path/to/file.log&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #0099CC;'>//&#160;Send&#160;by&#160;mail</span><br/><span style='color: #990000;'><b>$logger</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Logger<span style='color: #0000FF;'>(</span>Logger<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>LOG_EMAIL<span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;me@domain.com&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><author><![CDATA[poppa]]></author><package><![CDATA[IO]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public __construct([$type [, $dest [, $extraHeaders]]])</string><docblock><description><![CDATA[<p>Creates a new logger object.
For further description of the parameters see <a href='http://php.net/error_log'>error_log()</a></p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>Type of logging mechanism to use</p>]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=File#class-File'>File</a>]]></type></types><variable><![CDATA[$dest]]></variable><description><![CDATA[<p>Where to send the message. This depends on $type.</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extraHeaders]]></variable><description><![CDATA[<p>Only useful when message type is {@see Logger::LOG_MAIL}.</p>]]></description></param></params></docblock><params><param><name>type</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type</string></param><param><name>dest</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$dest</string></param><param><name>extraHeaders</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extraHeaders</string></param></params></method><method><name>Log</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public Log($message)</string><docblock><description><![CDATA[<p>Write <code>$message</code> to the log file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$message]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>message</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$message</string></param></params></method><method><name>Debug</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public Debug($args)</string><docblock><description><![CDATA[<p>Write to log file only when <a href='?__plibclass=PLib#class-PLib'>PLib</a> is in debug mode.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=PLib#method-Debug'>PLib::Debug()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Variable length argument list</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Notice</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public Notice($args)</string><docblock><description><![CDATA[<p>Write to logfile. Prepends the message with <code>NOTICE</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Variable length argument list</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Warning</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public Warning($args)</string><docblock><description><![CDATA[<p>Write to logfile. Prepends the message with <code>WARNING</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Variable length argument list</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Error</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>public Error($args)</string><docblock><description><![CDATA[<p>Write to logfile. Prepends the message with <code>ERROR</code></p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Variable length argument list</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>protected getMessage($args)</string><docblock><description><![CDATA[<p>Formats the message to write to the logfile</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>format</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>protected format($str)</string><docblock><description><![CDATA[<p>Formats the string if formatting is on</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$str]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>str</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$str</string></param></params></method><method><name>prefix</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Logger</declaring-class><inherited/><string>protected prefix()</string><docblock><description><![CDATA[<p>Get the message prefix, i.e the date.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>lastWrite</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastWrite</string><docblock><description><![CDATA[<p>When the last message was written to the log</p>]]></description><var><![CDATA[Date]]></var></docblock></property><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Logging method</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>dest</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $dest</string><docblock><description><![CDATA[<p>Where to send the messages. Depends on the value of <a href='?__plibclass=Logger#property-type'>Logger::$type</a>.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>extraHeaders</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $extraHeaders</string><docblock><description><![CDATA[<p>Extra headers to append if <a href='?__plibclass=Logger#property-type'>Logger::$type</a> is
{@see Logger::TYPE_EMAIL}</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>formatOutput</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $formatOutput</string><docblock><description><![CDATA[<p>Should the message be formatted or not</p>]]></description><var><![CDATA[bool]]></var></docblock></property></properties></class></module></namespace><namespace name="Web" path="Web"><module><name>Bitly.php</name><path>Web/Bitly.php</path><namespace>Web</namespace><classpath>Web.Bitly</classpath><docblock><description><![CDATA[<p>A Bitly class</p>

<p>This class communicates with <a href='http://bit.ly'>bit.ly</a> which is a service to
shorten, track and share links.</p>

<p>Copyright Â© 2009, Pontus Ãstlund - www.poppa.se</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=HTTPRequest#class-HTTPRequest'>HTTPRequest</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=HTTPResponse#class-HTTPResponse'>HTTPResponse</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=Cache#class-Cache'>Cache</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Bitly</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Bitly</string><implements/><docblock><description><![CDATA[<p>A Bitly class</p>

<p>This class communicates with <a href='http://bit.ly'>bit.ly</a> which is a service to
shorten, track and share links.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public __construct($username, $apikey [, $cache])</string><docblock><description><![CDATA[<p>Creates a new Bitly object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$username]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$apikey]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>username</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$username</string></param><param><name>apikey</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$apikey</string></param><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>Cache</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Cache([$cache])</string><docblock><description><![CDATA[<p>Getter/setter for how long to cache the requests</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If cache is set and less than 0</p>]]></description></throws><params><param><types><type><![CDATA[$cache]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>Version</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Version([$version])</string><docblock><description><![CDATA[<p>Getter/setter for the Bitly version</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>version</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version</string></param></params></method><method><name>Format</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Format([$format])</string><docblock><description><![CDATA[<p>Getter/setter for the Bitly response format.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If format given isn't supported</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$format]]></variable><description><![CDATA[<p>Should be <code>Bitly::FORMAT_JSON</code> or <code>Bitly::FORMAT_XML</code>.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>format</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$format</string></param></params></method><method><name>Callback</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Callback([$callback])</string><docblock><description><![CDATA[<p>Getter/setter for the callback function for JSON responses</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$callback]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>callback</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$callback</string></param></params></method><method><name>Shorten</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Shorten($url)</string><docblock><description><![CDATA[<p>Shortens a URL</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code></p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>Returns the raw response as a string</p>]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>GetShortUrl</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public GetShortUrl($url)</string><docblock><description><![CDATA[<p>Same as <a href='?__plibclass=Bitly#method-Shorten'>Bitly::Shorten()</a>, except this method returns the shorter
URL directly instead of the entire string response</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code> or if the status code from Bitly
 isn't successful</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param></params></method><method><name>Expand</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Expand($urlOrHash)</string><docblock><description><![CDATA[<p>Expands a shortened URL to it's original value</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code></p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$urlOrHash]]></variable><description><![CDATA[<p>Either the shortened URL or its hash.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>urlOrHash</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$urlOrHash</string></param></params></method><method><name>Info</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Info($urlOrHash [, $keys])</string><docblock><description><![CDATA[<p>Returns info about the page of the shortened URL, page title etc...</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code></p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$urlOrHash]]></variable><description><![CDATA[<p>Either the shortened URL or its hash.</p>]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$keys]]></variable><description><![CDATA[<p>One or more keys to limit the attributes returned about each bitly 
 document, eg: htmlTitle,thumbnail</p>]]></description></param></params></docblock><params><param><name>urlOrHash</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$urlOrHash</string></param><param><name>keys</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$keys</string></param></params></method><method><name>Stats</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>public Stats($urlOrHash)</string><docblock><description><![CDATA[<p>Returns traffic and referrer data of the shortened URL</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code></p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$urlOrHash]]></variable><description><![CDATA[<p>Either the shortened URL or its hash.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>urlOrHash</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$urlOrHash</string></param></params></method><method><name>call</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected call($service, $params [, $method=GET [, $cache=1]])</string><docblock><description><![CDATA[<p>Does the actual HTTP call to Bitly</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the returned HTTP status isn't <code>200</code></p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$service]]></variable><description><![CDATA[<p>The Bitly API service to call</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[<p>Associative array of parameters to the Bitly service</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[<p>The HTTP method to use</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>If false the request will not be cached</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>;</p>]]></description></return></docblock><params><param><name>service</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$service</string></param><param><name>params</name><value/><reference/><optional/><class/><array/><nullable/><string>$params</string></param><param><name>method</name><value>GET</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$method=GET</string></param><param><name>cache</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache=1</string></param></params></method><method><name>paramsToString</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected paramsToString($params)</string><docblock><description><![CDATA[<p>Turns the params array into a string representation for usage 
in the cache key</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>params</name><value/><reference/><optional/><class/><array/><nullable/><string>$params</string></param></params></method><method><name>normalizeHttpMethod</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected normalizeHttpMethod($method)</string><docblock><description><![CDATA[<p>Normalizes the HTTP method to use for the service call and verifies it's
a valid method</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If a bad method is given</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param></params></method><method><name>getNormalizedUrl</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected getNormalizedUrl($service)</string><docblock><description><![CDATA[<p>Normalizes the Bilty service to call. Makes sure there's a heading slash
and that there's no trailing slash</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>service</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$service</string></param></params></method><method><name>getAuthzHeader</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected getAuthzHeader()</string><docblock><description><![CDATA[<p>Returns an authorization header</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>getDefaultParams</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Bitly</declaring-class><inherited/><string>protected getDefaultParams()</string><docblock><description><![CDATA[<p>Returns the default parameters needed for every call</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>PARAM_KEY</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static>1</static><type>null</type><string>protected static $PARAM_KEY</string><docblock><description><![CDATA[<p>Argument type to query variable name mapping</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>handle</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $handle</string><docblock><description><![CDATA[<p>Login name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>apikey</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $apikey</string><docblock><description><![CDATA[<p>Bitly API key</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>Bitly version to use</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>format</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $format</string><docblock><description><![CDATA[<p>Response format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>callback</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $callback</string><docblock><description><![CDATA[<p>Callback function. Only useful if <a href='?__plibclass=Bitly#property-format'>Bitly::$format</a> is <code>JSON</code>.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cache</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cache</string><docblock><description><![CDATA[<p>How long should the request be cached?</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class></module><module><name>Cookie.php</name><path>Web/Cookie.php</path><namespace>Web</namespace><classpath>Web.Cookie</classpath><docblock><description><![CDATA[<p>A simple class for handling cookies</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><version><![CDATA[0.1]]></version></docblock><class><name>Cookie</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Cookie</string><implements/><docblock><description><![CDATA[<p>A simple class for handling cookies</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><version><![CDATA[0.1]]></version></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public __construct($name [, $path=/ [, $domain [, $secure [, $httponly]]]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$path]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$domain]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$secure]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$httponly]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>path</name><value>/</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$path=/</string></param><param><name>domain</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$domain</string></param><param><name>secure</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$secure</string></param><param><name>httponly</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$httponly</string></param></params></method><method><name>Append</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public Append($value)</string><docblock><description><![CDATA[<p>Append to the value buffer</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>Set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public Set($value [, $expires [, $serialize]])</string><docblock><description><![CDATA[<p>Set the cookie</p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type><type><![CDATA[string]]></type></types><variable><![CDATA[$expires]]></variable><description><![CDATA[<p>If $expires is a string the time will be calculated by @link{strtotime()}
 so for a description of how the strings can look like read there.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$serialize]]></variable><description><![CDATA[<p>If true the value will be @see{serialize()}'d before written to the
 cookie</p>]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>expires</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$expires</string></param><param><name>serialize</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$serialize</string></param></params></method><method><name>Get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public Get([$unserialize])</string><docblock><description><![CDATA[<p>Retreive the cookie</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$unserialize]]></variable><description><![CDATA[<p>If the value was serialized before written to the cookie this needs to
 be set to true when retreiving the cookie.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>unserialize</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$unserialize</string></param></params></method><method><name>Remove</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public Remove()</string><docblock><description><![CDATA[<p>Simply deletes the cookie</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Delete</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Cookie</declaring-class><inherited/><string>public Delete()</string><docblock><description><![CDATA[<p>Alias for</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>name</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $name</string><docblock><description><![CDATA[<p>The name of the cookie</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>path</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $path</string><docblock><description><![CDATA[<p>The path of the cookie</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>domain</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $domain</string><docblock><description><![CDATA[<p>The domain of the cookie</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>secure</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $secure</string><docblock><description><![CDATA[<p>Secure. If true only use over a secure HTTP connection (HTTPS)</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>httponly</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $httponly</string><docblock><description><![CDATA[<p>Only allow the cookie over HTTP, means it won't be accessible to
JavaScript for instance.</p>]]></description><link><![CDATA[<a href='http://php.net/setcookie'>setcookie()</a>]]></link><var><![CDATA[bool]]></var></docblock></property><property><name>value</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $value</string><docblock><description><![CDATA[<p>Value buffer if</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class></module><module><name>Upload.php</name><path>Web/Upload.php</path><namespace>Web</namespace><classpath>Web.Upload</classpath><docblock><description><![CDATA[<p>Upload</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=PLibIterator#class-PLibIterator'>PLibIterator</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Upload</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>PLibIterator</extends><string>class Upload extends PLibIterator</string><implements/><docblock><description><![CDATA[<p>A simple upload class.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public __construct($location [, $allowedFileTypes [, $maxsize=2M [, $checkMimeType [, $owerwrite=1 [, $chmod=438]]]]])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$location]]></variable><description><![CDATA[<p>Where to put the upload</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$allowedFileTypes]]></variable><description><![CDATA[<p>Allowed file extesions to upload. Empty mean no restrictions.</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$maxsize]]></variable><description><![CDATA[<p>Max upload size. Suffixes are K, M, G</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$checkMimeType]]></variable><description><![CDATA[<p>Validate against mimetype. If set to true $allowedFileTypes should
  contain allowed mimetypes rather than extensions</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$owerwrite]]></variable><description><![CDATA[<p>Overwrite existing files with the same name as the uploaded one</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$chmod]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>location</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$location</string></param><param><name>allowedFileTypes</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$allowedFileTypes</string></param><param><name>maxsize</name><value>2M</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$maxsize=2M</string></param><param><name>checkMimeType</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$checkMimeType</string></param><param><name>owerwrite</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$owerwrite=1</string></param><param><name>chmod</name><value>438</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$chmod=438</string></param></params></method><method><name>HasNext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public HasNext()</string><docblock><description><![CDATA[<p>Is there any more files in the iteration</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Next</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public Next()</string><docblock><description><![CDATA[<p>Returns the next file</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The path to the file</p>]]></description></return></docblock><params/></method><method><name>SetMessages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public SetMessages($array)</string><docblock><description><![CDATA[<p>Set the messages in the internal message array.
Useful if you wish to translate the messages</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$array]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>array</name><value/><reference/><optional/><class/><array/><nullable/><string>$array</string></param></params></method><method><name>HasMessages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public HasMessages()</string><docblock><description><![CDATA[<p>Check if the there are any messages</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetLastMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public GetLastMessage()</string><docblock><description><![CDATA[<p>Returns the last message.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetMessages</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public GetMessages([$type=string])</string><docblock><description><![CDATA[<p>Returns all messages</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$type]]></variable><description><![CDATA[<p>If set the messages will be stringified else the array of messages
  will be returned.</p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>type</name><value>string</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$type=string</string></param></params></method><method><name>copy</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected copy()</string><docblock><description><![CDATA[<p>Copy the current file to the desired location</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=UploadException#class-UploadException'>UploadException</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The path to the file</p>]]></description></return></docblock><params/></method><method><name>doCopy</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected doCopy($tempfile, $file, $chmod)</string><docblock><description><![CDATA[<p>Do the actual copying</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=UploadException#class-UploadException'>UploadException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tempfile]]></variable><description><![CDATA[<p>The uploaded file</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[<p>The new location of the uploaded file</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$chmod]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>tempfile</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tempfile</string></param><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param><param><name>chmod</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$chmod</string></param></params></method><method><name>isValid</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected isValid($file)</string><docblock><description><![CDATA[<p>Checks if the file is valid to upload</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable/><string>$file</string></param></params></method><method><name>checkSize</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected checkSize($file)</string><docblock><description><![CDATA[<p>Check if the file size is valid</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable/><string>$file</string></param></params></method><method><name>checkExtension</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected checkExtension($file)</string><docblock><description><![CDATA[<p>Check if the file extension is valid</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>makeMax</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected final makeMax($max)</string><docblock><description><![CDATA[<p>Converts nx (where n is a number and x a suffix) into bytes.
e.g 1M will be 1024000, 5K will be 5210 and so on.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$max]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>max</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$max</string></param></params></method><method><name>getExtention</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected final getExtention($file)</string><docblock><description><![CDATA[<p>Returns the file extension of a file</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param></params></method><method><name>isUploadedFile</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected final isUploadedFile($file)</string><docblock><description><![CDATA[<p>Check if the file is an uploaded file or not</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>file</name><value/><reference/><optional/><class/><array/><nullable/><string>$file</string></param></params></method><method><name>fail</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>protected final fail($messageIndex [, $message])</string><docblock><description><![CDATA[<p>Sets a message to the warnings array</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$messageIndex]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$message]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[<p>Always returns false</p>]]></description></return></docblock><params><param><name>messageIndex</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$messageIndex</string></param><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$message</string></param></params></method><method><name>__set</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public __set($key, $val)</string><docblock><description><![CDATA[<p>Setter
Set the value of key in the config array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$val]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>val</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$val</string></param></params></method><method><name>__get</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Upload</declaring-class><inherited/><string>public __get($key)</string><docblock><description><![CDATA[<p>Returns the valu of key $key in the config array</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>Length</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Length() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the length of the array</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>First</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public First() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the next item is the first item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Last</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Last() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>NextLast</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public NextLast() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Checks if the current item is the next last item</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Pointer</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Pointer() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Returns the current index we're at</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Reverse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>PLibIterator</declaring-class><inherited>1</inherited><string>public Reverse() inherited from PLibIterator</string><docblock><description><![CDATA[<p>Reverses the iterator</p>]]></description></docblock><params/></method></methods><properties><property><name>totalSize</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $totalSize</string><docblock><description><![CDATA[<p>Total size of the upload</p>]]></description><var><![CDATA[float]]></var></docblock></property><property><name>cfg</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $cfg</string><docblock><description><![CDATA[<p>Config array</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>warnings</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $warnings</string><docblock><description><![CDATA[<p>Warnings</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>messages</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $messages</string><docblock><description><![CDATA[<p>Error/warning messages</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>lastMessage</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastMessage</string><docblock><description><![CDATA[<p>The last message</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>container</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $container</string><docblock><description><![CDATA[<p>The array to iterate over</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>pointer</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $pointer</string><docblock><description><![CDATA[<p>The current index</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>length</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $length</string><docblock><description><![CDATA[<p>The total length of the $container</p>]]></description><var><![CDATA[int]]></var></docblock></property></properties></class><class><name>UploadException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class UploadException extends Exception</string><implements/><docblock><description><![CDATA[<p>Upload exception</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module><module><name>Feed.php</name><path>Web/Feed.php</path><namespace>Web</namespace><classpath>Web.Feed</classpath><docblock><description><![CDATA[<p>Classes for reading and creating web feeds such as RSS, RDF and ATOM.</p>

<div class='code'><code>&#160;&#160;<span style='color: #0099CC;'>//&#160;Handles&#160;RSS,&#160;RDF&#160;and&#160;Atom&#160;feeds</span><br/>&#160;&#160;<span style='color: #990000;'><b>$feed</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;Feed<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Parse<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$some_feed_as_xml</b></span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #990000;'><b>$channel</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$feed</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetChannel<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #990000;'><b>$items</b></span>&#160;&#160;&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #990000;'><b>$feed</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetItems<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#39;&#60;h1&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$channel</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetTitle<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#39;&#60;/h1&#62;&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#39;&#60;p&#62;&#60;strong&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$channel</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetContent<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#39;&#60;/strong&#62;&#60;/p&#62;&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#39;&#60;hr/&#62;&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#39;&#60;ul&#62;&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/>&#160;&#160;<span style='color: #000099;'><b>foreach</b></span>&#160;<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$items</b></span>&#160;<span style='color: #000099;'><b>as</b></span>&#160;<span style='color: #990000;'><b>$item</b></span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>{</span><br/>&#160;&#160;&#160;&#160;<span style='color: #000099;'><b>echo</b></span>&#160;<span style='color: #008800;'>&#39;&#60;li&#62;&#60;p&#62;&#60;strong&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$item</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetTitle<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#39;&#60;/strong&#62;&#60;br/&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #008800;'>&#39;&#60;span&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #990000;'><b>$item</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetDate<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#39;&#60;/span&#62;&#60;/p&#62;&#39;</span>&#160;<span style='color: #0000FF;'>.</span><br/>&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<span style='color: #990000;'><b>$item</b></span><span style='color: #0000FF;'>-</span><span style='color: #0000FF;'>&#62;</span>GetContent<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span>&#160;<span style='color: #0000FF;'>.</span>&#160;<span style='color: #008800;'>&#39;&#60;hr/&#62;&#39;</span><span style='color: #0000FF;'>;</span><br/>&#160;&#160;<span style='color: #0000FF;'>}</span><br/></code></div>

<p>The methods</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><uses><use><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=HTTPRequest#class-HTTPRequest'>HTTPRequest</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=XMLDocument#class-XMLDocument'>XMLDocument</a>]]></type></types><description><![CDATA[]]></description></use></uses><example><![CDATA[RSSReader.xmpl]]></example><example><![CDATA[RSSWriter.xmpl]]></example></docblock><class><name>AbstractThing</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class AbstractThing]</string><implements/><docblock><description><![CDATA[<p>Abstract class representing a "thing" in a feed. It could be a channel
or an item...</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>protected __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>protected final parse()</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>protected final isNSNode($name)</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>protected final parseDefault(DOMElement $node)</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>protected innerHTML(DOMElement $n)</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public GetData()</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public GetElement($which)</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>abstract public GetDate()</string><docblock><description><![CDATA[<p>Should return the date part of the thing.</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>abstract public GetTitle()</string><docblock><description><![CDATA[<p>Should return the title of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>abstract public GetContent()</string><docblock><description><![CDATA[<p>Should return the content part of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public SetData($name, $value)</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public SetAttributes($attributes)</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public SetAttribute($key, $value)</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public SetElement($name, $value [, $attr])</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Type of thing</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Node names that should be tried for handling callback function.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>The name of the root node</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>AbstractChannel</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends>AbstractThing</extends><string>[abstract class AbstractChannel extends AbstractThing]</string><implements/><docblock><description><![CDATA[<p>Abstract representation of a feed channel.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>public GetItems()</string><docblock><description><![CDATA[<p>Returns the array of items</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddItem</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>public AddItem(AbstractItem $item)</string><docblock><description><![CDATA[<p>Adds an item to the items array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractItem#class-AbstractItem'>AbstractItem</a>]]></type></types><variable><![CDATA[$item]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>item</name><value/><reference/><optional/><class>AbstractItem</class><array/><nullable/><string>AbstractItem $item</string></param></params></method><method><name>GetLastBuildDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>public GetLastBuildDate()</string><docblock><description><![CDATA[<p>Tries to find the last build date</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>abstract public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>abstract public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the description element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>abstract public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected __construct([DOMElement $node]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetDate() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the date part of the thing.</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetTitle() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the title of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetContent() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the content part of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>lastBuildDateNode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastBuildDateNode</string><docblock><description><![CDATA[<p>Name of the last build date node</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>items</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $items</string><docblock><description><![CDATA[<p>The items of the channel</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Node names that should be tried for handling callback function.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>The name of the root node</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>AbstractItem</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends>AbstractThing</extends><string>[abstract class AbstractItem extends AbstractThing]</string><implements/><docblock><description><![CDATA[<p>Abstract representation of a feed item</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>SetTitle</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited/><string>abstract public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited/><string>abstract public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the description element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited/><string>abstract public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDate</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited/><string>abstract public SetDate($value)</string><docblock><description><![CDATA[<p>Set the date element</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>GetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited/><string>public GetLink([$firstSingle])</string><docblock><description><![CDATA[<p>Returns the link element</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$firstSingle]]></variable><description><![CDATA[<p>Atom feed items can have multiple links and and have several attributes.
 If this is set to true the first found link with the attribute <code>type</code>
 set to <code>text/html</code> will be returned</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>firstSingle</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$firstSingle</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected __construct([DOMElement $node]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetDate() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the date part of the thing.</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetTitle() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the title of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>abstract public GetContent() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Should return the content part of the thing</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Node names that should be tried for handling callback function.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property></properties></class><class><name>Feed</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class Feed]</string><implements/><docblock><description><![CDATA[<p>Abstract main class representing a feed like Rss, Atom, Rdf and what not.</p>]]></description><author><![CDATA[Pontus Östlund]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>Create</name><constructor/><destructor/><abstract>1</abstract><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited/><string>abstract public static Create([$version [, $enc=utf-8 [, $ns]]])</string><docblock><description><![CDATA[<p>Factory method for creating an empty Feed.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>version</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version</string></param><param><name>enc</name><value>utf-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$enc=utf-8</string></param><param><name>ns</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$ns</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited/><string>public final static Parse($xml)</string><docblock><description><![CDATA[<p>Creates a feed object from an XML feed.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the XML can't be parsed</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[<p>Can etither be a <a href='?__plibclass=RssFeed#class-RssFeed'>RssFeed</a>, <a href='?__plibclass=AtomFeed#class-AtomFeed'>AtomFeed</a> or <a href='?__plibclass=RdfFeed#class-RdfFeed'>RdfFeed</a></p>]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited/><string>public final static ParseURL($url [, $cache=600])</string><docblock><description><![CDATA[<p>Fetches the feed from $url and returns a *feed object.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Cache the request for $cache number of seconds</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>cache</name><value>600</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache=600</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>protected __construct([DOMNode $node])</string><docblock><description><![CDATA[<p>Creates a new Feed object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMNode</class><array/><nullable>1</nullable><string>DOMNode $node</string></param></params></method><method><name>GetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public GetChannel()</string><docblock><description><![CDATA[<p>Returns the channel object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public GetItems()</string><docblock><description><![CDATA[<p>Returns the items of the Feed object</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public SetChannel(AbstractChannel $chnl)</string><docblock><description><![CDATA[<p>Set the channel for the feed</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public Render(AbstractChannel $chnl [, $addHeader])</string><docblock><description><![CDATA[<p>Render th object to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$addHeader]]></variable><description><![CDATA[<p>If true an text/xml header will be output</p>]]></description></param></params></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param><param><name>addHeader</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$addHeader</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public SetAttributes($attributes)</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public SetAttribute($key, $value)</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetEncoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public SetEncoding($enc)</string><docblock><description><![CDATA[<p>Set the output encoding</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>enc</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$enc</string></param></params></method><method><name>AddNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public AddNamespace($name, $space)</string><docblock><description><![CDATA[<p>Add namespace</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$space]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>space</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$space</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>DateFormat</name><value><![CDATA[%a, %d %b %Y %T %z]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $DateFormat</string><docblock><description><![CDATA[<p>Default date format for date nodes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>DOMelement of this object</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>channel</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $channel</string><docblock><description><![CDATA[<p>The channel object</p>]]></description><var><![CDATA[AbstractChannel]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>The name of the root node</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Root node attributes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>ns</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ns</string><docblock><description><![CDATA[<p>Namespaces</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $encoding</string><docblock><description><![CDATA[<p>Output encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>RssFeed</name><type>class</type><abstract/><final/><instantiable/><extends>Feed</extends><string>[class RssFeed extends Feed]</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating Rss feeds</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>RssFeed</declaring-class><inherited/><string>public static Create([$version=2.0 [, $encoding=utf-8 [, $ns]]])</string><docblock><description><![CDATA[<p>Creates a new RssFeed object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>RSS version to use</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$encoding]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[<p>Namespaces</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=RssFeed#class-RssFeed'>RssFeed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>version</name><value>2.0</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version=2.0</string></param><param><name>encoding</name><value>utf-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$encoding=utf-8</string></param><param><name>ns</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$ns</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static Parse($xml) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a feed object from an XML feed.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the XML can't be parsed</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[<p>Can etither be a <a href='?__plibclass=RssFeed#class-RssFeed'>RssFeed</a>, <a href='?__plibclass=AtomFeed#class-AtomFeed'>AtomFeed</a> or <a href='?__plibclass=RdfFeed#class-RdfFeed'>RdfFeed</a></p>]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static ParseURL($url [, $cache=600]) inherited from Feed</string><docblock><description><![CDATA[<p>Fetches the feed from $url and returns a *feed object.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Cache the request for $cache number of seconds</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>cache</name><value>600</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache=600</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>protected __construct([DOMNode $node]) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a new Feed object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMNode</class><array/><nullable>1</nullable><string>DOMNode $node</string></param></params></method><method><name>GetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetChannel() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the channel object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetItems() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the items of the Feed object</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetChannel(AbstractChannel $chnl) inherited from Feed</string><docblock><description><![CDATA[<p>Set the channel for the feed</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public Render(AbstractChannel $chnl [, $addHeader]) inherited from Feed</string><docblock><description><![CDATA[<p>Render th object to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$addHeader]]></variable><description><![CDATA[<p>If true an text/xml header will be output</p>]]></description></param></params></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param><param><name>addHeader</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$addHeader</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from Feed</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from Feed</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetEncoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetEncoding($enc) inherited from Feed</string><docblock><description><![CDATA[<p>Set the output encoding</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>enc</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$enc</string></param></params></method><method><name>AddNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public AddNamespace($name, $space) inherited from Feed</string><docblock><description><![CDATA[<p>Add namespace</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$space]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>space</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$space</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public __toString() inherited from Feed</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>DateFormat</name><value><![CDATA[%a, %d %b %Y %T %z]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $DateFormat</string><docblock><description><![CDATA[<p>Default date format for date nodes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>DOMelement of this object</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>channel</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $channel</string><docblock><description><![CDATA[<p>The channel object</p>]]></description><var><![CDATA[AbstractChannel]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Root node attributes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>ns</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ns</string><docblock><description><![CDATA[<p>Namespaces</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $encoding</string><docblock><description><![CDATA[<p>Output encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>RssChannel</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractChannel</extends><string>class RssChannel extends AbstractChannel</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating an Rss channel</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Creates a new RssChannel object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public GetDate()</string><docblock><description><![CDATA[<p>Returns the date part of the channel. "lastBuildDate" takes precedence
over "pubDate".</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public GetTitle()</string><docblock><description><![CDATA[<p>Returns the title.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public GetContent()</string><docblock><description><![CDATA[<p>Returns the description element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public SetTitle($value)</string><docblock/><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public SetDescription($value)</string><docblock/><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>public SetLink($value)</string><docblock/><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parse_image</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>protected parse_image(DOMElement $node)</string><docblock><description><![CDATA[<p>Callback for the image node</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>parse_item</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssChannel</declaring-class><inherited/><string>protected parse_item(DOMElement $node)</string><docblock><description><![CDATA[<p>Callback for the item node</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetItems() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Returns the array of items</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddItem</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public AddItem(AbstractItem $item) inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Adds an item to the items array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractItem#class-AbstractItem'>AbstractItem</a>]]></type></types><variable><![CDATA[$item]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>item</name><value/><reference/><optional/><class>AbstractItem</class><array/><nullable/><string>AbstractItem $item</string></param></params></method><method><name>GetLastBuildDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetLastBuildDate() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Tries to find the last build date</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[name]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Subnodes to render.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>lastBuildDateNode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastBuildDateNode</string><docblock><description><![CDATA[<p>Name of the last build date node</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>items</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $items</string><docblock><description><![CDATA[<p>The items of the channel</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property></properties></class><class><name>RssItem</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractItem</extends><string>class RssItem extends AbstractItem</string><implements/><docblock><description><![CDATA[<p>A class for reading and crearting Rss items.</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Creates a new RssItem object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public GetDate()</string><docblock><description><![CDATA[<p>Returns the date</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public GetTitle()</string><docblock><description><![CDATA[<p>Returns the title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public GetContent()</string><docblock><description><![CDATA[<p>Returns the content. Either the description, content or content:encoded
element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the description element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>public SetDate($value)</string><docblock><description><![CDATA[<p>Set the date element</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parse_category</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>protected parse_category(DOMElement $node)</string><docblock><description><![CDATA[<p>Callback for category nodes</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>parse_description</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>protected parse_description(DOMElement $n)</string><docblock><description><![CDATA[<p>Callback for the description node.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>parse_content</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited/><string>protected parse_content(DOMElement $n)</string><docblock><description><![CDATA[<p>Callback for the content node.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited>1</inherited><string>public GetLink([$firstSingle]) inherited from AbstractItem</string><docblock><description><![CDATA[<p>Returns the link element</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$firstSingle]]></variable><description><![CDATA[<p>Atom feed items can have multiple links and and have several attributes.
 If this is set to true the first found link with the attribute <code>type</code>
 set to <code>text/html</code> will be returned</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>firstSingle</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$firstSingle</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Subnodes to parse</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property></properties></class><class><name>RdfFeed</name><type>class</type><abstract/><final/><instantiable/><extends>RssFeed</extends><string>[class RdfFeed extends RssFeed]</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating RDF feeds</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>RdfFeed</declaring-class><inherited/><string>public static Create([$version=2.0 [, $encoding=utf-8 [, $ns]]])</string><docblock><description><![CDATA[<p>Creates a new RssFeed object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>RSS version to use</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$encoding]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[<p>Namespaces</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=RdfFeed#class-RdfFeed'>RdfFeed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>version</name><value>2.0</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version=2.0</string></param><param><name>encoding</name><value>utf-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$encoding=utf-8</string></param><param><name>ns</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$ns</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static Parse($xml) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a feed object from an XML feed.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the XML can't be parsed</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[<p>Can etither be a <a href='?__plibclass=RssFeed#class-RssFeed'>RssFeed</a>, <a href='?__plibclass=AtomFeed#class-AtomFeed'>AtomFeed</a> or <a href='?__plibclass=RdfFeed#class-RdfFeed'>RdfFeed</a></p>]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static ParseURL($url [, $cache=600]) inherited from Feed</string><docblock><description><![CDATA[<p>Fetches the feed from $url and returns a *feed object.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Cache the request for $cache number of seconds</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>cache</name><value>600</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache=600</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>protected __construct([DOMNode $node]) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a new Feed object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMNode</class><array/><nullable>1</nullable><string>DOMNode $node</string></param></params></method><method><name>GetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetChannel() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the channel object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetItems() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the items of the Feed object</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetChannel(AbstractChannel $chnl) inherited from Feed</string><docblock><description><![CDATA[<p>Set the channel for the feed</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public Render(AbstractChannel $chnl [, $addHeader]) inherited from Feed</string><docblock><description><![CDATA[<p>Render th object to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$addHeader]]></variable><description><![CDATA[<p>If true an text/xml header will be output</p>]]></description></param></params></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param><param><name>addHeader</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$addHeader</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from Feed</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from Feed</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetEncoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetEncoding($enc) inherited from Feed</string><docblock><description><![CDATA[<p>Set the output encoding</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>enc</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$enc</string></param></params></method><method><name>AddNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public AddNamespace($name, $space) inherited from Feed</string><docblock><description><![CDATA[<p>Add namespace</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$space]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>space</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$space</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public __toString() inherited from Feed</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>DateFormat</name><value><![CDATA[%a, %d %b %Y %T %z]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $DateFormat</string><docblock><description><![CDATA[<p>Default date format for date nodes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>DOMelement of this object</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>channel</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $channel</string><docblock><description><![CDATA[<p>The channel object</p>]]></description><var><![CDATA[AbstractChannel]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Root node attributes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>ns</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ns</string><docblock><description><![CDATA[<p>Namespaces</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $encoding</string><docblock><description><![CDATA[<p>Output encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>RdfChannel</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractChannel</extends><string>class RdfChannel extends AbstractChannel</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating an Rdf channel</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Creates a new Rdf channel object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public GetDate()</string><docblock><description><![CDATA[<p>Returns the date part of the channel. "lastBuildDate" takes precedence
over "pubDate".</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public GetTitle()</string><docblock><description><![CDATA[<p>Returns the title.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public GetContent()</string><docblock><description><![CDATA[<p>Returns the description element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the desciption</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parse_item</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RdfChannel</declaring-class><inherited/><string>protected parse_item(DOMElement $node)</string><docblock><description><![CDATA[<p>Callback for the item node</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetItems() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Returns the array of items</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddItem</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public AddItem(AbstractItem $item) inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Adds an item to the items array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractItem#class-AbstractItem'>AbstractItem</a>]]></type></types><variable><![CDATA[$item]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>item</name><value/><reference/><optional/><class>AbstractItem</class><array/><nullable/><string>AbstractItem $item</string></param></params></method><method><name>GetLastBuildDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetLastBuildDate() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Tries to find the last build date</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Subnodes to render.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>lastBuildDateNode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastBuildDateNode</string><docblock><description><![CDATA[<p>Name of the last build date node</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>items</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $items</string><docblock><description><![CDATA[<p>The items of the channel</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>The name of the root node</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>RdfItem</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>RssItem</extends><string>class RdfItem extends RssItem</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating an Rdf item</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public __construct([DOMElement $node]) inherited from RssItem</string><docblock><description><![CDATA[<p>Creates a new RssItem object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public GetDate() inherited from RssItem</string><docblock><description><![CDATA[<p>Returns the date</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public GetTitle() inherited from RssItem</string><docblock><description><![CDATA[<p>Returns the title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public GetContent() inherited from RssItem</string><docblock><description><![CDATA[<p>Returns the content. Either the description, content or content:encoded
element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public SetTitle($value) inherited from RssItem</string><docblock><description><![CDATA[<p>Set the title element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public SetDescription($value) inherited from RssItem</string><docblock><description><![CDATA[<p>Set the description element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public SetLink($value) inherited from RssItem</string><docblock><description><![CDATA[<p>Set the link element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>public SetDate($value) inherited from RssItem</string><docblock><description><![CDATA[<p>Set the date element</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parse_category</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>protected parse_category(DOMElement $node) inherited from RssItem</string><docblock><description><![CDATA[<p>Callback for category nodes</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>parse_description</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>protected parse_description(DOMElement $n) inherited from RssItem</string><docblock><description><![CDATA[<p>Callback for the description node.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>parse_content</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>RssItem</declaring-class><inherited>1</inherited><string>protected parse_content(DOMElement $n) inherited from RssItem</string><docblock><description><![CDATA[<p>Callback for the content node.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited>1</inherited><string>public GetLink([$firstSingle]) inherited from AbstractItem</string><docblock><description><![CDATA[<p>Returns the link element</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$firstSingle]]></variable><description><![CDATA[<p>Atom feed items can have multiple links and and have several attributes.
 If this is set to true the first found link with the attribute <code>type</code>
 set to <code>text/html</code> will be returned</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>firstSingle</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$firstSingle</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Subnodes to parse</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>Node name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property></properties></class><class><name>AtomFeed</name><type>class</type><abstract/><final/><instantiable/><extends>Feed</extends><string>[class AtomFeed extends Feed]</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating Atom feeds</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>Create</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>AtomFeed</declaring-class><inherited/><string>public static Create([$version=2.0 [, $encoding=utf-8 [, $ns]]])</string><docblock><description><![CDATA[<p>Creates a new RssFeed object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[<p>RSS version to use</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$encoding]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[<p>Namespaces</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=AtomFeed#class-AtomFeed'>AtomFeed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>version</name><value>2.0</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version=2.0</string></param><param><name>encoding</name><value>utf-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$encoding=utf-8</string></param><param><name>ns</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$ns</string></param></params></method><method><name>Parse</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static Parse($xml) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a feed object from an XML feed.</p>]]></description><throws><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=Exception&amp;lang=en'>Exception</a>]]></type></types><description><![CDATA[<p>If the XML can't be parsed</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[<p>Can etither be a <a href='?__plibclass=RssFeed#class-RssFeed'>RssFeed</a>, <a href='?__plibclass=AtomFeed#class-AtomFeed'>AtomFeed</a> or <a href='?__plibclass=RdfFeed#class-RdfFeed'>RdfFeed</a></p>]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method><method><name>ParseURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static>1</static><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public final static ParseURL($url [, $cache=600]) inherited from Feed</string><docblock><description><![CDATA[<p>Fetches the feed from $url and returns a *feed object.</p>]]></description><throws><types><type><![CDATA[Array]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$url]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Cache the request for $cache number of seconds</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=Feed#class-Feed'>Feed</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>url</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$url</string></param><param><name>cache</name><value>600</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache=600</string></param></params></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>protected __construct([DOMNode $node]) inherited from Feed</string><docblock><description><![CDATA[<p>Creates a new Feed object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[<p>Output encoding</p>]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMNode</class><array/><nullable>1</nullable><string>DOMNode $node</string></param></params></method><method><name>GetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetChannel() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the channel object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public GetItems() inherited from Feed</string><docblock><description><![CDATA[<p>Returns the items of the Feed object</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetChannel</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetChannel(AbstractChannel $chnl) inherited from Feed</string><docblock><description><![CDATA[<p>Set the channel for the feed</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public Render(AbstractChannel $chnl [, $addHeader]) inherited from Feed</string><docblock><description><![CDATA[<p>Render th object to XML</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractChannel#class-AbstractChannel'>AbstractChannel</a>]]></type></types><variable><![CDATA[$chnl]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$addHeader]]></variable><description><![CDATA[<p>If true an text/xml header will be output</p>]]></description></param></params></docblock><params><param><name>chnl</name><value/><reference/><optional/><class>AbstractChannel</class><array/><nullable/><string>AbstractChannel $chnl</string></param><param><name>addHeader</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$addHeader</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from Feed</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from Feed</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetEncoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public SetEncoding($enc) inherited from Feed</string><docblock><description><![CDATA[<p>Set the output encoding</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$enc]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>enc</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$enc</string></param></params></method><method><name>AddNamespace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public AddNamespace($name, $space) inherited from Feed</string><docblock><description><![CDATA[<p>Add namespace</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$space]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>space</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$space</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Feed</declaring-class><inherited>1</inherited><string>public __toString() inherited from Feed</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>XML node name of this instance</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>DateFormat</name><value><![CDATA[%a, %d %b %Y %T %z]]></value><default>1</default><visibility>public</visibility><static>1</static><type>string</type><string>public static string $DateFormat</string><docblock><description><![CDATA[<p>Default date format for date nodes</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>DOMelement of this object</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>channel</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $channel</string><docblock><description><![CDATA[<p>The channel object</p>]]></description><var><![CDATA[AbstractChannel]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Root node attributes</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>ns</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $ns</string><docblock><description><![CDATA[<p>Namespaces</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $encoding</string><docblock><description><![CDATA[<p>Output encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>AtomChannel</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractChannel</extends><string>class AtomChannel extends AbstractChannel</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating an Atom channel (or main node)</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Creates a new AtomFeed object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>parse_entry</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>protected parse_entry(DOMElement $node)</string><docblock><description><![CDATA[<p>Parse the entry element.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public GetDate()</string><docblock><description><![CDATA[<p>Returns the date, either the updated or published node. The "updated" node
takes precedense over "published".</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public GetTitle()</string><docblock><description><![CDATA[<p>Returns the title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public GetContent()</string><docblock><description><![CDATA[<p>Returns the content, the summary node
element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the description</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomChannel</declaring-class><inherited/><string>public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>GetItems</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetItems() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Returns the array of items</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddItem</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public AddItem(AbstractItem $item) inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Adds an item to the items array</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=AbstractItem#class-AbstractItem'>AbstractItem</a>]]></type></types><variable><![CDATA[$item]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>item</name><value/><reference/><optional/><class>AbstractItem</class><array/><nullable/><string>AbstractItem $item</string></param></params></method><method><name>GetLastBuildDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public GetLastBuildDate() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Tries to find the last build date</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractChannel</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractChannel</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Subnodes to render.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>lastBuildDateNode</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $lastBuildDateNode</string><docblock><description><![CDATA[<p>Name of the last build date node</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>items</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $items</string><docblock><description><![CDATA[<p>The items of the channel</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>The name of the root node</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>AtomEntry</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>AbstractItem</extends><string>class AtomEntry extends AbstractItem</string><implements/><docblock><description><![CDATA[<p>A class for reading and creating an Atom entry</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Feed]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public __construct([DOMElement $node])</string><docblock><description><![CDATA[<p>Creates a new AtomEntry object</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional>1</optional><class>DOMElement</class><array/><nullable>1</nullable><string>DOMElement $node</string></param></params></method><method><name>GetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public GetDate()</string><docblock><description><![CDATA[<p>Returns the date, either the updated or published node. The "updated" node
takes precedense over "published".</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public GetTitle()</string><docblock><description><![CDATA[<p>Returns the title</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetContent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public GetContent()</string><docblock><description><![CDATA[<p>Returns the content, the summary node
element.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>SetTitle</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public SetTitle($value)</string><docblock><description><![CDATA[<p>Set the title element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDescription</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public SetDescription($value)</string><docblock><description><![CDATA[<p>Set the description element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public SetLink($value)</string><docblock><description><![CDATA[<p>Set the link element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetDate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>public SetDate($value)</string><docblock><description><![CDATA[<p>Set the date element</p>]]></description><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='?__plibclass=Date#class-Date'>Date</a>]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>parse_content</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>protected parse_content(DOMElement $n)</string><docblock><description><![CDATA[<p>Callback for the content node.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>parse_summary</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>protected parse_summary(DOMElement $n)</string><docblock><description><![CDATA[<p>Callback for an eventual summary node</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>parse_category</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>protected parse_category(DOMElement $n)</string><docblock><description><![CDATA[<p>Parse a category node</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>parse_link</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AtomEntry</declaring-class><inherited/><string>protected parse_link(DOMElement $n)</string><docblock/><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetLink</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractItem</declaring-class><inherited>1</inherited><string>public GetLink([$firstSingle]) inherited from AbstractItem</string><docblock><description><![CDATA[<p>Returns the link element</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$firstSingle]]></variable><description><![CDATA[<p>Atom feed items can have multiple links and and have several attributes.
 If this is set to true the first found link with the attribute <code>type</code>
 set to <code>text/html</code> will be returned</p>]]></description></param></params><return><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>firstSingle</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$firstSingle</string></param></params></method><method><name>parse</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parse() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Parse the DOMElement node.</p>]]></description></docblock><params/></method><method><name>isNSNode</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final isNSNode($name) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Checks if $name is a namespace node, i.e. contains a ":".</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[int]]></type><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param></params></method><method><name>parseDefault</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final>1</final><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected final parseDefault(DOMElement $node) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Default handler for adding a node to the data array.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>node</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $node</string></param></params></method><method><name>innerHTML</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>protected innerHTML(DOMElement $n) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the content of node $n with tags and everything except the main
node it self. It's like "element.innerHTML" in JavaScript.</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type></types><variable><![CDATA[$n]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>n</name><value/><reference/><optional/><class>DOMElement</class><array/><nullable/><string>DOMElement $n</string></param></params></method><method><name>GetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetData() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the data array</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public GetElement($which) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Returns the element $which from the data array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetData($name, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an arbitrary key/value pair to the <a href='?__plibclass=AbstractThing#property-data'>AbstractThing::$data</a> array.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set root node attributes</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attributes]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetAttribute($key, $value) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Set a specific root attribute</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetElement</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public SetElement($name, $value [, $attr]) inherited from AbstractThing</string><docblock><description><![CDATA[<p>Add an abritrary element</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[array]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attr</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>AbstractThing</declaring-class><inherited>1</inherited><string>public __toString() inherited from AbstractThing</string><docblock><description><![CDATA[<p>Cast to string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>TYPE</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $TYPE</string><docblock><description><![CDATA[<p>Class type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>nodeName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $nodeName</string><docblock><description><![CDATA[<p>XML node name of this instance</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>NAME</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $NAME</string><docblock><description><![CDATA[<p>Class name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>required</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $required</string><docblock><description><![CDATA[<p>Required elements. Not used when parsing, just when buildning</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>subnodes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $subnodes</string><docblock><description><![CDATA[<p>Node names that should be tried for handling callback function.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $data</string><docblock><description><![CDATA[<p>Data container. An associative array where "key" will be the node name
and "value" the value of the node.</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>attributes</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $attributes</string><docblock><description><![CDATA[<p>Node attributes, if any</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $xml</string><docblock><description><![CDATA[<p>The DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property></properties></class></module><namespace name="Web.Flickr" path="Web/Flickr"><module><name>Photoset.php</name><path>Web/Flickr/Photoset.php</path><namespace>Web.Flickr</namespace><classpath>Web.Flickr.Photoset</classpath><docblock><description><![CDATA[<p>Flickr Photoset class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><class><name>FlickrPhotoset</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>FlickrMethod</extends><string>class FlickrPhotoset extends FlickrMethod</string><implements/><docblock><description><![CDATA[<p>Flickr Photoset class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public __construct(Flickr $api [, $photosetID])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Flickr#class-Flickr'>Flickr</a>]]></type></types><variable><![CDATA[$api]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$photosetID]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>api</name><value/><reference/><optional/><class>Flickr</class><array/><nullable/><string>Flickr $api</string></param><param><name>photosetID</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$photosetID</string></param></params></method><method><name>GetList</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetList([$useCache])</string><docblock><description><![CDATA[<p>Returns a list of all available photosets</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$useCache]]></variable><description><![CDATA[<p>Override the default set in @see{Flickr}.</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>useCache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$useCache</string></param></params></method><method><name>GetPhotos</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetPhotos([$extras [, $privacyFilter [, $perPage [, $page [, $cache]]]]])</string><docblock><description><![CDATA[<p>Returns a list of the photos</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photosets.getPhotos.html'>www.flickr.com/services/api/flickr.photosets.getPhotos.html</a>]]></link><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extras]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$privacyFilter]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$perPage]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$page]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Overrides the default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>extras</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extras</string></param><param><name>privacyFilter</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$privacyFilter</string></param><param><name>perPage</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$perPage</string></param><param><name>page</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$page</string></param><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetInfo</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetInfo([$cache])</string><docblock><description><![CDATA[<p>Returns the info about the current photoset</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photosets.getInfo.html'>www.flickr.com/services/api/flickr.photosets.getInfo.html</a>]]></link><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Overrides the default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetContext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetContext($photoID [, $cache])</string><docblock><description><![CDATA[<p>Returns next and previous photos for a photo in a set.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photosets.getContext.html'>www.flickr.com/services/api/flickr.photosets.getContext.html</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$photoID]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>photoID</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$photoID</string></param><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetSrc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetSrc($photo)</string><docblock><description><![CDATA[<p>Returns the full path to the plain photo</p>]]></description><params><param><types><type><![CDATA[array]]></type><type><![CDATA[object]]></type></types><variable><![CDATA[$photo]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>photo</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$photo</string></param></params></method><method><name>Download</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public Download($src, $saveTo)</string><docblock><description><![CDATA[<p>Download the given photo</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$src]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$saveTo]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>src</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$src</string></param><param><name>saveTo</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$saveTo</string></param></params></method><method><name>GetURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhotoset</declaring-class><inherited/><string>public GetURL(stdClass $photoset)</string><docblock><description><![CDATA[<p>Returns the URL to the photoset on Flickr.com</p>]]></description><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><variable><![CDATA[$obj]]></variable><description><![CDATA[<p>This should be an photoset object of a result set from a call to
  @see{FlickrPhotoset::GetList()} for instance.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>photoset</name><value/><reference/><optional/><class>stdClass</class><array/><nullable/><string>stdClass $photoset</string></param></params></method><method><name>execute</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited>1</inherited><string>protected execute($method [, $params [, $useCache [, $cachePrefix]]]) inherited from FlickrMethod</string><docblock><description><![CDATA[<p>Executes a Flicker method</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[<p>If HTTP query fails.</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$useCache]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cachePrefix]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param><param><name>params</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$params</string></param><param><name>useCache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$useCache</string></param><param><name>cachePrefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cachePrefix</string></param></params></method><method><name>getPhotoSrc</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited>1</inherited><string>protected getPhotoSrc($response) inherited from FlickrMethod</string><docblock><description><![CDATA[<p>Constructs the full URL to a Flicker photo</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><variable><![CDATA[$response]]></variable><description><![CDATA[<p>The part from <a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a> that contain photo info.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>response</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$response</string></param></params></method></methods><properties><property><name>id</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $id</string><docblock><description><![CDATA[<p>The Photoset ID</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>api</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $api</string><docblock><description><![CDATA[<p>The Flickr API object</p>]]></description><var><![CDATA[Flickr]]></var></docblock></property></properties></class></module><module><name>Flickr.php</name><path>Web/Flickr/Flickr.php</path><namespace>Web.Flickr</namespace><classpath>Web.Flickr.Flickr</classpath><docblock><description><![CDATA[<p>The core API class.</p>

<p>Once this class in included you don't need to explicitly include the
method classes since they will be autoloaded if not loaded.</p>

<div class='code'><code>PLib<span style='color: #0000FF;'>:</span><span style='color: #0000FF;'>:</span>Import<span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;Web.Flickr.Flickr&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #990000;'><b>$api</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;Flickr<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>.</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>&#160;<br/><span style='color: #0099CC;'>//!&#160;The&#160;Photoset.php&#160;file&#160;will&#160;be&#160;loaded&#160;automatically</span><br/><span style='color: #990000;'><b>$photoset</b></span>&#160;<span style='color: #0000FF;'>=</span>&#160;<span style='color: #000099;'><b>new</b></span>&#160;FlickrPhotoset<span style='color: #0000FF;'>(</span><span style='color: #990000;'><b>$api</b></span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;photoset-id&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.2]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage><uses><use><types><type><![CDATA[<a href='?__plibclass=HTTPRequest#class-HTTPRequest'>HTTPRequest</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=FlickrCache#class-FlickrCache'>FlickrCache</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=FlickrRequest#class-FlickrRequest'>FlickrRequest</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></use><use><types><type><![CDATA[<a href='?__plibclass=FlickrMethod#class-FlickrMethod'>FlickrMethod</a>]]></type></types><description><![CDATA[]]></description></use></uses></docblock><class><name>Flickr</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Flickr</string><implements/><docblock><description><![CDATA[<p>The core Flickr API class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage><depends><depend><types><type><![CDATA[<a href='?__plibclass=HTTPRequest#class-HTTPRequest'>HTTPRequest</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=FlickrCache#class-FlickrCache'>FlickrCache</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=FlickrRequest#class-FlickrRequest'>FlickrRequest</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></depend><depend><types><type><![CDATA[<a href='?__plibclass=FlickrMethod#class-FlickrMethod'>FlickrMethod</a>]]></type></types><description><![CDATA[]]></description></depend></depends></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public __construct($key, $secret [, $token [, $cacheDir]])</string><docblock><description><![CDATA[<p>Creates a new Flickr object</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[<p>If $cacheDir is set and it's not a directory or the directory
  isn't writable.</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$secret]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$token]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cacheDir]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>key</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$key</string></param><param><name>secret</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$secret</string></param><param><name>token</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$token</string></param><param><name>cacheDir</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cacheDir</string></param></params></method><method><name>Key</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Key([$key])</string><docblock><description><![CDATA[<p>Getter/setter for the API key</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$key]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>key</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$key</string></param></params></method><method><name>Secret</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Secret([$secret])</string><docblock><description><![CDATA[<p>Getter/setter for the API secret</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$secret]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>secret</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$secret</string></param></params></method><method><name>Token</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Token([$token])</string><docblock><description><![CDATA[<p>Getter/setter for the API token</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$token]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>token</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$token</string></param></params></method><method><name>Endpoint</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Endpoint([$endpoint])</string><docblock><description><![CDATA[<p>Getter/setter for the endpoint URL</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$endpoint]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>endpoint</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$endpoint</string></param></params></method><method><name>Permisson</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Permisson([$perm])</string><docblock><description><![CDATA[<p>Getter/setter for the permission</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$endpoint]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>perm</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$perm</string></param></params></method><method><name>UseCache</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public UseCache()</string><docblock><description><![CDATA[<p>Are we using caching or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>CacheDir</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public CacheDir([$cacheDir])</string><docblock><description><![CDATA[<p>Getter/setter for the cachedir</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[<p>If the cachedir isn't a directory or isn't writable</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cacheDir]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cacheDir</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cacheDir</string></param></params></method><method><name>ResponseFormat</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public ResponseFormat([$responseFormat])</string><docblock><description><![CDATA[<p>Getter/setter for the response format</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$responseFormat]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>responseFormat</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$responseFormat</string></param></params></method><method><name>Cache</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public Cache()</string><docblock><description><![CDATA[<p>Returns the cache object</p>]]></description><return><types><type><![CDATA[<a href='?__plibclass=FlickrCache#class-FlickrCache'>FlickrCache</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsAuthenticated</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public IsAuthenticated()</string><docblock><description><![CDATA[<p>Returns whether we're authenticated or not</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>UserID</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public UserID()</string><docblock><description><![CDATA[<p>Returns the user id or tries to fetch it if not set.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetToken</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public GetToken($perms, $frob)</string><docblock><description><![CDATA[<p>Returns a Flickr token</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$perms]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$frob]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>perms</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$perms</string></param><param><name>frob</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$frob</string></param></params></method><method><name>GetFrob</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public GetFrob()</string><docblock><description><![CDATA[<p>Returns the frob.</p>]]></description><since><![CDATA[0.2]]></since><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetAuthURL</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public GetAuthURL($perms)</string><docblock><description><![CDATA[<p>Creates an authentication URL.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$perms]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>perms</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$perms</string></param></params></method><method><name>SetError</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public SetError($code, $message)</string><docblock><description><![CDATA[<p>Sets a new error object</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$message]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param><param><name>message</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$message</string></param></params></method><method><name>LastError</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public LastError()</string><docblock><description><![CDATA[<p>Returns the error object and resets it</p>]]></description><since><![CDATA[0.2]]></since><return><types><type><![CDATA[<a href='?__plibclass=FlickrError#class-FlickrError'>FlickrError</a>]]></type></types><description><![CDATA[<p>Returns NULL if no error has occured</p>]]></description></return></docblock><params/></method><method><name>execute</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>private execute($method [, $params])</string><docblock><description><![CDATA[<p>Executes a Flickr method</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param><param><name>params</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$params</string></param></params></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Flickr</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Converts the object to a string representation</p>]]></description><return><types><type><![CDATA[String]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>DEBUG</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>bool</type><string>public static $DEBUG</string><docblock><description><![CDATA[<p>Debug flag.</p>]]></description><since><![CDATA[0.2]]></since><var><![CDATA[bool]]></var></docblock></property><property><name>key</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $key</string><docblock><description><![CDATA[<p>The API key</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>secret</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $secret</string><docblock><description><![CDATA[<p>The API secret</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>token</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $token</string><docblock><description><![CDATA[<p>The API token</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>endpointURL</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $endpointURL</string><docblock><description><![CDATA[<p>The API enpoint url</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>responseFormat</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $responseFormat</string><docblock><description><![CDATA[<p>The response format</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cacheDir</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $cacheDir</string><docblock><description><![CDATA[<p>The cache dir</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>cache</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $cache</string><docblock><description><![CDATA[<p>The cache object</p>]]></description><var><![CDATA[FlickrCache]]></var></docblock></property><property><name>userID</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $userID</string><docblock><description><![CDATA[<p>The user ID</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>username</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $username</string><docblock><description><![CDATA[<p>The username</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>fullname</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $fullname</string><docblock><description><![CDATA[<p>The users full name</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>perms</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $perms</string><docblock><description><![CDATA[<p>The current permisson</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>useCache</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $useCache</string><docblock><description><![CDATA[<p>Use cacheing?</p>]]></description><var><![CDATA[bool]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $error</string><docblock><description><![CDATA[<p>Error object</p>]]></description><since><![CDATA[0.2]]></since><var><![CDATA[FlickrError]]></var></docblock></property></properties></class><class><name>FlickrMethod</name><type>class</type><abstract>1</abstract><final/><instantiable/><extends/><string>[abstract class FlickrMethod]</string><implements/><docblock><description><![CDATA[<p>A base class for all Flickr methods</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited/><string>protected __construct(Flickr $api)</string><docblock><description><![CDATA[<p>Hidden constructor.
This class must be instantiated through an inheriting class.</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Flickr#class-Flickr'>Flickr</a>]]></type></types><variable><![CDATA[$api]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>api</name><value/><reference/><optional/><class>Flickr</class><array/><nullable/><string>Flickr $api</string></param></params></method><method><name>execute</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited/><string>protected execute($method [, $params [, $useCache [, $cachePrefix]]])</string><docblock><description><![CDATA[<p>Executes a Flicker method</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[<p>If HTTP query fails.</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$useCache]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cachePrefix]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param><param><name>params</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$params</string></param><param><name>useCache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$useCache</string></param><param><name>cachePrefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cachePrefix</string></param></params></method><method><name>getPhotoSrc</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited/><string>protected getPhotoSrc($response)</string><docblock><description><![CDATA[<p>Constructs the full URL to a Flicker photo</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><variable><![CDATA[$response]]></variable><description><![CDATA[<p>The part from <a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a> that contain photo info.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>response</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$response</string></param></params></method><method><name>download</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited/><string>protected download($src, $saveTo)</string><docblock><description><![CDATA[<p>Download a Flickr image</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$src]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$saveTo]]></variable><description><![CDATA[<p>Directory to save to</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[<p>The path to the downloaded file</p>]]></description></return></docblock><params><param><name>src</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$src</string></param><param><name>saveTo</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$saveTo</string></param></params></method></methods><properties><property><name>api</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $api</string><docblock><description><![CDATA[<p>The Flickr API object</p>]]></description><var><![CDATA[Flickr]]></var></docblock></property></properties></class><class><name>FlickrError</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class FlickrError</string><implements/><docblock><description><![CDATA[<p>Generic error class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage><version><![CDATA[0.1]]></version></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrError</declaring-class><inherited/><string>public __construct($code, $message)</string><docblock><description><![CDATA[<p>Creates a new FlickrError object</p>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$message]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param><param><name>message</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$message</string></param></params></method><method><name>GetCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrError</declaring-class><inherited/><string>public GetCode()</string><docblock><description><![CDATA[<p>Getter for the error code</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>GetMesssage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrError</declaring-class><inherited/><string>public GetMesssage()</string><docblock><description><![CDATA[<p>Getter for the error message</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock><description><![CDATA[<p>Response/error code</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $message</string><docblock><description><![CDATA[<p>Response/error message</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class><class><name>FlickrException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class FlickrException extends Exception</string><implements/><docblock><description><![CDATA[<p>Generic Flickr exception class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><methods><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class><function><name>__autoload</name><internal/><reference/><string>__autoload($class)</string><docblock><description><![CDATA[<p>Autoload function for the Flickr method class files</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$class]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>class</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$class</string></param></params></function></module><module><name>Photo.php</name><path>Web/Flickr/Photo.php</path><namespace>Web.Flickr</namespace><classpath>Web.Flickr.Photo</classpath><docblock><description><![CDATA[<p>Flicker Photo class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><class><name>FlickrPhoto</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>FlickrMethod</extends><string>class FlickrPhoto extends FlickrMethod</string><implements/><docblock><description><![CDATA[<p>Flicker Photo class</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><version><![CDATA[0.1]]></version><package><![CDATA[Web]]></package><subpackage><![CDATA[Flickr]]></subpackage></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public __construct(Flickr $api [, $photoID])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=Flickr#class-Flickr'>Flickr</a>]]></type></types><variable><![CDATA[$api]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$photoID]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>api</name><value/><reference/><optional/><class>Flickr</class><array/><nullable/><string>Flickr $api</string></param><param><name>photoID</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$photoID</string></param></params></method><method><name>GetInfo</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetInfo([$secret [, $cache]])</string><docblock><description><![CDATA[<p>Returns the photo info</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getInfo.html'>www.flickr.com/services/api/flickr.photos.getInfo.html</a>]]></link><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$secret]]></variable><description><![CDATA[<p>If a correct secret is passed permission checking is skipped.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override the default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>secret</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$secret</string></param><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetExif</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetExif([$secret [, $cache]])</string><docblock><description><![CDATA[<p>Returns the Exif info of the image if it has any</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getExif.html'>www.flickr.com/services/api/flickr.photos.getExif.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$secret]]></variable><description><![CDATA[<p>If a correct secret is passed permission checking is skipped.</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override the default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>secret</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$secret</string></param><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetSizes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetSizes([$cache])</string><docblock><description><![CDATA[<p>Returns available sizes of the image</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getSizes.html'>www.flickr.com/services/api/flickr.photos.getSizes.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetRecent</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetRecent([$perPage [, $page [, $extras]]])</string><docblock><description><![CDATA[<p>Returns a list of the latest public photos uploaded to flickr.</p>

<p><strong>NOTE!</strong> This means ALL public photos, not just yours!<br/>
<strong>NOTE!</strong> The result of this method call won't be cached!</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getRecent.html'>www.flickr.com/services/api/flickr.photos.getRecent.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$perPage]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$page]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extras]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>perPage</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$perPage</string></param><param><name>page</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$page</string></param><param><name>extras</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extras</string></param></params></method><method><name>RecentlyUpdated</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public RecentlyUpdated([$minDate [, $perPage [, $page [, $extras]]]])</string><docblock><description><![CDATA[<p>Return a list of your photos that have been recently created or which have
been recently modified.
Recently modified may mean that the photo's metadata (title, description,
tags) may have been changed or a comment has been added (or just modified
somehow).</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.recentlyUpdated.html'>www.flickr.com/services/api/flickr.photos.recentlyUpdated.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$minDate]]></variable><description><![CDATA[<p>A Unix timestamp indicating the date from which modifications should be
  compared. Defauls to two weeks</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$perPage]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$page]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extras]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>minDate</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$minDate</string></param><param><name>perPage</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$perPage</string></param><param><name>page</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$page</string></param><param><name>extras</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extras</string></param></params></method><method><name>GetPerms</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetPerms([$cache])</string><docblock><description><![CDATA[<p>Returns the permissions of the current photo.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getPerms.html'>www.flickr.com/services/api/flickr.photos.getPerms.html</a>]]></link><since><![CDATA[0.2]]></since><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetContext</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetContext([$cache])</string><docblock><description><![CDATA[<p>Returns next and previous photos for a photo in a photostream.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getContext.html'>www.flickr.com/services/api/flickr.photos.getContext.html</a>]]></link><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetCounts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetCounts([$dates [, $takenDates]])</string><docblock><description><![CDATA[<p>Gets a list of photo counts for the given date ranges for the calling user.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getCounts.html'>www.flickr.com/services/api/flickr.photos.getCounts.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$dates]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$takenDates]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>dates</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$dates</string></param><param><name>takenDates</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$takenDates</string></param></params></method><method><name>GetAllContexts</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetAllContexts([$cache])</string><docblock><description><![CDATA[<p>Returns all visible sets and pools the photo belongs to.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getAllContexts.html'>www.flickr.com/services/api/flickr.photos.getAllContexts.html</a>]]></link><since><![CDATA[0.2]]></since><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$cache]]></variable><description><![CDATA[<p>Override the default cacheability</p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>cache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cache</string></param></params></method><method><name>GetContactsPhotos</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetContactsPhotos([$count [, $justFriends [, $singlePhoto [, $includeSelf [, $extras]]]]])</string><docblock><description><![CDATA[<p>Fetch a list of recent photos from the calling users' contacts.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://flickr.com/services/api/flickr.photos.getContactsPhotos.html'>flickr.com/services/api/flickr.photos.getContactsPhotos.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$count]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$justFriends]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$singlePhoto]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$includeSelf]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extras]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>count</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$count</string></param><param><name>justFriends</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$justFriends</string></param><param><name>singlePhoto</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$singlePhoto</string></param><param><name>includeSelf</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$includeSelf</string></param><param><name>extras</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extras</string></param></params></method><method><name>GetContactsPublicPhotos</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetContactsPublicPhotos([$userId [, $count [, $justFriends [, $singlePhoto [, $includeSelf [, $extras]]]]]])</string><docblock><description><![CDATA[<p>Fetch a list of recent photos from the calling users' contacts.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://flickr.com/services/api/flickr.photos.getContactsPublicPhotos.html'>flickr.com/services/api/flickr.photos.getContactsPublicPhotos.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$userId]]></variable><description><![CDATA[<p>The NSID of the user to fetch photos for. Defaults to the user id of
  the current Flickr API instance.</p>]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$count]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$justFriends]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$singlePhoto]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$includeSelf]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$extras]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>userId</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$userId</string></param><param><name>count</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$count</string></param><param><name>justFriends</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$justFriends</string></param><param><name>singlePhoto</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$singlePhoto</string></param><param><name>includeSelf</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$includeSelf</string></param><param><name>extras</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$extras</string></param></params></method><method><name>GetUntagged</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetUntagged([$args])</string><docblock><description><![CDATA[<p>Returns a list of your photos with no tags.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getUntagged.html'>www.flickr.com/services/api/flickr.photos.getUntagged.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>An associative array of arguments. See the API page for a description.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$args</string></param></params></method><method><name>GetNotInSet</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetNotInSet([$args])</string><docblock><description><![CDATA[<p>Returns a list of your photos that are not part of any sets.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getNotInSet.html'>www.flickr.com/services/api/flickr.photos.getNotInSet.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>An associative array of arguments. See the API page for a description.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$args</string></param></params></method><method><name>GetWithGeoData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetWithGeoData([$args])</string><docblock><description><![CDATA[<p>Returns a list of your geo-tagged photos.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getWithGeoData.html'>www.flickr.com/services/api/flickr.photos.getWithGeoData.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>An associative array of arguments. See the API page for a description.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$args</string></param></params></method><method><name>GetWithoutGeoData</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetWithoutGeoData([$args])</string><docblock><description><![CDATA[<p>Returns a list of your photos which haven't been geo-tagged.</p>

<p><strong>NOTE!</strong> The result of this method call will not be cached.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.getWithGeoData.html'>www.flickr.com/services/api/flickr.photos.getWithGeoData.html</a>]]></link><since><![CDATA[0.2]]></since><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>An associative array of arguments. See the API page for a description.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$args</string></param></params></method><method><name>Search</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public Search($args)</string><docblock><description><![CDATA[<p>Return a list of photos matching some criteria. Only photos visible to the
calling user will be returned. To return private or semi-private photos,
the caller must be authenticated with 'read' permissions, and have
permission to view the photos. Unauthenticated calls will only return
public photos.</p>]]></description><link><![CDATA[<a href='http://www.flickr.com/services/api/flickr.photos.search.html'>www.flickr.com/services/api/flickr.photos.search.html</a>]]></link><since><![CDATA[0.2]]></since><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Since there's a load of arguments you can pass to the search method
  you must pass the arguments as an associative array. See the Flickr
  API for details.</p>]]></description></param></params><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>args</name><value/><reference/><optional/><class/><array/><nullable/><string>$args</string></param></params></method><method><name>GetSrc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public GetSrc()</string><docblock><description><![CDATA[<p>Returns the full path to the plain photo</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Download</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>FlickrPhoto</declaring-class><inherited/><string>public Download($saveTo)</string><docblock><description><![CDATA[<p>Download the image</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$saveTo]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>saveTo</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$saveTo</string></param></params></method><method><name>execute</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited>1</inherited><string>protected execute($method [, $params [, $useCache [, $cachePrefix]]]) inherited from FlickrMethod</string><docblock><description><![CDATA[<p>Executes a Flicker method</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=FlickrException#class-FlickrException'>FlickrException</a>]]></type></types><description><![CDATA[<p>If HTTP query fails.</p>]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$method]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$useCache]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$cachePrefix]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>method</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$method</string></param><param><name>params</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$params</string></param><param><name>useCache</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$useCache</string></param><param><name>cachePrefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$cachePrefix</string></param></params></method><method><name>getPhotoSrc</name><constructor/><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>FlickrMethod</declaring-class><inherited>1</inherited><string>protected getPhotoSrc($response) inherited from FlickrMethod</string><docblock><description><![CDATA[<p>Constructs the full URL to a Flicker photo</p>]]></description><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=stdClass&amp;lang=en'>stdClass</a>]]></type></types><variable><![CDATA[$response]]></variable><description><![CDATA[<p>The part from <a href='?__plibclass=FlickrResponse#class-FlickrResponse'>FlickrResponse</a> that contain photo info.</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>response</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$response</string></param></params></method></methods><properties><property><name>id</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $id</string><docblock><description><![CDATA[<p>The photo id</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>src</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $src</string><docblock><description><![CDATA[<p>The src of the photo on Flickr</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>defParams</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $defParams</string><docblock><description><![CDATA[<p>Default parameters for every method call</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>api</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $api</string><docblock><description><![CDATA[<p>The Flickr API object</p>]]></description><var><![CDATA[Flickr]]></var></docblock></property></properties></class></module></namespace></namespace><namespace name="XML" path="XML"><module><name>XMLValidator.php</name><path>XML/XMLValidator.php</path><namespace>XML</namespace><classpath>XML.XMLValidator</classpath><docblock><description><![CDATA[<p>XML validator</p>]]></description><author><![CDATA[Pontus Östlund &#60;spam@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><package><![CDATA[XML]]></package></docblock><class><name>XMLValidator</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class XMLValidator</string><implements/><docblock><description><![CDATA[<p>Validate an XML document</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public __construct($data)</string><docblock><description><![CDATA[<p>Creates a new XMLValidator object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$data]]></variable><description><![CDATA[<p>XML tree</p>]]></description></param></params></docblock><params><param><name>data</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$data</string></param></params></method><method><name>Validate</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>XMLValidator</declaring-class><inherited/><string>public static Validate($xml)</string><docblock><description><![CDATA[<p>Validate the XML</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLValidator#class-XMLValidator'>XMLValidator</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method><method><name>GetError</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public GetError()</string><docblock><description><![CDATA[<p>Returns a formatted error string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ErrStr</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public ErrStr()</string><docblock><description><![CDATA[<p>Returns the error description</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ErrLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public ErrLine()</string><docblock><description><![CDATA[<p>Returns the line on which the error occured</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ErrCol</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public ErrCol()</string><docblock><description><![CDATA[<p>Returns the column in which the error occured</p>]]></description><return><types><type><![CDATA[int]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ErrTag</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public ErrTag()</string><docblock><description><![CDATA[<p>Returns the name of the tag where the error occured</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>IsError</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>public IsError()</string><docblock><description><![CDATA[<p>Did an error occur or not?</p>]]></description><return><types><type><![CDATA[bool]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>startTag</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>private startTag($parser, $tag, $attr)</string><docblock><description><![CDATA[<p>Callback for start tags</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param><param><name>attr</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$attr</string></param></params></method><method><name>endTag</name><constructor/><destructor/><abstract/><visibility>private</visibility><final/><reference/><static/><declaring-class>XMLValidator</declaring-class><inherited/><string>private endTag($parser, $tag)</string><docblock><description><![CDATA[<p>Callback for end tags</p>]]></description><params><param><types><type><![CDATA[resource]]></type></types><variable><![CDATA[$parser]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tag]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>parser</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$parser</string></param><param><name>tag</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tag</string></param></params></method></methods><properties><property><name>validator</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static>1</static><type>null</type><string>public static $validator</string><docblock/></property><property><name>_openStack</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $_openStack</string><docblock><description><![CDATA[<p>Parser stack</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>data</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $data</string><docblock><description><![CDATA[<p>Data to validate</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>parser</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $parser</string><docblock><description><![CDATA[<p>SAX parser</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>error</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $error</string><docblock><description><![CDATA[<p>Error from SAX parser</p>]]></description><var><![CDATA[resource]]></var></docblock></property><property><name>errstr</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $errstr</string><docblock><description><![CDATA[<p>Error description</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>errline</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $errline</string><docblock><description><![CDATA[<p>Error line</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>errcol</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $errcol</string><docblock><description><![CDATA[<p>Error column</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>errtag</name><value><![CDATA[]]></value><default>1</default><visibility>private</visibility><static/><type>null</type><string>private $errtag</string><docblock><description><![CDATA[<p>Error tag</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class></module><module><name>QName.php</name><path>XML/QName.php</path><namespace>XML</namespace><classpath>XML.QName</classpath><docblock><description><![CDATA[<p>QName class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[1.0]]></version><license><![CDATA[GPL License 2]]></license><package><![CDATA[XML]]></package></docblock><class><name>QName</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class QName</string><implements/><docblock><description><![CDATA[<p>Class representing a QName.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public __construct($namespace [, $localName [, $prefix]])</string><docblock><description><![CDATA[<p>Creates a new <code>QName</code> object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$namespace]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$localName]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>namespace</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$namespace</string></param><param><name>localName</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$localName</string></param><param><name>prefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>NamespaceURI</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public NamespaceURI([$namespace])</string><docblock><description><![CDATA[<p>Getter/setter for the namespace</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$namespace]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>namespace</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$namespace</string></param></params></method><method><name>LocalName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public LocalName([$localName])</string><docblock><description><![CDATA[<p>Getter/setter for the local name</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$localName]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>localName</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$localName</string></param></params></method><method><name>Prefix</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public Prefix([$prefix])</string><docblock><description><![CDATA[<p>Getter/setter for the namespace prefix</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$prefix]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>prefix</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$prefix</string></param></params></method><method><name>Name</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public Name()</string><docblock><description><![CDATA[<p>Returns the full attribute name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>FQN</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public FQN()</string><docblock><description><![CDATA[<p>Returns the fully qualified name</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>QName</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast to string. Same as <a href='?__plibclass=QName#method-FQN'>QName::FQN()</a></p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>namespace</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $namespace</string><docblock><description><![CDATA[<p>The namespace</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>localName</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $localName</string><docblock><description><![CDATA[<p>The local name.</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>prefix</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $prefix</string><docblock><description><![CDATA[<p>The namespace prefix</p>]]></description><var><![CDATA[string]]></var></docblock></property></properties></class></module><module><name>XSLT.php</name><path>XML/XSLT.php</path><namespace>XML</namespace><classpath>XML.XSLT</classpath><docblock><description><![CDATA[<p>XSLT functions and classes</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><license><![CDATA[GPL License 2]]></license><version><![CDATA[1.0]]></version><package><![CDATA[XML]]></package><subpackage><![CDATA[XSL]]></subpackage></docblock><class><name>XSLTransform</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class XSLTransform</string><implements/><docblock><description><![CDATA[<p>XSLTransform
A wrapper for creating an XSLT processor.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package><subpackage><![CDATA[XSL]]></subpackage><version><![CDATA[1.0]]></version><example><![CDATA[XSLTransform.xmpl]]></example></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public __construct($xsl [, $setParams])</string><docblock><description><![CDATA[<p>Constructor</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=XSLTransformException#class-XSLTransformException'>XSLTransformException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$xsl]]></variable><description><![CDATA[<p>The path to the XSL file</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$setParams]]></variable><description><![CDATA[<p>If true some default XSLT params will be set. The following PHP
  variables will be set and given a "namespace":</p>

<pre><code>* $_SERVER will be popultated as $server.key
* $_REQUEST will be popultated as $form.key
</code></pre>

<p>So if $setParams is true you can for instance grab a querystring
  variable named "name" in the XSL template with:</p>

<pre><code>`&lt;xsl:value-of select="$form.name" /&gt;`
</code></pre>

<p>or the current script file name with:</p>

<pre><code>`&lt;xsl:value-of select="$server.php_self" /&gt;`
</code></pre>

<p>The array keys in the PHP arrays will be lower cased when set in the
  XSL template.</p>]]></description></param></params></docblock><params><param><name>xsl</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xsl</string></param><param><name>setParams</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$setParams</string></param></params></method><method><name>SetParam</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public SetParam($name, $value [, $ns])</string><docblock><description><![CDATA[<p>Set an XSL param in the stylesheet</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>The XSL param name</p>]]></description></param><param><types><type><![CDATA[string]]></type><type><![CDATA[int]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The XSL param value</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[<p>The XSL namespace</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>ns</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$ns</string></param></params></method><method><name>SetParams</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public SetParams($params)</string><docblock><description><![CDATA[<p>Wrapper for <a href='?__plibclass=XSLTransform#method-SetParam'>XSLTransform::SetParam()</a> so that we can pass an array
with key/value pairs to set all params at once.</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$params]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>params</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$params</string></param></params></method><method><name>GetObject</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public GetObject()</string><docblock><description><![CDATA[<p>Get the actual XSLTProcessor object</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=XSLTProcessor&amp;lang=en'>XSLTProcessor</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>RegisterPHPFunctions</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public RegisterPHPFunctions([$args])</string><docblock><description><![CDATA[<p>Register PHP functions. <a href='http://php.net/manual-lookup.php?pattern=XSLTProcessor+registerPHPFunctions&amp;lang=en'>XSLTProcessor::registerPHPFunctions()</a></p>]]></description><params><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$args]]></variable><description><![CDATA[<p>Either a function name as a string or an array of function names</p>]]></description></param></params></docblock><params><param><name>args</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$args</string></param></params></method><method><name>Transform</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XSLTransform</declaring-class><inherited/><string>public Transform($xml)</string><docblock><description><![CDATA[<p>Do the transformation!</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=XSLTransformException#class-XSLTransformException'>XSLTransformException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[string]]></type><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLDocument#class-XMLDocument'>XMLDocument</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$xml]]></variable><description><![CDATA[<p></p>]]></description></param></params><return><types><type><![CDATA[mixed]]></type></types><description><![CDATA[<p>string|boolean</p>]]></description></return></docblock><params><param><name>xml</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$xml</string></param></params></method></methods><properties/></class><class><name>XSLTransformException</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>Exception</extends><string>class XSLTransformException extends Exception</string><implements/><docblock><description><![CDATA[<p>XSL transform exception class</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package><subpackage><![CDATA[Exception]]></subpackage></docblock><methods><method><name>ErrorHandler</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>XSLTransformException</declaring-class><inherited/><string>public static ErrorHandler($code, $string, $file, $line, $context)</string><docblock><description><![CDATA[<p>Handle error callbacks when used through
<a href='http://php.net/set_error_handler'>set_error_handler()</a>.</p>

<div class='code'><code><span style='color: #ff0000;'>set_error_handler</span><span style='color: #0000FF;'>(</span><span style='color: #000099;'><b>array</b></span><span style='color: #0000FF;'>(</span><span style='color: #008800;'>&#39;XSLTransformException&#39;</span><span style='color: #0000FF;'>,</span>&#160;<span style='color: #008800;'>&#39;ErrorHandler&#39;</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>,</span>&#160;E_ALL<span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/>doSomeStuff<span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/><span style='color: #ff0000;'>restore_error_handler</span><span style='color: #0000FF;'>(</span><span style='color: #0000FF;'>)</span><span style='color: #0000FF;'>;</span><br/></code></div>]]></description><params><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$code]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$string]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$file]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[int]]></type></types><variable><![CDATA[$line]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$context]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>code</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$code</string></param><param><name>string</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$string</string></param><param><name>file</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$file</string></param><param><name>line</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$line</string></param><param><name>context</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$context</string></param></params></method><method><name>__clone</name><constructor/><destructor/><abstract/><visibility>private</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>private final __clone() inherited from Exception</string><docblock/><params/></method><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __construct([$message [, $code]]) inherited from Exception</string><docblock/><params><param><name>message</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$message</string></param><param><name>code</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$code</string></param></params></method><method><name>getMessage</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getMessage() inherited from Exception</string><docblock/><params/></method><method><name>getCode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getCode() inherited from Exception</string><docblock/><params/></method><method><name>getFile</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getFile() inherited from Exception</string><docblock/><params/></method><method><name>getLine</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getLine() inherited from Exception</string><docblock/><params/></method><method><name>getTrace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTrace() inherited from Exception</string><docblock/><params/></method><method><name>getTraceAsString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final>1</final><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public final getTraceAsString() inherited from Exception</string><docblock/><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>Exception</declaring-class><inherited>1</inherited><string>public __toString() inherited from Exception</string><docblock/><params/></method></methods><properties><property><name>message</name><value><![CDATA[]]></value><default>1</default><visibility>public</visibility><static/><type>null</type><string>public $message</string><docblock/></property><property><name>code</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $code</string><docblock/></property><property><name>file</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $file</string><docblock/></property><property><name>line</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $line</string><docblock/></property></properties></class></module><module><name>XMLBuilder.php</name><path>XML/XMLBuilder.php</path><namespace>XML</namespace><classpath>XML.XMLBuilder</classpath><docblock><description><![CDATA[<p>Helper classes and functions for generating XML documents.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><version><![CDATA[1.0]]></version><license><![CDATA[GPL License 2]]></license><package><![CDATA[XML]]></package><example><![CDATA[XMLBuilder.xmpl]]></example></docblock><class><name>XMLNode</name><type>class</type><abstract/><final/><instantiable/><extends/><string>[class XMLNode]</string><implements/><docblock><description><![CDATA[<p>A cointainer class that represents a "fake" DomNode.
This class contains shortcuts to alter a DomDocument tree.
This class should not be instantiated on its own but should be created
through the XMLDocument class.</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package><example><![CDATA[XMLBuilder.xmpl]]></example></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>protected</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>protected __construct(XMLDocument $owner)</string><docblock><description><![CDATA[<p>Creates a new XMLNode</p>]]></description><params><param><types><type><![CDATA[<a href='?__plibclass=XMLDocument#class-XMLDocument'>XMLDocument</a>]]></type></types><variable><![CDATA[$owner]]></variable><description><![CDATA[<p>The document to which this node belongs</p>]]></description></param></params></docblock><params><param><name>owner</name><value/><reference/><optional/><class>XMLDocument</class><array/><nullable/><string>XMLDocument $owner</string></param></params></method><method><name>AddNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddNode($name [, $value [, $attributes]])</string><docblock><description><![CDATA[<p>Add a node to the XML document</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>Node name</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$val]]></variable><description><![CDATA[<p>Node value</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[<p>Node attributes as an associative array
 <code>array('attr' =&gt; 'val'[, 'attr' =&gt; 'val'])</code></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attributes</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>GetNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public GetNode()</string><docblock><description><![CDATA[<p>Returns the <a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a> of this object.</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddNSNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddNSNode($name, $value, QName $ns)</string><docblock><description><![CDATA[<p>Add a namespace node</p>]]></description><params><param><types><type><![CDATA[name]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=QName#class-QName'>QName</a>]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>ns</name><value/><reference/><optional/><class>QName</class><array/><nullable/><string>QName $ns</string></param></params></method><method><name>AddDomNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddDomNode($node)</string><docblock><description><![CDATA[<p>Appends an <a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a> to the current node.</p>

<p>The $node can either be a raw DOMElement node from a regular
<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> or an <a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>. If the latter the real
DOMElement node of the XMLNode object will be appended.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[<p>The newly created node</p>]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$node</string></param></params></method><method><name>AddNodeTree</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddNodeTree($tree)</string><docblock><description><![CDATA[<p>Add an XML string to the current node.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tree]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[<p>The newly created node object</p>]]></description></return></docblock><params><param><name>tree</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tree</string></param></params></method><method><name>AddCDATANode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddCDATANode($name, $value)</string><docblock><description><![CDATA[<p>Append content as a CDATA section</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>AddNodeAsCDATA</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public AddNodeAsCDATA($name, $value)</string><docblock><description><![CDATA[<p>Deprecated compatibility method.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=XMLNode#method-AddCDATANode'>XMLNode::AddCDATANode()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>Replace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public Replace($to)</string><docblock><description><![CDATA[<p>Replace the current node with $to</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$to]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>to</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$to</string></param></params></method><method><name>RemoveNodeByName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public RemoveNodeByName($which)</string><docblock><description><![CDATA[<p>Removes all nodes with the name $which</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public SetAttribute($name, $value)</string><docblock><description><![CDATA[<p>Set an attribute to the node</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>The attribute name</p>]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The attribute value</p>]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public SetAttributes($attributes)</string><docblock><description><![CDATA[<p>Set attributes to the node</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[<p>Associative array</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public Render()</string><docblock><description><![CDATA[<p>Render the current node to a string</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>InnerXML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public InnerXML()</string><docblock><description><![CDATA[<p>Returns the contents of the node without the node it self.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited/><string>public __toString()</string><docblock><description><![CDATA[<p>Cast this object to string.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=XMLNode#method-Render'>XMLNode::Render()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>node</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $node</string><docblock><description><![CDATA[<p>The real DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>owner</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $owner</string><docblock><description><![CDATA[<p>The owner document</p>]]></description><var><![CDATA[XMLDocument]]></var></docblock></property><property><name>doc</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $doc</string><docblock><description><![CDATA[<p>The <a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> of the owner document</p>]]></description><var><![CDATA[DOMDocument]]></var></docblock></property></properties></class><class><name>XMLDocument</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends>XMLNode</extends><string>class XMLDocument extends XMLNode</string><implements/><docblock><description><![CDATA[<p>Class to simplify the creation of XML documents</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package><example><![CDATA[XMLBuilder.xmpl]]></example></docblock><methods><method><name>__construct</name><constructor>1</constructor><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLDocument</declaring-class><inherited/><string>public __construct([$version=1.0 [, $encoding=utf-8]])</string><docblock><description><![CDATA[<p>Creates a new XMLDocument object</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$version]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$encoding]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>version</name><value>1.0</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$version=1.0</string></param><param><name>encoding</name><value>utf-8</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$encoding=utf-8</string></param></params></method><method><name>DomDoc</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLDocument</declaring-class><inherited/><string>public DomDoc()</string><docblock><description><![CDATA[<p>Returns the <a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> of this object</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Render</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLDocument</declaring-class><inherited/><string>public Render([$html [, $format [, $declaration=1]]])</string><docblock><description><![CDATA[<p>Render the object to XML</p>]]></description><params><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$html]]></variable><description><![CDATA[<p>Render into HTML format</p>]]></description></param><param><types><type><![CDATA[bool]]></type></types><variable><![CDATA[$format]]></variable><description><![CDATA[<p>Format the output (i.e. indentation)</p>]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>html</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$html</string></param><param><name>format</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$format</string></param><param><name>declaration</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$declaration=1</string></param></params></method><method><name>Encoding</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLDocument</declaring-class><inherited/><string>public Encoding()</string><docblock><description><![CDATA[<p>Returns the encoding</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>Finalize</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLDocument</declaring-class><inherited/><string>public Finalize([$html [, $format=1]])</string><docblock><description><![CDATA[<p>Compat method for older version of this class</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=XMLDocument#method-Render'>XMLDocument::Render()</a>]]></type></types><description><![CDATA[]]></description></see></docblock><params><param><name>html</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$html</string></param><param><name>format</name><value>1</value><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$format=1</string></param></params></method><method><name>AddNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddNode($name [, $value [, $attributes]]) inherited from XMLNode</string><docblock><description><![CDATA[<p>Add a node to the XML document</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>Node name</p>]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$val]]></variable><description><![CDATA[<p>Node value</p>]]></description></param><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[<p>Node attributes as an associative array
 <code>array('attr' =&gt; 'val'[, 'attr' =&gt; 'val'])</code></p>]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>attributes</name><value/><reference/><optional>1</optional><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>GetNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public GetNode() inherited from XMLNode</string><docblock><description><![CDATA[<p>Returns the <a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a> of this object.</p>]]></description><return><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AddNSNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddNSNode($name, $value, QName $ns) inherited from XMLNode</string><docblock><description><![CDATA[<p>Add a namespace node</p>]]></description><params><param><types><type><![CDATA[name]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[<a href='?__plibclass=QName#class-QName'>QName</a>]]></type></types><variable><![CDATA[$ns]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param><param><name>ns</name><value/><reference/><optional/><class>QName</class><array/><nullable/><string>QName $ns</string></param></params></method><method><name>AddDomNode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddDomNode($node) inherited from XMLNode</string><docblock><description><![CDATA[<p>Appends an <a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a> to the current node.</p>

<p>The $node can either be a raw DOMElement node from a regular
<a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a> or an <a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>. If the latter the real
DOMElement node of the XMLNode object will be appended.</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMNode&amp;lang=en'>DOMNode</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$node]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[<p>The newly created node</p>]]></description></return></docblock><params><param><name>node</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$node</string></param></params></method><method><name>AddNodeTree</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddNodeTree($tree) inherited from XMLNode</string><docblock><description><![CDATA[<p>Add an XML string to the current node.</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$tree]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[<p>The newly created node object</p>]]></description></return></docblock><params><param><name>tree</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$tree</string></param></params></method><method><name>AddCDATANode</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddCDATANode($name, $value) inherited from XMLNode</string><docblock><description><![CDATA[<p>Append content as a CDATA section</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>AddNodeAsCDATA</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public AddNodeAsCDATA($name, $value) inherited from XMLNode</string><docblock><description><![CDATA[<p>Deprecated compatibility method.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=XMLNode#method-AddCDATANode'>XMLNode::AddCDATANode()</a>]]></type></types><description><![CDATA[]]></description></see><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[]]></description></param><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>Replace</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public Replace($to) inherited from XMLNode</string><docblock><description><![CDATA[<p>Replace the current node with $to</p>]]></description><throws><types><type><![CDATA[<a href='?__plibclass=PLibException#class-PLibException'>PLibException</a>]]></type></types><description><![CDATA[]]></description></throws><params><param><types><type><![CDATA[<a href='http://php.net/manual-lookup.php?pattern=DOMElement&amp;lang=en'>DOMElement</a>]]></type><type><![CDATA[<a href='?__plibclass=XMLNode#class-XMLNode'>XMLNode</a>]]></type></types><variable><![CDATA[$to]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>to</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$to</string></param></params></method><method><name>RemoveNodeByName</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public RemoveNodeByName($which) inherited from XMLNode</string><docblock><description><![CDATA[<p>Removes all nodes with the name $which</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$which]]></variable><description><![CDATA[]]></description></param></params></docblock><params><param><name>which</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$which</string></param></params></method><method><name>SetAttribute</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public SetAttribute($name, $value) inherited from XMLNode</string><docblock><description><![CDATA[<p>Set an attribute to the node</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$name]]></variable><description><![CDATA[<p>The attribute name</p>]]></description></param><param><types><type><![CDATA[mixed]]></type></types><variable><![CDATA[$value]]></variable><description><![CDATA[<p>The attribute value</p>]]></description></param></params></docblock><params><param><name>name</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$name</string></param><param><name>value</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$value</string></param></params></method><method><name>SetAttributes</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public SetAttributes($attributes) inherited from XMLNode</string><docblock><description><![CDATA[<p>Set attributes to the node</p>]]></description><params><param><types><type><![CDATA[array]]></type></types><variable><![CDATA[$attr]]></variable><description><![CDATA[<p>Associative array</p>]]></description></param></params><return><types><type><![CDATA[void]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>attributes</name><value/><reference/><optional/><class/><array/><nullable/><string>$attributes</string></param></params></method><method><name>InnerXML</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public InnerXML() inherited from XMLNode</string><docblock><description><![CDATA[<p>Returns the contents of the node without the node it self.</p>]]></description><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>__toString</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static/><declaring-class>XMLNode</declaring-class><inherited>1</inherited><string>public __toString() inherited from XMLNode</string><docblock><description><![CDATA[<p>Cast this object to string.</p>]]></description><see><types><type><![CDATA[<a href='?__plibclass=XMLNode#method-Render'>XMLNode::Render()</a>]]></type></types><description><![CDATA[]]></description></see><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method></methods><properties><property><name>type</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $type</string><docblock><description><![CDATA[<p>Type</p>]]></description><var><![CDATA[int]]></var></docblock></property><property><name>doc</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $doc</string><docblock><description><![CDATA[<p>The <a href='http://php.net/manual-lookup.php?pattern=DOMDocument&amp;lang=en'>DOMDocument</a></p>]]></description><var><![CDATA[DOMDocument]]></var></docblock></property><property><name>version</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $version</string><docblock><description><![CDATA[<p>The version attribute of the XML declaration</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>encoding</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $encoding</string><docblock><description><![CDATA[<p>Document encoding</p>]]></description><var><![CDATA[string]]></var></docblock></property><property><name>node</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $node</string><docblock><description><![CDATA[<p>The real DOMElement node</p>]]></description><var><![CDATA[DOMElement]]></var></docblock></property><property><name>owner</name><value><![CDATA[]]></value><default>1</default><visibility>protected</visibility><static/><type>null</type><string>protected $owner</string><docblock><description><![CDATA[<p>The owner document</p>]]></description><var><![CDATA[XMLDocument]]></var></docblock></property></properties></class><class><name>Ent</name><type>class</type><abstract/><final/><instantiable>1</instantiable><extends/><string>class Ent</string><implements/><docblock><description><![CDATA[<p>XML/HTML entities</p>]]></description><author><![CDATA[Pontus Östlund &#60;pontus@poppa.se&#62;]]></author><package><![CDATA[XML]]></package></docblock><methods><method><name>AllEntities</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Ent</declaring-class><inherited/><string>public static AllEntities()</string><docblock><description><![CDATA[<p>Return all entities</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AllKeys</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Ent</declaring-class><inherited/><string>public static AllKeys()</string><docblock><description><![CDATA[<p>Return all entity keys</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>AllValues</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Ent</declaring-class><inherited/><string>public static AllValues()</string><docblock><description><![CDATA[<p>Return all entity values</p>]]></description><return><types><type><![CDATA[array]]></type></types><description><![CDATA[]]></description></return></docblock><params/></method><method><name>ReplaceHtml</name><constructor/><destructor/><abstract/><visibility>public</visibility><final/><reference/><static>1</static><declaring-class>Ent</declaring-class><inherited/><string>public static ReplaceHtml($text)</string><docblock><description><![CDATA[<p>Replace all HTML entities in $text with the XML counter parts</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param></params></method></methods><properties><property><name>iso88591</name><value><![CDATA[array (
  '&nbsp;' => ' ',
  '&iexcl;' => '¡',
  '&cent;' => '¢',
  '&pound;' => '£',
  '&curren;' => '¤',
  '&yen;' => '¥',
  '&brvbar;' => '¦',
  '&sect;' => '§',
  '&uml;' => '¨',
  '&copy;' => '©',
  '&ordf;' => 'ª',
  '&laquo;' => '«',
  '&not;' => '¬',
  '&shy;' => '­',
  '&reg;' => '®',
  '&macr;' => '¯',
  '&deg;' => '°',
  '&plusmn;' => '±',
  '&sup2;' => '²',
  '&sup3;' => '³',
  '&acute;' => '´',
  '&micro;' => 'µ',
  '&para;' => '¶',
  '&middot;' => '·',
  '&cedil;' => '¸',
  '&sup1;' => '¹',
  '&ordm;' => 'º',
  '&raquo;' => '»',
  '&frac14;' => '¼',
  '&frac12;' => '½',
  '&frac34;' => '¾',
  '&iquest;' => '¿',
  '&Agrave;' => 'À',
  '&Aacute;' => 'Á',
  '&Acirc;' => 'Â',
  '&Atilde;' => 'Ã',
  '&Auml;' => 'Ä',
  '&Aring;' => 'Å',
  '&AElig;' => 'Æ',
  '&Ccedil;' => 'Ç',
  '&Egrave;' => 'È',
  '&Eacute;' => 'É',
  '&Ecirc;' => 'Ê',
  '&Euml;' => 'Ë',
  '&Igrave;' => 'Ì',
  '&Iacute;' => 'Í',
  '&Icirc;' => 'Î',
  '&Iuml;' => 'Ï',
  '&ETH;' => 'Ð',
  '&Ntilde;' => 'Ñ',
  '&Ograve;' => 'Ò',
  '&Oacute;' => 'Ó',
  '&Ocirc;' => 'Ô',
  '&Otilde;' => 'Õ',
  '&Ouml;' => 'Ö',
  '&times;' => '×',
  '&Oslash;' => 'Ø',
  '&Ugrave;' => 'Ù',
  '&Uacute;' => 'Ú',
  '&Ucirc;' => 'Û',
  '&Uuml;' => 'Ü',
  '&Yacute;' => 'Ý',
  '&THORN;' => 'Þ',
  '&szlig;' => 'ß',
  '&agrave;' => 'à',
  '&aacute;' => 'á',
  '&acirc;' => 'â',
  '&atilde;' => 'ã',
  '&auml;' => 'ä',
  '&aring;' => 'å',
  '&aelig;' => 'æ',
  '&ccedil;' => 'ç',
  '&egrave;' => 'è',
  '&eacute;' => 'é',
  '&ecirc;' => 'ê',
  '&euml;' => 'ë',
  '&igrave;' => 'ì',
  '&iacute;' => 'í',
  '&icirc;' => 'î',
  '&iuml;' => 'ï',
  '&eth;' => 'ð',
  '&ntilde;' => 'ñ',
  '&ograve;' => 'ò',
  '&oacute;' => 'ó',
  '&ocirc;' => 'ô',
  '&otilde;' => 'õ',
  '&ouml;' => 'ö',
  '&divide;' => '÷',
  '&oslash;' => 'ø',
  '&ugrave;' => 'ù',
  '&uacute;' => 'ú',
  '&ucirc;' => 'û',
  '&uuml;' => 'ü',
  '&yacute;' => 'ý',
  '&thorn;' => 'þ',
  '&yuml;' => 'ÿ',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $iso88591</string><docblock><description><![CDATA[<p>ISO-8859-1 entitites</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>international</name><value><![CDATA[array (
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $international</string><docblock><description><![CDATA[<p>International entities</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>symbols</name><value><![CDATA[array (
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $symbols</string><docblock><description><![CDATA[<p>Symbols</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>greek</name><value><![CDATA[array (
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $greek</string><docblock><description><![CDATA[<p>Greek entitites</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>html</name><value><![CDATA[array (
  0 => '&quot;',
  1 => '&apos;',
  2 => '&amp;',
  3 => '&lt;',
  4 => '&gt;',
  5 => '&nbsp;',
  6 => '&iexcl;',
  7 => '&curren;',
  8 => '&cent;',
  9 => '&pound;',
  10 => '&yen;',
  11 => '&brvbar;',
  12 => '&sect;',
  13 => '&uml;',
  14 => '&copy;',
  15 => '&ordf;',
  16 => '&laquo;',
  17 => '&not;',
  18 => '&shy;',
  19 => '&reg;',
  20 => '&trade;',
  21 => '&macr;',
  22 => '&deg;',
  23 => '&plusmn;',
  24 => '&sup2;',
  25 => '&sup3;',
  26 => '&acute;',
  27 => '&micro;',
  28 => '&para;',
  29 => '&middot;',
  30 => '&cedil;',
  31 => '&sup1;',
  32 => '&ordm;',
  33 => '&raquo;',
  34 => '&frac14;',
  35 => '&frac12;',
  36 => '&frac34;',
  37 => '&iquest;',
  38 => '&times;',
  39 => '&divide;',
  40 => '&Agrave;',
  41 => '&Aacute;',
  42 => '&Acirc;',
  43 => '&Atilde;',
  44 => '&Auml;',
  45 => '&Aring;',
  46 => '&AElig;',
  47 => '&Ccedil;',
  48 => '&Egrave;',
  49 => '&Eacute;',
  50 => '&Ecirc;',
  51 => '&Euml;',
  52 => '&Igrave;',
  53 => '&Iacute;',
  54 => '&Icirc;',
  55 => '&Iuml;',
  56 => '&ETH;',
  57 => '&Ntilde;',
  58 => '&Ograve;',
  59 => '&Oacute;',
  60 => '&Ocirc;',
  61 => '&Otilde;',
  62 => '&Ouml;',
  63 => '&Oslash;',
  64 => '&Ugrave;',
  65 => '&Uacute;',
  66 => '&Ucirc;',
  67 => '&Uuml;',
  68 => '&Yacute;',
  69 => '&THORN;',
  70 => '&szlig;',
  71 => '&agrave;',
  72 => '&aacute;',
  73 => '&acirc;',
  74 => '&atilde;',
  75 => '&auml;',
  76 => '&aring;',
  77 => '&aelig;',
  78 => '&ccedil;',
  79 => '&egrave;',
  80 => '&eacute;',
  81 => '&ecirc;',
  82 => '&euml;',
  83 => '&igrave;',
  84 => '&iacute;',
  85 => '&icirc;',
  86 => '&iuml;',
  87 => '&eth;',
  88 => '&ntilde;',
  89 => '&ograve;',
  90 => '&oacute;',
  91 => '&ocirc;',
  92 => '&otilde;',
  93 => '&ouml;',
  94 => '&oslash;',
  95 => '&ugrave;',
  96 => '&uacute;',
  97 => '&ucirc;',
  98 => '&uuml;',
  99 => '&yacute;',
  100 => '&thorn;',
  101 => '&yuml;',
  102 => '&OElig;',
  103 => '&oelig;',
  104 => '&Scaron;',
  105 => '&scaron;',
  106 => '&Yuml;',
  107 => '&circ;',
  108 => '&tilde;',
  109 => '&ensp;',
  110 => '&emsp;',
  111 => '&thinsp;',
  112 => '&zwnj;',
  113 => '&zwj;',
  114 => '&lrm;',
  115 => '&rlm;',
  116 => '&ndash;',
  117 => '&mdash;',
  118 => '&lsquo;',
  119 => '&rsquo;',
  120 => '&sbquo;',
  121 => '&ldquo;',
  122 => '&rdquo;',
  123 => '&bdquo;',
  124 => '&dagger;',
  125 => '&Dagger;',
  126 => '&hellip;',
  127 => '&permil;',
  128 => '&lsaquo;',
  129 => '&rsaquo;',
  130 => '&euro;',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $html</string><docblock><description><![CDATA[<p>HTML entities</p>]]></description><var><![CDATA[array]]></var></docblock></property><property><name>xml</name><value><![CDATA[array (
  0 => '&#34;',
  1 => '&#39;',
  2 => '&#38;',
  3 => '&#60;',
  4 => '&#62;',
  5 => '&#160;',
  6 => '&#161;',
  7 => '&#164;',
  8 => '&#162;',
  9 => '&#163;',
  10 => '&#165;',
  11 => '&#166;',
  12 => '&#167;',
  13 => '&#168;',
  14 => '&#169;',
  15 => '&#170;',
  16 => '&#171;',
  17 => '&#172;',
  18 => '&#173;',
  19 => '&#174;',
  20 => '&#8482;',
  21 => '&#175;',
  22 => '&#176;',
  23 => '&#177;',
  24 => '&#178;',
  25 => '&#179;',
  26 => '&#180;',
  27 => '&#181;',
  28 => '&#182;',
  29 => '&#183;',
  30 => '&#184;',
  31 => '&#185;',
  32 => '&#186;',
  33 => '&#187;',
  34 => '&#188;',
  35 => '&#189;',
  36 => '&#190;',
  37 => '&#191;',
  38 => '&#215;',
  39 => '&#247;',
  40 => '&#192;',
  41 => '&#193;',
  42 => '&#194;',
  43 => '&#195;',
  44 => '&#196;',
  45 => '&#197;',
  46 => '&#198;',
  47 => '&#199;',
  48 => '&#200;',
  49 => '&#201;',
  50 => '&#202;',
  51 => '&#203;',
  52 => '&#204;',
  53 => '&#205;',
  54 => '&#206;',
  55 => '&#207;',
  56 => '&#208;',
  57 => '&#209;',
  58 => '&#210;',
  59 => '&#211;',
  60 => '&#212;',
  61 => '&#213;',
  62 => '&#214;',
  63 => '&#216;',
  64 => '&#217;',
  65 => '&#218;',
  66 => '&#219;',
  67 => '&#220;',
  68 => '&#221;',
  69 => '&#222;',
  70 => '&#223;',
  71 => '&#224;',
  72 => '&#225;',
  73 => '&#226;',
  74 => '&#227;',
  75 => '&#228;',
  76 => '&#229;',
  77 => '&#230;',
  78 => '&#231;',
  79 => '&#232;',
  80 => '&#233;',
  81 => '&#234;',
  82 => '&#235;',
  83 => '&#236;',
  84 => '&#237;',
  85 => '&#238;',
  86 => '&#239;',
  87 => '&#240;',
  88 => '&#241;',
  89 => '&#242;',
  90 => '&#243;',
  91 => '&#244;',
  92 => '&#245;',
  93 => '&#246;',
  94 => '&#248;',
  95 => '&#249;',
  96 => '&#250;',
  97 => '&#251;',
  98 => '&#252;',
  99 => '&#253;',
  100 => '&#254;',
  101 => '&#255;',
  102 => '&#338;',
  103 => '&#339;',
  104 => '&#352;',
  105 => '&#353;',
  106 => '&#376;',
  107 => '&#710;',
  108 => '&#732;',
  109 => '&#8194;',
  110 => '&#8195;',
  111 => '&#8201;',
  112 => '&#8204;',
  113 => '&#8205;',
  114 => '&#8206;',
  115 => '&#8207;',
  116 => '&#8211;',
  117 => '&#8212;',
  118 => '&#8216;',
  119 => '&#8217;',
  120 => '&#8218;',
  121 => '&#8220;',
  122 => '&#8221;',
  123 => '&#8222;',
  124 => '&#8224;',
  125 => '&#8225;',
  126 => '&#8230;',
  127 => '&#8240;',
  128 => '&#8249;',
  129 => '&#8250;',
  130 => '&#8364;',
)]]></value><default>1</default><visibility>public</visibility><static>1</static><type>array</type><string>public static array $xml</string><docblock><description><![CDATA[<p>XML entitites</p>]]></description><var><![CDATA[array]]></var></docblock></property></properties></class><function><name>safe_xml</name><internal/><reference/><string>safe_xml($text [, $utf8Encode])</string><docblock><description><![CDATA[<p>Converts $text into safe XML text</p>]]></description><params><param><types><type><![CDATA[string]]></type></types><variable><![CDATA[$text]]></variable><description><![CDATA[]]></description></param></params><return><types><type><![CDATA[string]]></type></types><description><![CDATA[]]></description></return></docblock><params><param><name>text</name><value/><reference/><optional/><class/><array/><nullable>1</nullable><string>$text</string></param><param><name>utf8Encode</name><value/><reference/><optional>1</optional><class/><array/><nullable>1</nullable><string>$utf8Encode</string></param></params></function></module></namespace></namespace></plib>
