HTTP/1.1 200 OK
Content-Type: text/xml; charset=UTF-8
X-Reader-Google-Version: 513-000
Date: Mon, 06 Sep 2010 22:26:52 GMT
Expires: Mon, 06 Sep 2010 22:26:52 GMT
Cache-Control: private, max-age=0
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Server: GSE
Connection: close

<?xml version="1.0"?><feed xmlns:idx="urn:atom-extension:indexing" xmlns:media="http://search.yahoo.com/mrss/" xmlns:gr="http://www.google.com/schemas/reader/atom/" xmlns="http://www.w3.org/2005/Atom" idx:index="no" gr:dir="ltr"><!--
Content-type: Preventing XSRF in IE.

--><generator uri="http://www.google.com/reader">Google Reader</generator><id>tag:google.com,2005:reader/user/02508248305230665679/state/com.google/broadcast</id><link rel="hub" href="http://pubsubhubbub.appspot.com/"/><title>Pontus' shared items in Google Reader</title><link rel="self" href="http://www.google.com/reader/public/atom/user/02508248305230665679/state/com.google/broadcast"/><author><name>Pontus</name></author><updated>2010-01-21T07:51:14Z</updated><entry gr:crawl-timestamp-msec="1264060274614"><id gr:original-id="http://www.poppa.se/blog/?p=355">tag:google.com,2005:reader/item/15cbafa460606df4</id><category term="Applications"/><category term="Programming"/><category term="C#"/><category term="Textifyer"/><title type="html">Extracting text from PDFs</title><published>2010-01-11T16:24:09Z</published><updated>2010-01-11T16:24:09Z</updated><link rel="alternate" href="http://www.poppa.se/blog/extracting-text-from-pdfs/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;&lt;img src="http://www.poppa.se/blog/data/images/textifyer-3.png/530" alt="Unwanted line breaks in text copied from PDF"&gt;&lt;br&gt;
&lt;small&gt;&lt;em&gt;Unwanted line breaks in text copied from PDF&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Anybody working with information sooner or later have to copy and paste text from PDF-files. And anybody who has done that knows what a pain in the a** that is! You get actual line breaks from the visual line breaks in the PDF. The other day I began a job where I have to copy and paste text from a whole bunch of PDF files and it didn’t take long before I almost exploded with anger &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So I thought:&lt;/strong&gt; Why not make a simple application that extracts the text from the PDF and – to the most possible degree – normalizes the unwanted line breaks.&lt;/p&gt;
&lt;h2&gt;And then there was Textifyer&lt;/h2&gt;
&lt;p&gt;So I fired up &lt;em&gt;Visual C# Express&lt;/em&gt; and started hacking. I soon found the &lt;a href="http://www.pdfbox.org"&gt;PDFbox&lt;/a&gt; component – using &lt;a href="http://ikvm.net"&gt;IKVM.NET&lt;/a&gt; – and it didn’t take long before I had some code that actually extracted the text from a PDF file. (&lt;a href="http://www.codeproject.com/KB/string/pdf2text.aspx"&gt;a PDF extraction in C#  howto&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I figured out how to detect unwanted line breaks: Each line with an unwanted line break ends with a space character. Lines with a wanted line break doesn’t (in 99% of the cases). So it is just a matter of of looping over the lines and if it ends with a space skip adding a line break and just append it to the previous text buffer. &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.poppa.se/blog/data/images/textifyer-2.png/530" alt="Unwanted line breaks removed"&gt;&lt;br&gt;
&lt;small&gt;&lt;em&gt;Unwanted line breaks removed&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;So now I just have to clean up the interface and bug test the program – which will happen automatically since I’m copy and paste from a whole bunch of PDFs at the moment. When I feel it’s working alright I will release the program. It’s really nothing hardcore about it anyway &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src="http://www.poppa.se/blog/data/images/textifyer.png/530" alt="Textifyer: Drag-n-drop enabled"&gt;&lt;br&gt;
&lt;small&gt;&lt;em&gt;Of course there’s drag-n-drop support!&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1264060211141"><id gr:original-id="http://www.poppa.se/blog/?p=368">tag:google.com,2005:reader/item/e6569b1143501d07</id><category term="Applications"/><category term="Linux"/><category term="Roxen"/><category term="Gnome"/><category term="GTK"/><category term="Vala"/><title type="html">Roxen Application Launcher 0.4.4</title><published>2010-01-13T22:58:28Z</published><updated>2010-01-13T22:58:28Z</updated><link rel="alternate" href="http://www.poppa.se/blog/roxen-application-launcher-0-4-4/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;So, here’s a new release of the Roxen Application Launcher for Linux (RAL). The previous versions used my home made (sloppy so) HTTP client which didn’t handle redirects or secure connections – thank you &lt;a href="http://www.poppa.se/blog/new-roxen-application-launcher-for-linux-written-in-vala/#comments"&gt;tec&lt;/a&gt; for the feed back – since I had some major problems getting &lt;code&gt;libsoup&lt;/code&gt; working with binary files like images and such. Binary files was heavily scrambled when read from or written to disk so I made my own simple HTTP client that kept the data as a byte array to prevent some underlying libraries (GLib) from fiddling with it.&lt;/p&gt;
&lt;p&gt;But I solved the &lt;code&gt;libsoup&lt;/code&gt; issue so now the RAL handles redirects and secure connections. This is how I solved it:&lt;/p&gt;
&lt;h2&gt;The &lt;code&gt;libsoup&lt;/code&gt; issue&lt;/h2&gt;
&lt;p&gt;When uploading a file back to the &lt;a href="http://roxen.com"&gt;Roxen&lt;/a&gt; server I use &lt;code&gt;IOChannel (g_io_channel in plain C)&lt;/code&gt; instead of &lt;code&gt;Gio&lt;/code&gt;. So the upload works like this:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="vala"&gt;
var sess = new Soup.SessionSync();
var mess = new Soup.Message("PUT", get_uri());
mess.request_headers.append("Cookie", get_cookie());
mess.request_headers.append("Translate", "f");

IOChannel ch = new IOChannel.file(local_file, "r");
ch.set_encoding(null); // Enables reading of binary data
string data;
size_t len;
ch.read_to_end(out data, out len);

mess.request_body.append(Soup.MemoryUse.COPY, data, len);
sess.send_message(mess);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that seems to work like a charm!&lt;/p&gt;
&lt;p&gt;When downloading data it’s a bit more tricky! Of course I tried using &lt;code&gt;IOChannel&lt;/code&gt; in this case also but that made no difference. Downloaded images ended up 4 bytes long! But then I thought: You can make your own C bindings in Vala (remember the Vala compiler generates C code) through what is called Vapi files. So what I did was writing a C function that takes a &lt;code&gt;SoupMessageBody&lt;/code&gt; object/struct passed from Vala and writes the data part to a file given as argument.&lt;/p&gt;
&lt;pre&gt;&lt;code lang="cpp"&gt;
gboolean save_soup_data(SoupMessageBody *data, const char *file)
{
  FILE *fh;

  if ((fh = fopen(file, &amp;quot;w&amp;quot;)) == NULL) {
    fprintf(stderr, &amp;quot;Unable to open file \&amp;quot;%s\&amp;quot; for writing!\n&amp;quot;, file);
    return FALSE;
  }

  int wrote = fwrite(data-&amp;gt;data, 1, data-&amp;gt;length, fh);

  if (wrote != (int)data-&amp;gt;length) {
    fprintf(stderr, &amp;quot;wrote (%d) != data-&amp;gt;length (%d). Data may have been &amp;quot;
                    &amp;quot;truncated&amp;quot;, wrote, (int)data-&amp;gt;length);
  }

  fclose(fh);
  return TRUE;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this was then made available to Vala by the following Vapi file:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="vala"&gt;
[CCode (cprefix = "", lower_case_cprefix = "", cheader_filename = "")]
namespace Soppa // Soppa is Swedish for Soup &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt;
{
  [CCode (cname = "save_soup_data")]
  public bool save_soup_data(Soup.MessageBody data, string file);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this is how the actual Vala code downloading the files looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="vala"&gt;
var sess = new Soup.SessionSync();
var mess = new Soup.Message("GET", get_uri());
mess.request_headers.append("Cookie", get_cookie());
mess.request_headers.append("Translate", "f");
sess.send_message(mess);

if (mess.status_code == Soup.KnownStatusCode.OK) {
  // Here I call the C function made available through the Vapi file
  if (Soppa.save_soup_data(mess.response_body, local_file)) {
    message("The file was downloaded and written to disk OK");
  }
  else {
    message("Failed writing data to disk!");
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So that’s that on that! &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt; &lt;/p&gt;
&lt;h2&gt;The notification&lt;/h2&gt;
&lt;p&gt;&lt;img src="http://www.poppa.se/blog/data/images/libnotify.png"&gt; I also – just for fun – implemented a notification mechanism through &lt;code&gt;libnotify&lt;/code&gt;. Since I believe that can be rather annoying it’s not activated by default but can easily be activated by a checkbox in the user interface.&lt;/p&gt;
&lt;h2&gt;The packages&lt;/h2&gt;
&lt;p&gt;The Roxen Application Launcher for Linux can be downloaded at the &lt;a href="http://github.com/poppa/Roxen-Application-Launcher/downloads"&gt;&lt;strong&gt;download page&lt;/strong&gt;&lt;/a&gt; at &lt;a href="http://github.com"&gt;Github&lt;/a&gt; where also the &lt;a href="http://github.com/poppa/Roxen-Application-Launcher"&gt;&lt;strong&gt;work in progress sources&lt;/strong&gt;&lt;/a&gt; is available or downloaded below!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.poppa.se/blog/data/roxenlauncher-0.4.4.tar.gz"&gt;Roxen Application Launcher 0.4.4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stay black!&lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1263461503455"><id gr:original-id="http://www.tekniskaverken.se/om_oss/nyheter/2010/1/1262940995/index.xml">tag:google.com,2005:reader/item/0e8561a494308374</id><title type="html">Tekniska Verken bidrar till att minska effektbristen</title><published>2010-01-08T08:59:07Z</published><updated>2010-01-08T08:59:07Z</updated><link rel="alternate" href="http://www.tekniskaverken.se/om_oss/nyheter/2010/1/1262940995/index.xml" type="text/html"/><summary xml:base="http://www.tekniskaverken.se/om_oss/nyheter/" type="html">&lt;p&gt;Elnätet i Sverige är ansträngt till följd av kylan och förväntas vara så även under nästa vecka. Svenska Kraftnät har aktiverat den s k effektreserven för att tillgodose effektbehovet i det nationella nätet. Tekniska Verken bidrar till att mildra situationen genom att optimera alla sina elproducerande anläggningar och sätta in resurser som inte annars är i drift. Dessutom ser koncernen över all egen elkonsumtion och ser till att inget som inte är nödvändigt för verksamheten drar el. Koncernen har även uppmanat alla medarbetare att dra ner så mycket som möjligt på elförbrukningen.&lt;/p&gt;</summary><author gr:unknown-author="true"><name>(author unknown)</name></author><source gr:stream-id="feed/http://www.tekniskaverken.se/rss/feeds/tvab-nyheter.xml"><id>tag:google.com,2005:reader/feed/http://www.tekniskaverken.se/rss/feeds/tvab-nyheter.xml</id><title type="html">Nyheter från Tekniska Verken</title><link rel="alternate" href="http://www.tekniskaverken.se/om_oss/nyheter/" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1256510950856"><id gr:original-id="http://www.poppa.se/blog/?p=268">tag:google.com,2005:reader/item/ed14fecae15c2133</id><category term="Linux"/><category term="Programming"/><category term="C#"/><category term="Gnome"/><category term="Mono"/><category term="Vala"/><title type="html">Vala – the new programming language for Gnome</title><published>2009-10-25T21:29:59Z</published><updated>2009-10-25T21:29:59Z</updated><link rel="alternate" href="http://www.poppa.se/blog/vala-the-new-programming-language-for-gnome/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;This Friday when I read the last issue (in Sweden) of &lt;a href="http://www.linuxformat.co.uk/"&gt;Linux Format&lt;/a&gt; there was an article on a new programming language named &lt;a href="http://live.gnome.org/Vala/"&gt;Vala&lt;/a&gt;. The goal for Vala is to provide a modern programming language for, primarily, developing &lt;a href="http://www.gnome.org/"&gt;Gnome&lt;/a&gt; applications. There is of course &lt;a href="http://www.mono-project.com/"&gt;Mono&lt;/a&gt;, but Vala doesn’t run in a virtual machine but is complied to machine code. But Vala resembles C# syntactically and has borrowed a lot of concepts from C#.&lt;/p&gt;
&lt;p&gt;From what I understand Vala code is first translated into plain old C code, and then compiled with the ordinary GCC compiler. The benefit is that you don’t have to get head aches about memory management and so forth.&lt;/p&gt;
&lt;p&gt;Vala seems pretty interesting and I downloaded it and compiled it without any difficulties. There are precompiled packages for most Linux distros – it’s available in the Ubuntu repository – but since Vala is new and still under development the distro packages is far behind in version.&lt;/p&gt;
&lt;p&gt;There’s also &lt;a href="http://www.valaide.org/"&gt;a Vala IDE&lt;/a&gt; and &lt;a href="http://live.gnome.org/Vala/#head-6c397c4077ef096e78ea90d62f6d511a82e1e9ea"&gt;plugins for GEdit, Anjuta and Eclipse&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Anyway, just to try Vala out I made a little program – using &lt;a href="http://www.valaide.org/"&gt;Val(a)ide&lt;/a&gt; – that changes the desktop wallpaper on a per interval basis. Send the program a path to a directory with images and the background will change among those images every &lt;code&gt;*nth&lt;/code&gt; minutes.&lt;/p&gt;
&lt;p&gt;This program needs &lt;a href="http://live.gnome.org/Libgee"&gt;&lt;code&gt;libgee&lt;/code&gt;&lt;/a&gt; which at the moment needs to be added manually.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Compile: valac --pkg gconf-2.0 --pkg gee-1.0 --pkg gio-2.0 main.vala -o wallpaper-iterator&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code lang="vala"&gt;
/* main.vala
 *
 * Copyright (C) 2009 Pontus Östlund 
 *
 * No license what so ever. Do what ever you like...
 *
 * Author:
 * 	Pontus Östlund 
 */

// GLib isn&amp;#39;t really neccessary since it&amp;#39;s imported automatically
using GLib, Gee, GConf;

/**
 * User defined exception types
 */
errordomain IOError {
	FILE_NOT_FOUND,
	NOT_A_DIRECTORY
}

/**
 * Main class
 */
public class Main
{
	/**
	 * Used as reference in option parser
	 */
	static int arg_delay;

	/**
	 * Application command line options
	 */
	const OptionEntry[] options = {
		{ &amp;quot;delay&amp;quot;, &amp;#39;d&amp;#39;, 0, OptionArg.INT, ref arg_delay,
			&amp;quot;Number of minutes to wait before swapping background&amp;quot;, null },
		{ null }
	};

	/**
	 * Main method
	 *
	 * @param args
	 *  Command line arguments
	 */
  public static int main (string[] args)
  {
		try {
			var opt = new OptionContext(&amp;quot;\&amp;quot;/path/to/wallpapers\&amp;quot;&amp;quot;);
			opt.set_help_enabled(true);
			opt.add_main_entries(options, null);
			opt.parse(ref args);
		}
		catch (GLib.Error e) {
			stderr.printf(&amp;quot;Error: %s\n&amp;quot;, e.message);
			stderr.printf(&amp;quot;Run &amp;#39;%s --help&amp;#39; to see a full list of available &amp;quot;+
			              &amp;quot;options\n&amp;quot;, args[0]);
			return 1;
		}

		if (args.length &amp;lt; 2) {
			stderr.printf(&amp;quot;Missing argument!\n&amp;quot;);
			stderr.printf(&amp;quot;Run &amp;#39;%s --help&amp;#39; for usage\n&amp;quot;, args[0]);
			return 1;
		}

		// Default time before changing background is 30 minutes
		int delay = arg_delay &amp;gt; 0 ? arg_delay*60 : 60*30;

		try {
			WallpaperIterator bg = new WallpaperIterator(args[1], delay);
			bg.run();
			bg.stop();
		}
		catch (IOError e) {
			stderr.printf(&amp;quot;Error: %s\n&amp;quot;, e.message);
			return 1;
		}
		finally {
			stderr.printf(&amp;quot;Finally block reached!\n&amp;quot;);
		}

    return 0;
  }
}

/**
 * Class that handles changeing of desktop wallpapers on a per interval way
 */
public class WallpaperIterator : GLib.Object
{
	/**
	 * Number of seconds to wait before changeing wallpaper
	 */
	private int delay = 0;
	/**
	 * Current index in the images list
	 */
	private int index = 0;
	/**
	 * List of images to change between
	 */
	private ArrayList files = new ArrayList();
	/**
	 * List of allowed content types
	 */
	private ArrayList allow = new ArrayList();
	/**
	 * GConf client object
	 */
	private GConf.Client gclient = null;
	/**
	 * GConf registry where the background image is set
	 */
	private string gconf_key = &amp;quot;/desktop/gnome/background/picture_filename&amp;quot;;
	/**
	 * Background being used when the application is started
	 */
	private string default_bg = null;

	/**
	 * Constructor
	 *
	 * @param dir
	 *  The directory to collect wallpapers in
	 * @param delay
	 *  Time to wait - in seconds - before swapping wallpaper
	 */
	public WallpaperIterator(string dir, int delay)
		throws IOError
	{
		assert(delay &amp;gt; 0);

		allow.add(&amp;quot;image/jpeg&amp;quot;);
		allow.add(&amp;quot;image/png&amp;quot;);

		var f = File.new_for_path(dir);

		if (!f.query_exists(null))
			throw new IOError.FILE_NOT_FOUND(&amp;quot; \&amp;quot;%s\&amp;quot; doesn&amp;#39;t exits!&amp;quot;.printf(dir));

		if (f.query_file_type(0, null) != FileType.DIRECTORY) {
			throw new IOError.NOT_A_DIRECTORY(&amp;quot; \&amp;quot;%s\&amp;quot; is not a directory!&amp;quot;
			                                  .printf(dir));
		}

		collect(f.get_path());

		if (files.size &amp;lt; 2) {
			warning(&amp;quot;Not enough images found for this application to be useful!\n&amp;quot;);
			return;
		}

		this.delay = delay;
	}

	/**
	 * Run the application. Starts a MainLoop
	 */
	public void run()
	{
		gclient = GConf.Client.get_default();
		default_bg = gclient.get_string(gconf_key);

		MainLoop loop = new MainLoop(null, false);
		var time = new TimeoutSource(delay*1000);
		time.set_callback(() =&amp;gt; { swap(); });
		time.attach(loop.get_context());
		loop.run();
	}

	/**
	 * Stop the application. Tries to reset the background
	 */
	public void stop()
	{
		try {
			if (default_bg != null)
				gclient.set_string(gconf_key, default_bg);
		}
		catch (GLib.Error e) {
			warning(&amp;quot;Failed to restore background!\n&amp;quot;);
		}
	}

	/**
	 * Does the actual background swapping
	 */
	private void swap()
	{
		if (index &amp;gt;= files.size) {
			debug(&amp;quot;Restart...\n&amp;quot;);
			index = 0;
		}

		debug(&amp;quot;Callback...%-2d (%s)\n&amp;quot;, index, files[index]);

		try {
			gclient.set_string(gconf_key, files[index]);
		}
		catch (GLib.Error e) {
			warning(&amp;quot;Failed to set background: %s\n&amp;quot;, e.message);
		}
		index++;
	}

	/**
	 * Collect images
	 *
	 * @param path
	 */
	private void collect(string path)
	{
		try {
			var dir = File.new_for_path(path).enumerate_children(
				&amp;quot;standard::name,standard::type,standard::content-type&amp;quot;,
				0, null
			);

			FileInfo fi;
			string fp;
			while ((fi = dir.next_file(null)) != null) {
				fp = path + &amp;quot;/&amp;quot; + fi.get_name();
				if (fi.get_file_type() == FileType.DIRECTORY)
					collect(fp);
				else {
					if (fi.get_content_type() in allow)
						files.add(fp);
					else
						warning(&amp;quot;Skipping \&amp;quot;%s\&amp;quot; due to unallowed content type\n&amp;quot;, fp);
				}
			}
		}
		catch (GLib.Error e) {
			warning(&amp;quot;Error: %s\n&amp;quot;, e.message);
		}
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think Vala looks promising and I will try it out trying to write a more complex application when I find the time.&lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1256250994823"><id gr:original-id="/blog/?p=263">tag:google.com,2005:reader/item/7ad7add586ad1037</id><category term="User Science"/><category term="Roxen"/><category term="Usability"/><title type="html">Useful 404 page</title><published>2009-10-22T13:10:31Z</published><updated>2009-10-22T13:10:31Z</updated><link rel="alternate" href="http://www.poppa.se/blog/useful-404-page/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;I read an article on &lt;a href="http://alistapart.com/"&gt;A List Apart&lt;/a&gt; about creating “&lt;a href="http://alistapart.com/articles/amoreuseful404"&gt;A More Useful 404&lt;/a&gt;”. I also think that it’s important to give better feedback to the visitor who ends up on a missing page. But I think that the customized 404 page should differ remarkably from the original site layout so that there’s no doubt about you’ve ended up on a “missing” page. I’ve seen 404 pages that are impossible to tell apart from the site and it can take quite some time before you realize you’ve reached a dead end.&lt;/p&gt;
&lt;p&gt;I’ve used a customized 404 page on our sites at work almost since day one. The feedback to the visitor can be better but I have an email function – like suggested in the article at A List Apart – that sends an email to me, telling which URL the visitor tried to access and which URL the visitor came from, when someone reaches a missing page from a link, internal or external.&lt;/p&gt;
&lt;p&gt;And I must say that this function is really, really helpful. If the broken link is on another site I usually send them an email notifying them about the problem and giving them the correct link – sometimes you just need to re-structure your site, even though it should be avoided when possible – and mostly they appreciate it and alter their link immediately. Also, when re-structuring, it’s easy to miss a few of your own internal links and with the little email notification the problem can be fixed right away.&lt;/p&gt;
&lt;p&gt;In &lt;a href="http://www.roxen.com/"&gt;Roxen&lt;/a&gt; (the CMS we use at work) terms, all that needs to be done is adding this little snippet to the 404 page template in the administration site, under the “settings” tab for the site in question.&lt;/p&gt;
&lt;pre&gt;&lt;code lang="rxml"&gt;

  Requested URL: &amp;amp;page.virtfile;
  Referring URL: &amp;amp;client.referrer;
  ---
  UA: &amp;amp;client.fullname;

&lt;/code&gt;&lt;/pre&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1256050182471"><id gr:original-id="/blog/?p=254">tag:google.com,2005:reader/item/4d4a812f59bba206</id><category term="Programming"/><category term="PHP"/><category term="Pike"/><category term="Serendipity"/><title type="html">Merging associative arrays in PHP</title><published>2009-10-19T22:16:50Z</published><updated>2009-10-19T22:16:50Z</updated><link rel="alternate" href="http://www.poppa.se/blog/merging-associative-arrays-in-php/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;It’s nice when &lt;a href="http://en.wikipedia.org/wiki/Serendipity"&gt;serendipity&lt;/a&gt; is your friend! I was porting my &lt;a href="http://bit.ly/"&gt;Bitly&lt;/a&gt; class from &lt;a href="http://pike.ida.liu.se"&gt;Pike&lt;/a&gt; to &lt;a href="http://php.net"&gt;PHP&lt;/a&gt; – I know there’s probably a hundred PHP classes already out there, but mine is better coded &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt;  – and noted by accident that I had used some Pike syntax in my PHP class but it was working anyway. So what was I doing? In Pike there’s separate data type for associative arrays called &lt;code&gt;mapping&lt;/code&gt;. In Pike, in general, when merging two objects you just join them with a &lt;code&gt;+&lt;/code&gt; sign. Thus merging two mappings you do like&lt;/p&gt;
&lt;pre&gt;&lt;code lang="pike"&gt;
mapping m1 = ([ &amp;quot;key1&amp;quot; : &amp;quot;Value 1&amp;quot;, &amp;quot;key2&amp;quot; : &amp;quot;Value 2&amp;quot; ]);
mapping m2 = ([ &amp;quot;key3&amp;quot; : &amp;quot;Value 3&amp;quot; ]);

write(&amp;quot;My mapping: %O\n&amp;quot;, m1 + m2);
//&amp;gt; My mapping: ([ /* 3 elements */
//&amp;gt;   &amp;quot;key1&amp;quot;: &amp;quot;Value 1&amp;quot;,
//&amp;gt;   &amp;quot;key2&amp;quot;: &amp;quot;Value 2&amp;quot;,
//&amp;gt;   &amp;quot;key3&amp;quot;: &amp;quot;Value 3&amp;quot;
//&amp;gt; ])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I noted that I had done the same thing in PHP and the result was perfectly valid:&lt;/p&gt;
&lt;pre&gt;&lt;code lang="php"&gt;
$a1 = array(&amp;quot;key1&amp;quot; =&amp;gt; &amp;quot;Value 1&amp;quot;, &amp;quot;key2&amp;quot; =&amp;gt; &amp;quot;Value 2&amp;quot;);
$a2 = array(&amp;quot;key3&amp;quot; =&amp;gt; &amp;quot;Value 3&amp;quot;);

echo &amp;quot;My mapping: &amp;quot;;
print_r($a1 + $a2);
//&amp;gt; My mapping: Array
//&amp;gt; (
//&amp;gt;     [key1] =&amp;gt; Value 1
//&amp;gt;     [key2] =&amp;gt; Value 2
//&amp;gt;     [key3] =&amp;gt; Value 3
//&amp;gt; )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method doesn’t work on flat array though so there you’ll still have to use &lt;code&gt;&lt;a href="http://php.net/array_merge"&gt;array_merge()&lt;/a&gt;&lt;/code&gt;, but pretty nice anyway.&lt;/p&gt;
&lt;p&gt;And oh, the PHP Bitly class will be part of the new &lt;a href="http://www.poppa.se/blog/projects/#plib"&gt;PLib&lt;/a&gt; release once done!&lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1255991330995"><id gr:original-id="http://tirania.org/blog/archive/2009/Oct-19.html">tag:google.com,2005:reader/item/e62c1d52ab6e294f</id><title type="html">10 years of Ximian</title><published>2009-10-20T00:28:00Z</published><updated>2009-10-20T00:28:00Z</updated><link rel="alternate" href="http://tirania.org/blog/archive/2009/Oct-19.html" type="text/html"/><summary xml:base="http://tirania.org/blog/index.html" type="html">&lt;p&gt;&lt;img src="http://primates.ximian.com/~miguel/pictures/ximian_logo.png" align="right"&gt;Today is the ten year anniversary of the
	incorporation of Ximian, Inc.  A company founded
	by &lt;a href="http://nat.org"&gt;Nat Friedman&lt;/a&gt; and myself whose
	goal was to advance the state of the Linux desktop.   It was
	also an excuse for Nat and myself to hang out as we had become
	best friends forever in the previous two years.

	&lt;p&gt;Our conversations over the years have always been a little
	surreal.   I have megabytes worth of logs that look like this:

	&lt;center&gt;
	&lt;img src="http://tirania.org/shots/09101902503tyqgdqq.png"&gt;
	&lt;/center&gt;

	&lt;p&gt;Ximian was made up of friends that shared this vision, and
	its founders had no startup, business or management experience
	when we launched the company.   We learned on the job and we
	were advised by friends that believed in our goals, and by
	people that cared about our mission.

	&lt;center&gt;
	&lt;img src="http://tirania.org/shots/0910190252GPKJ7O4M.png"&gt;
	&lt;p&gt;From the archive: Ettore Perazzoli, Raph Levien,
	Nat and myself in Summer of Linux.
	&lt;/p&gt;&lt;/center&gt;

	&lt;p&gt;Ximian hired 90% of its employees from open source contributors
	in the community and folks that we had met over mailing lists
	or IRC channels.   

	&lt;p&gt;Nat was a Computer Science and Math graduate; I was a math
	drop out and we had no management experience. This means that
	we made every possible management mistake in the book, but all
	of our friends and employees stuck with us as we learned and
	as we worked to get the company off the ground.

	&lt;p&gt;This is an interesting time to reflect on 10 years of
	hacking adventures.   Writing, funding and advancing the state
	of the art of open source.  In the next few weeks, Nat and
	myself will be publishing some short stories from Ximian.

	&lt;center&gt;
	&lt;img src="http://tirania.org/shots/0909251310SLjMV6f9.png"&gt;
	&lt;/center&gt;

	&lt;p&gt;Today Ximian has been incorporated into Novell.  Our goals
	have been expanded, but we still continue to work to advance
	the state of the art in Linux.

	&lt;p&gt;Looking forward to another 10 years of joy and hacking.&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</summary><author><name>miguel@gnome.org (Miguel de Icaza)</name></author><gr:likingUser>07722984530808541557</gr:likingUser><gr:likingUser>09119489043272070157</gr:likingUser><gr:likingUser>08392955845371413060</gr:likingUser><gr:likingUser>12214453770000512782</gr:likingUser><gr:likingUser>02818161012133932591</gr:likingUser><gr:likingUser>06461731979684867824</gr:likingUser><gr:likingUser>05377422705966764624</gr:likingUser><gr:likingUser>13115697961961005784</gr:likingUser><gr:likingUser>03478349376735525061</gr:likingUser><gr:likingUser>18420606871078161854</gr:likingUser><gr:likingUser>08248196848406724157</gr:likingUser><gr:likingUser>03865215848201857234</gr:likingUser><gr:likingUser>03323088538712444707</gr:likingUser><gr:likingUser>12511118279443641437</gr:likingUser><gr:likingUser>03302027830645681718</gr:likingUser><gr:likingUser>09766342838232781328</gr:likingUser><gr:likingUser>06616001652454822035</gr:likingUser><gr:likingUser>08943234206945465921</gr:likingUser><gr:likingUser>10022753127456328230</gr:likingUser><gr:likingUser>06922227836565480237</gr:likingUser><gr:likingUser>07898228861115721951</gr:likingUser><gr:likingUser>12401782744629076196</gr:likingUser><gr:likingUser>00741039496666985272</gr:likingUser><gr:likingUser>02508248305230665679</gr:likingUser><gr:likingUser>00295555856191376730</gr:likingUser><gr:likingUser>16180866505332375631</gr:likingUser><gr:likingUser>15474578300717451045</gr:likingUser><gr:likingUser>07171487490709895049</gr:likingUser><gr:likingUser>08060419678676185941</gr:likingUser><gr:likingUser>01410376718958781879</gr:likingUser><gr:likingUser>03389814627309729125</gr:likingUser><source gr:stream-id="feed/http://tirania.org/blog/miguel.rss2"><id>tag:google.com,2005:reader/feed/http://tirania.org/blog/miguel.rss2</id><title type="html">Miguel de Icaza</title><link rel="alternate" href="http://tirania.org/blog/index.html" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1255907886091"><id gr:original-id="/blog/?p=251">tag:google.com,2005:reader/item/0ccec2f4f207ee90</id><category term="Misc"/><category term="MySQL"/><category term="Netbeans"/><category term="Wordpress"/><title type="html">Annoying Wordpress thing…</title><published>2009-10-18T20:18:02Z</published><updated>2009-10-18T20:18:02Z</updated><link rel="alternate" href="http://www.poppa.se/blog/annoying-wordpress-thing/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;It seems Wordpress is hard coding the domain name into the database. How smart is that, or have I missed something? When I first set the site up on my local development server I soon noticed that various links were written hard with the domain and everything. Obviously that would f**k thing up once the site was moved to the public server. So I went into the settings and saw that there were two fields – Wordpress address and Blog address – containing absolute paths. So I changed them to relative onces, e.g &lt;code&gt;/blog&lt;/code&gt; instead of &lt;code&gt;http://strindberg.loc/blog&lt;/code&gt; and things seemed to work properly.&lt;/p&gt;
&lt;p&gt;Now I just realized that the &lt;code&gt;guid&lt;/code&gt;s in the RSS feed pointed to my development server. I looked in the database table and saw that there were hard coded references to &lt;code&gt;http://strindberg.loc&lt;/code&gt;. So with a little &lt;code&gt;UPDATE wp_posts SET guid = REPLACE(guid, 'strindberg.loc', 'www.poppa.se')&lt;/code&gt; I thought I had solved the problem. But then I realized some other &lt;code&gt;guid&lt;/code&gt;s in the RSS is generated on the fly, and they get f**ked up since the &lt;code&gt;Wordpress address&lt;/code&gt; now is relative and thus some &lt;code&gt;guid&lt;/code&gt;s looks like &lt;code&gt;http:///blog/some-url/&lt;/code&gt;. Is that good or what?&lt;/p&gt;
&lt;p&gt;And try to figure out how to find out where those &lt;code&gt;guid&lt;/code&gt;s gets generated. My idea was to find where they are generated and there insert the &lt;code&gt;HOST&lt;/code&gt; dynamically, but since there’s a zillion &lt;code&gt;apply_filter(...)&lt;/code&gt; it’s virtually impossible to find where the shit gets generated (thanks to &lt;a href="http://netbeans.org"&gt;Netbeans&lt;/a&gt; it’s otherwise simple to follow the chain of execution. Just &lt;code&gt;ctrl+click&lt;/code&gt; on a function call and the source of that function will be loaded.)&lt;/p&gt;
&lt;p&gt;Ok, so now I have to put on my Sherlock hat and see if I can solve this. I find it hard to believe you shouldn’t be able to move a Wordpress site from one domain to another without having to work your ass off!&lt;/p&gt;
&lt;p&gt;If anyone have a solution – it’s perfectly possible I’m missing out on something here – I’m happy to know!&lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1255876507009"><id gr:original-id="http://tirania.org/blog/archive/2009/Sep-09.html">tag:google.com,2005:reader/item/0598a323bad7e895</id><title type="html">MonoDevelop 2.2 Beta 1: We go cross platform.</title><published>2009-09-10T03:30:00Z</published><updated>2009-09-10T03:30:00Z</updated><link rel="alternate" href="http://tirania.org/blog/archive/2009/Sep-09.html" type="text/html"/><summary xml:base="http://tirania.org/blog/index.html" type="html">&lt;p&gt;&lt;img src="http://primates.ximian.com/~miguel/pictures/homer-o.jpg" align="right"&gt;MonoDevelop goes cross platform.

	&lt;p&gt;Since the beginning of time, man has yearned to get a cross platform
	.NET IDE.   Homer's Odyssey described one man's effort to
	achieve such a thing.   And it was not until today, September
	9th of 2009 that the world can test out such a tool.

	&lt;p&gt;With this release MonoDevelop leaves its cozy Linux nest
	and embarks on a wild adventure into the hearth of MacOS and
	Windows.   The MonoDevelop team made this one of their major
	goals for this release: to turn our loved IDE into a cross
	platform IDE.

	&lt;p&gt;If you are curious about the details, check out
	the &lt;a href="http://monodevelop.com/index.php?title=Download/What&amp;#39;s_new_in_MonoDevelop_2.2"&gt;What
	is new in MonoDevelop 2.2&lt;/a&gt; page.

&lt;p&gt;&lt;center&gt;&lt;a href="http://tirania.org/blog/pic.php?name=SteticWin32.png&amp;amp;caption=%20MonoDevelop%20on%20Windows"&gt;&lt;img border="0" src="http://primates.ximian.com/~miguel/pictures/small-SteticWin32.png"&gt;&lt;/a&gt;&lt;p&gt; MonoDevelop on Windows&lt;/p&gt;&lt;/center&gt;&lt;/p&gt;
	&lt;p&gt;We are not only bringing MonoDevelop to OSX and Windows as
	a plain GUI port, but we are also providing installers, deep
	operating system integration and support for native debugging
	on each platform.
	
&lt;p&gt;&lt;center&gt;&lt;a href="http://tirania.org/blog/pic.php?name=MacMainMenu.png&amp;amp;caption=%20MonoDevelop%20on%20MacOS%20X"&gt;&lt;img border="0" src="http://primates.ximian.com/~miguel/pictures/small-MacMainMenu.png"&gt;&lt;/a&gt;&lt;p&gt; MonoDevelop on MacOS X&lt;/p&gt;&lt;/center&gt;&lt;/p&gt;
	&lt;p&gt;In addition to becoming a cross platform IDE, there are
	many new features in MonoDevelop.

	&lt;p&gt;For instance, MonoDevelop can be used to develop ASP.NET
	MVC applications on OSX and Linux and Silverlight applications
	on OSX and Linux.

&lt;h3&gt;Debugger&lt;/h3&gt;

	&lt;p&gt;MonoDevelop now
	has &lt;a href="http://monodevelop.com/Download/What&amp;#39;s_new_in_MonoDevelop_2.2#Debugger"&gt;integrated
	debugger support&lt;/a&gt;.  Not only it is able to debug Mono
	applications, it also can work as a frontend to GDB to debug
	native applications.

	&lt;p&gt;In addition, on Linux it is possible to debug ASP.NET
	pages.

&lt;h3&gt;New Add-ins&lt;/h3&gt;

	&lt;p&gt;New exciting add-ins: ASP.NET MVC, Silverlight and iPhone
	(for use with MonoTouch).
	
&lt;h3&gt;Policies&lt;/h3&gt;

	&lt;p&gt;A common problem that we face as open source developers is
	that not every project uses the same coding style.   Different
	teams use different coding conventions.   MonoDevelop now
	supports policies to describe how files should be edited and
	what defaults should be used in each:

	&lt;center&gt;
	&lt;img src="http://monodevelop.com/@api/deki/files/242/=Captura-OptionsFormatting.png" width="600"&gt;
	&lt;/center&gt;

&lt;h3&gt;Editor Improvements&lt;/h3&gt;

	&lt;p&gt;My favorite new feature is Dynamic Abbrev (Alt-/) a feature
	that we brought from Emacs and that fills me with joy.   That
	being said, for the non-Emacs lovers there are plenty of
	features that you asked for, and that we implemented:

	&lt;ul&gt;
		&lt;li&gt;Extensive &lt;a href="http://monodevelop.com/Download/What%27s_new_in_MonoDevelop_2.2#Refactoring"&gt;refactoring
		support&lt;/a&gt;.  And I mean, it is &lt;b&gt;extensive&lt;/b&gt;.

		&lt;li&gt;Code templates.

		&lt;li&gt;On the fly formatting.

		&lt;li&gt;Acronym Matching in Code Completion

		&lt;li&gt;XML Documentation Shown in Code Completion

		&lt;li&gt;VI mode for those users hooked up on VI commands,
		they can now use those within MonoDevelop.

	&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;

	&lt;p&gt;Another pretty cool feature is the code generation support
	that is triggered with Alt-Insert.   When you press Alt-insert
	it will popup a context sensitive dialog box that offers a few
	options of code that could be generated at this point:
	ToString methods, Equals/GetHashCode methods all based on
	existing fields and properties. 

&lt;h3&gt;Why go Cross Platform?&lt;/h3&gt;

	&lt;p&gt;Going cross platform means that developers will have the
	same tool across all of the operating systems they use:
	Windows, Mac and Linux.

	&lt;p&gt;.NET developers that have been enchanted by OSX will be
	able to continue developing software with their favorite
	programming languages while enjoying OSX and will be able to
	go back and forth between Windows, OSX and Linux as needed.
	This also means that they can work with developers in other
	platforms, regardless of the personal choices of other team
	members. 

	&lt;p&gt;As many of you know, the number of contributors to a
	project is linked to the number of users of that project.   By
	expanding our market presence from Linux, we expect to
	get contributions, fixes, improvements, bug reports, code and
	add-ins from developers in other platforms.

	&lt;p&gt;We intend to make MonoDevelop the Eclipse of the .NET
	community.   Just like Eclipse became the foundation for Java
	development, we hope that MonoDevelop will become the
	foundation for .NET development, and hopefully for much more
	than that.

&lt;h3&gt;A multi-system IDE&lt;/h3&gt;

	&lt;p&gt;We are not religious when it comes to supporting other
	programming languages [1].  We want to embrace not only
	.NET-based projects like Gtk#, Silverlight, ASP.NET, Boo, C#,
	F#, Visual Basic and Windows.Forms.  We are also embracing
	other developer platforms like Python, C/C++, Vala, and we
	want to expand our presence to work with the Flash, PHP, Ruby,
	Rails, Flex and any other communities that need a cross
	platform IDE.

	&lt;p&gt;[1] we are just religious about the fact that C# is a
	better programming language to build an IDE than Java is.

&lt;h3&gt;Thanks!&lt;/h3&gt;

	&lt;p&gt;This release could not have been possible without the
	endless nights and the collaborations of
	our &lt;a href="http://monodevelop.com/Download/What%27s_new_in_MonoDevelop_2.2#Credits"&gt;contributors&lt;/a&gt;
	and all of the end users that reported bugs and gave us
	feedback.&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</summary><author><name>miguel@gnome.org (Miguel de Icaza)</name></author><gr:likingUser>18158899507117698729</gr:likingUser><gr:likingUser>08712824520880483704</gr:likingUser><gr:likingUser>01925411628795275034</gr:likingUser><gr:likingUser>12357130616262447906</gr:likingUser><gr:likingUser>10197103080477430800</gr:likingUser><gr:likingUser>02522501341949674670</gr:likingUser><gr:likingUser>11858999213025063745</gr:likingUser><gr:likingUser>11049431870793153768</gr:likingUser><gr:likingUser>10731478729458128238</gr:likingUser><gr:likingUser>05492709201669955441</gr:likingUser><gr:likingUser>02354404336995335379</gr:likingUser><gr:likingUser>04743632254861496710</gr:likingUser><gr:likingUser>11772924599212772231</gr:likingUser><gr:likingUser>14869240027906394130</gr:likingUser><gr:likingUser>17807462899626982791</gr:likingUser><gr:likingUser>03329150345383886083</gr:likingUser><gr:likingUser>03722724917979759452</gr:likingUser><gr:likingUser>17549745624925955487</gr:likingUser><gr:likingUser>06213476106731771154</gr:likingUser><gr:likingUser>09646450788824864518</gr:likingUser><gr:likingUser>17109275473959712547</gr:likingUser><gr:likingUser>03574876011699235961</gr:likingUser><gr:likingUser>05915207076465751862</gr:likingUser><gr:likingUser>07818239118715986734</gr:likingUser><gr:likingUser>16654731997437621762</gr:likingUser><gr:likingUser>01260198319981336196</gr:likingUser><gr:likingUser>06072392250716236106</gr:likingUser><gr:likingUser>06631834828746817910</gr:likingUser><gr:likingUser>07539792629547384740</gr:likingUser><gr:likingUser>06914466445576344098</gr:likingUser><gr:likingUser>07219900969464696833</gr:likingUser><gr:likingUser>03374310638591789896</gr:likingUser><gr:likingUser>11821355092376837737</gr:likingUser><gr:likingUser>13249326232862361893</gr:likingUser><gr:likingUser>16441426341088249273</gr:likingUser><gr:likingUser>00321597721557820145</gr:likingUser><gr:likingUser>16385376386024328335</gr:likingUser><gr:likingUser>01410376718958781879</gr:likingUser><source gr:stream-id="feed/http://tirania.org/blog/miguel.rss2"><id>tag:google.com,2005:reader/feed/http://tirania.org/blog/miguel.rss2</id><title type="html">Miguel de Icaza</title><link rel="alternate" href="http://tirania.org/blog/index.html" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1255876396466"><id gr:original-id="http://tirania.org/blog/archive/2009/Oct-12.html">tag:google.com,2005:reader/item/3589d7da3d5c5ce0</id><title type="html">Git# - First Public Release</title><published>2009-10-13T04:57:00Z</published><updated>2009-10-13T04:57:00Z</updated><link rel="alternate" href="http://tirania.org/blog/archive/2009/Oct-12.html" type="text/html"/><summary xml:base="http://tirania.org/blog/index.html" type="html">&lt;p&gt;Meinrad Recheis has lead the effort to bring a full managed
	GIT implementation to the .NET and Mono worlds and
	he &lt;a href="http://groups.google.com/group/gitsharp/browse_thread/thread/5b488e4f65e5300f"&gt;just
	announced&lt;/a&gt; the release
	of &lt;a href="http://www.eqqon.com/index.php/GitSharp"&gt;GitSharp&lt;/a&gt;
	0.1.3, the first public release of Git#.

	&lt;p&gt;The code is based on the original work from Kevin Thompson
	who ported the JGit Eclipse plugin to C#.   Meinrad has put
	together a great community of contributors that integrated
	every JGit improvement, the credits for the first release are
	as follows:

	&lt;ul&gt;
	&lt;li&gt;Dave Cameron: for fixing bugs
	&lt;li&gt;Björn Carlson: for killing bugs that crept into the core
	&lt;li&gt;caytchen:  for porting huge parts of the transport layer, and hunting down nasty bugs. btw, what's your real name?
	&lt;li&gt;Emeric Fermas: for eliminating some of the hardest to find bugs and for verifying the complete test suite against jgit
	&lt;li&gt;Martinho Fernandes: for fixing bugs
	&lt;li&gt;Andriano Machado: for porting massive amounts of code and tests, also fixing many bugs
	&lt;li&gt;Jim Radford: for the continuous integration server account and the support
	&lt;li&gt;Gil Ran: for porting and fixing lots of tests and initial efforts on Mono
	&lt;li&gt;Dan Rigby: for porting and fixing tests
	&lt;li&gt;rolenun: for the command line interface framework. hey, what is your real name?
	&lt;li&gt;Mauricio Scheffer: for the testing and build server expertise and CI server trouble shooting
	&lt;li&gt;Neil Stalker: for holding up the flag for git# on Mono compatibility and squashing bugs
	&lt;li&gt;Kevin Thompson: for initially porting large amounts of code and letting me rise the baby
	&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;

	
	&lt;p&gt;An easy to use API is being developed on top of the GIT
	core, check out some of
	the &lt;a href="http://www.eqqon.com/index.php/GitSharp/Examples"&gt;examples&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;</summary><author><name>miguel@gnome.org (Miguel de Icaza)</name></author><gr:likingUser>02522501341949674670</gr:likingUser><gr:likingUser>06461731979684867824</gr:likingUser><gr:likingUser>05377422705966764624</gr:likingUser><gr:likingUser>02354404336995335379</gr:likingUser><gr:likingUser>18330606908010207304</gr:likingUser><gr:likingUser>07082553485825865842</gr:likingUser><gr:likingUser>15641971868132542994</gr:likingUser><gr:likingUser>11305203207624218185</gr:likingUser><gr:likingUser>13269553628081609113</gr:likingUser><gr:likingUser>03302027830645681718</gr:likingUser><gr:likingUser>16066077947860113686</gr:likingUser><gr:likingUser>03501374082889910480</gr:likingUser><gr:likingUser>12609100401351979619</gr:likingUser><gr:likingUser>15312855310661871940</gr:likingUser><gr:likingUser>11919857257562678397</gr:likingUser><gr:likingUser>14352309450540460053</gr:likingUser><gr:likingUser>16671002588179970970</gr:likingUser><gr:likingUser>14050130605405435554</gr:likingUser><gr:likingUser>15140239910597479409</gr:likingUser><gr:likingUser>10558337186149084692</gr:likingUser><gr:likingUser>02508248305230665679</gr:likingUser><gr:likingUser>07539792629547384740</gr:likingUser><gr:likingUser>16441426341088249273</gr:likingUser><gr:likingUser>02920638525180409239</gr:likingUser><gr:likingUser>13698539527814486112</gr:likingUser><gr:likingUser>16491747524444851614</gr:likingUser><gr:likingUser>02309822942690320304</gr:likingUser><source gr:stream-id="feed/http://tirania.org/blog/miguel.rss2"><id>tag:google.com,2005:reader/feed/http://tirania.org/blog/miguel.rss2</id><title type="html">Miguel de Icaza</title><link rel="alternate" href="http://tirania.org/blog/index.html" type="text/html"/></source></entry><entry gr:crawl-timestamp-msec="1255876309088"><id gr:original-id="/blog/?p=233">tag:google.com,2005:reader/item/271e5473ef97e490</id><category term="Misc"/><category term="Wordpress"/><title type="html">Finally a new site!</title><published>2009-10-17T16:57:23Z</published><updated>2009-10-17T16:57:23Z</updated><link rel="alternate" href="http://www.poppa.se/blog/finally-a-new-site/" type="text/html"/><content xml:base="http://www.poppa.se/blog" type="html">&lt;p&gt;&lt;img title="" src="http://www.poppa.se/blog/wp-content/uploads/2009/10/poppa-se-2.png/530" alt="New version of poppa.se"&gt;&lt;/p&gt;
&lt;p&gt;It hit me I hadn’t done anything to my site for three years. After all I’m a web developer and some kind of standard must be met and kept!&lt;/p&gt;
&lt;p&gt;The previous version of this site was built on my home cooked blog application. But that was written three years ago and you learn, and develop skills, a lot over three years, so I didn’t feel like reusing it and it was kind of limited regarding lots of stuff – like social networkning – that has emerged over the past few years.&lt;/p&gt;
&lt;p&gt;Since I’m an open source advocat I decided to live as I learn and went for &lt;a title="Wordpress web site" href="http://wordpress.org/"&gt;Wordpress&lt;/a&gt;. It was really simple to setup and the admin interface is rather uncluttered and easy to use. Although I’m not too fond of how the backbone of Wordpress is coded and structured it’s fairly easy to bolt on your own functionality.&lt;/p&gt;
&lt;p&gt;Hopefully this new version of the site will make me write more than two posts a year, but I wouldn’t bet on it &lt;img src="http://www.poppa.se/blog/wp-includes/images/smilies/icon_wink.gif" alt=";)"&gt; &lt;/p&gt;</content><author><name>Pontus</name></author><source gr:stream-id="feed/http://www.poppa.se/blog/feed/"><id>tag:google.com,2005:reader/feed/http://www.poppa.se/blog/feed/</id><title type="html">Pontus Östlund</title><link rel="alternate" href="http://www.poppa.se/blog" type="text/html"/></source></entry></feed>